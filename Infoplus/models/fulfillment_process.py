# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class FulfillmentProcess(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        FulfillmentProcess - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'process_no': 'int',
            'work_batch_id': 'int',
            'warehouse_id': 'int',
            'fulfillment_plan_id': 'int',
            'pick_scan_scheme_id': 'int',
            'status': 'str',
            'order_smart_filter_id': 'int',
            'location_smart_filter_id': 'int',
            'order_limit': 'int',
            'number_of_orders': 'int',
            'number_of_lines': 'int',
            'number_of_sk_us': 'int',
            'completed_picks': 'int',
            'total_picks': 'int',
            'shipped_casebreaks': 'int',
            'total_casebreaks_to_ship': 'int',
            'shipped_orders': 'int',
            'total_orders_to_ship': 'int',
            'completed_to_do': 'int',
            'total_to_do': 'int',
            'create_pick_work': 'bool',
            'picking_rule': 'str',
            'layout_rule': 'str',
            'pick_sort_rule': 'str',
            'first_pick_position': 'int',
            'pick_list_format': 'str',
            'pick_list_layout': 'str',
            'pick_list_group': 'str',
            'pick_list_sort': 'str',
            'pick_summary_format': 'str',
            'pick_summary_layout': 'str',
            'pick_summary_sort': 'str',
            'create_pick_summary': 'bool',
            'create_pick_list': 'bool',
            'pre_generate_parcel_labels': 'bool',
            'ship_date': 'datetime',
            'auto_ship_casebreak_cartons': 'bool',
            'cartonize_orders': 'bool',
            'create_packing_slip': 'bool',
            'override_packing_slip_template_id': 'int',
            'create_order_assembly_guide': 'bool',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'process_no': 'processNo',
            'work_batch_id': 'workBatchId',
            'warehouse_id': 'warehouseId',
            'fulfillment_plan_id': 'fulfillmentPlanId',
            'pick_scan_scheme_id': 'pickScanSchemeId',
            'status': 'status',
            'order_smart_filter_id': 'orderSmartFilterId',
            'location_smart_filter_id': 'locationSmartFilterId',
            'order_limit': 'orderLimit',
            'number_of_orders': 'numberOfOrders',
            'number_of_lines': 'numberOfLines',
            'number_of_sk_us': 'numberOfSKUs',
            'completed_picks': 'completedPicks',
            'total_picks': 'totalPicks',
            'shipped_casebreaks': 'shippedCasebreaks',
            'total_casebreaks_to_ship': 'totalCasebreaksToShip',
            'shipped_orders': 'shippedOrders',
            'total_orders_to_ship': 'totalOrdersToShip',
            'completed_to_do': 'completedToDo',
            'total_to_do': 'totalToDo',
            'create_pick_work': 'createPickWork',
            'picking_rule': 'pickingRule',
            'layout_rule': 'layoutRule',
            'pick_sort_rule': 'pickSortRule',
            'first_pick_position': 'firstPickPosition',
            'pick_list_format': 'pickListFormat',
            'pick_list_layout': 'pickListLayout',
            'pick_list_group': 'pickListGroup',
            'pick_list_sort': 'pickListSort',
            'pick_summary_format': 'pickSummaryFormat',
            'pick_summary_layout': 'pickSummaryLayout',
            'pick_summary_sort': 'pickSummarySort',
            'create_pick_summary': 'createPickSummary',
            'create_pick_list': 'createPickList',
            'pre_generate_parcel_labels': 'preGenerateParcelLabels',
            'ship_date': 'shipDate',
            'auto_ship_casebreak_cartons': 'autoShipCasebreakCartons',
            'cartonize_orders': 'cartonizeOrders',
            'create_packing_slip': 'createPackingSlip',
            'override_packing_slip_template_id': 'overridePackingSlipTemplateId',
            'create_order_assembly_guide': 'createOrderAssemblyGuide',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._process_no = None
        self._work_batch_id = None
        self._warehouse_id = None
        self._fulfillment_plan_id = None
        self._pick_scan_scheme_id = None
        self._status = None
        self._order_smart_filter_id = None
        self._location_smart_filter_id = None
        self._order_limit = None
        self._number_of_orders = None
        self._number_of_lines = None
        self._number_of_sk_us = None
        self._completed_picks = None
        self._total_picks = None
        self._shipped_casebreaks = None
        self._total_casebreaks_to_ship = None
        self._shipped_orders = None
        self._total_orders_to_ship = None
        self._completed_to_do = None
        self._total_to_do = None
        self._create_pick_work = False
        self._picking_rule = None
        self._layout_rule = None
        self._pick_sort_rule = None
        self._first_pick_position = None
        self._pick_list_format = None
        self._pick_list_layout = None
        self._pick_list_group = None
        self._pick_list_sort = None
        self._pick_summary_format = None
        self._pick_summary_layout = None
        self._pick_summary_sort = None
        self._create_pick_summary = False
        self._create_pick_list = False
        self._pre_generate_parcel_labels = False
        self._ship_date = None
        self._auto_ship_casebreak_cartons = False
        self._cartonize_orders = False
        self._create_packing_slip = False
        self._override_packing_slip_template_id = None
        self._create_order_assembly_guide = False
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this FulfillmentProcess.


        :return: The id of this FulfillmentProcess.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this FulfillmentProcess.


        :param id: The id of this FulfillmentProcess.
        :type: int
        """
        self._id = id

    @property
    def create_date(self):
        """
        Gets the create_date of this FulfillmentProcess.


        :return: The create_date of this FulfillmentProcess.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this FulfillmentProcess.


        :param create_date: The create_date of this FulfillmentProcess.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this FulfillmentProcess.


        :return: The modify_date of this FulfillmentProcess.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this FulfillmentProcess.


        :param modify_date: The modify_date of this FulfillmentProcess.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def process_no(self):
        """
        Gets the process_no of this FulfillmentProcess.


        :return: The process_no of this FulfillmentProcess.
        :rtype: int
        """
        return self._process_no

    @process_no.setter
    def process_no(self, process_no):
        """
        Sets the process_no of this FulfillmentProcess.


        :param process_no: The process_no of this FulfillmentProcess.
        :type: int
        """
        self._process_no = process_no

    @property
    def work_batch_id(self):
        """
        Gets the work_batch_id of this FulfillmentProcess.


        :return: The work_batch_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._work_batch_id

    @work_batch_id.setter
    def work_batch_id(self, work_batch_id):
        """
        Sets the work_batch_id of this FulfillmentProcess.


        :param work_batch_id: The work_batch_id of this FulfillmentProcess.
        :type: int
        """
        self._work_batch_id = work_batch_id

    @property
    def warehouse_id(self):
        """
        Gets the warehouse_id of this FulfillmentProcess.


        :return: The warehouse_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """
        Sets the warehouse_id of this FulfillmentProcess.


        :param warehouse_id: The warehouse_id of this FulfillmentProcess.
        :type: int
        """
        self._warehouse_id = warehouse_id

    @property
    def fulfillment_plan_id(self):
        """
        Gets the fulfillment_plan_id of this FulfillmentProcess.


        :return: The fulfillment_plan_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._fulfillment_plan_id

    @fulfillment_plan_id.setter
    def fulfillment_plan_id(self, fulfillment_plan_id):
        """
        Sets the fulfillment_plan_id of this FulfillmentProcess.


        :param fulfillment_plan_id: The fulfillment_plan_id of this FulfillmentProcess.
        :type: int
        """
        self._fulfillment_plan_id = fulfillment_plan_id

    @property
    def pick_scan_scheme_id(self):
        """
        Gets the pick_scan_scheme_id of this FulfillmentProcess.


        :return: The pick_scan_scheme_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._pick_scan_scheme_id

    @pick_scan_scheme_id.setter
    def pick_scan_scheme_id(self, pick_scan_scheme_id):
        """
        Sets the pick_scan_scheme_id of this FulfillmentProcess.


        :param pick_scan_scheme_id: The pick_scan_scheme_id of this FulfillmentProcess.
        :type: int
        """
        self._pick_scan_scheme_id = pick_scan_scheme_id

    @property
    def status(self):
        """
        Gets the status of this FulfillmentProcess.


        :return: The status of this FulfillmentProcess.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this FulfillmentProcess.


        :param status: The status of this FulfillmentProcess.
        :type: str
        """
        self._status = status

    @property
    def order_smart_filter_id(self):
        """
        Gets the order_smart_filter_id of this FulfillmentProcess.


        :return: The order_smart_filter_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._order_smart_filter_id

    @order_smart_filter_id.setter
    def order_smart_filter_id(self, order_smart_filter_id):
        """
        Sets the order_smart_filter_id of this FulfillmentProcess.


        :param order_smart_filter_id: The order_smart_filter_id of this FulfillmentProcess.
        :type: int
        """
        self._order_smart_filter_id = order_smart_filter_id

    @property
    def location_smart_filter_id(self):
        """
        Gets the location_smart_filter_id of this FulfillmentProcess.


        :return: The location_smart_filter_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._location_smart_filter_id

    @location_smart_filter_id.setter
    def location_smart_filter_id(self, location_smart_filter_id):
        """
        Sets the location_smart_filter_id of this FulfillmentProcess.


        :param location_smart_filter_id: The location_smart_filter_id of this FulfillmentProcess.
        :type: int
        """
        self._location_smart_filter_id = location_smart_filter_id

    @property
    def order_limit(self):
        """
        Gets the order_limit of this FulfillmentProcess.


        :return: The order_limit of this FulfillmentProcess.
        :rtype: int
        """
        return self._order_limit

    @order_limit.setter
    def order_limit(self, order_limit):
        """
        Sets the order_limit of this FulfillmentProcess.


        :param order_limit: The order_limit of this FulfillmentProcess.
        :type: int
        """
        self._order_limit = order_limit

    @property
    def number_of_orders(self):
        """
        Gets the number_of_orders of this FulfillmentProcess.


        :return: The number_of_orders of this FulfillmentProcess.
        :rtype: int
        """
        return self._number_of_orders

    @number_of_orders.setter
    def number_of_orders(self, number_of_orders):
        """
        Sets the number_of_orders of this FulfillmentProcess.


        :param number_of_orders: The number_of_orders of this FulfillmentProcess.
        :type: int
        """
        self._number_of_orders = number_of_orders

    @property
    def number_of_lines(self):
        """
        Gets the number_of_lines of this FulfillmentProcess.


        :return: The number_of_lines of this FulfillmentProcess.
        :rtype: int
        """
        return self._number_of_lines

    @number_of_lines.setter
    def number_of_lines(self, number_of_lines):
        """
        Sets the number_of_lines of this FulfillmentProcess.


        :param number_of_lines: The number_of_lines of this FulfillmentProcess.
        :type: int
        """
        self._number_of_lines = number_of_lines

    @property
    def number_of_sk_us(self):
        """
        Gets the number_of_sk_us of this FulfillmentProcess.


        :return: The number_of_sk_us of this FulfillmentProcess.
        :rtype: int
        """
        return self._number_of_sk_us

    @number_of_sk_us.setter
    def number_of_sk_us(self, number_of_sk_us):
        """
        Sets the number_of_sk_us of this FulfillmentProcess.


        :param number_of_sk_us: The number_of_sk_us of this FulfillmentProcess.
        :type: int
        """
        self._number_of_sk_us = number_of_sk_us

    @property
    def completed_picks(self):
        """
        Gets the completed_picks of this FulfillmentProcess.


        :return: The completed_picks of this FulfillmentProcess.
        :rtype: int
        """
        return self._completed_picks

    @completed_picks.setter
    def completed_picks(self, completed_picks):
        """
        Sets the completed_picks of this FulfillmentProcess.


        :param completed_picks: The completed_picks of this FulfillmentProcess.
        :type: int
        """
        self._completed_picks = completed_picks

    @property
    def total_picks(self):
        """
        Gets the total_picks of this FulfillmentProcess.


        :return: The total_picks of this FulfillmentProcess.
        :rtype: int
        """
        return self._total_picks

    @total_picks.setter
    def total_picks(self, total_picks):
        """
        Sets the total_picks of this FulfillmentProcess.


        :param total_picks: The total_picks of this FulfillmentProcess.
        :type: int
        """
        self._total_picks = total_picks

    @property
    def shipped_casebreaks(self):
        """
        Gets the shipped_casebreaks of this FulfillmentProcess.


        :return: The shipped_casebreaks of this FulfillmentProcess.
        :rtype: int
        """
        return self._shipped_casebreaks

    @shipped_casebreaks.setter
    def shipped_casebreaks(self, shipped_casebreaks):
        """
        Sets the shipped_casebreaks of this FulfillmentProcess.


        :param shipped_casebreaks: The shipped_casebreaks of this FulfillmentProcess.
        :type: int
        """
        self._shipped_casebreaks = shipped_casebreaks

    @property
    def total_casebreaks_to_ship(self):
        """
        Gets the total_casebreaks_to_ship of this FulfillmentProcess.


        :return: The total_casebreaks_to_ship of this FulfillmentProcess.
        :rtype: int
        """
        return self._total_casebreaks_to_ship

    @total_casebreaks_to_ship.setter
    def total_casebreaks_to_ship(self, total_casebreaks_to_ship):
        """
        Sets the total_casebreaks_to_ship of this FulfillmentProcess.


        :param total_casebreaks_to_ship: The total_casebreaks_to_ship of this FulfillmentProcess.
        :type: int
        """
        self._total_casebreaks_to_ship = total_casebreaks_to_ship

    @property
    def shipped_orders(self):
        """
        Gets the shipped_orders of this FulfillmentProcess.


        :return: The shipped_orders of this FulfillmentProcess.
        :rtype: int
        """
        return self._shipped_orders

    @shipped_orders.setter
    def shipped_orders(self, shipped_orders):
        """
        Sets the shipped_orders of this FulfillmentProcess.


        :param shipped_orders: The shipped_orders of this FulfillmentProcess.
        :type: int
        """
        self._shipped_orders = shipped_orders

    @property
    def total_orders_to_ship(self):
        """
        Gets the total_orders_to_ship of this FulfillmentProcess.


        :return: The total_orders_to_ship of this FulfillmentProcess.
        :rtype: int
        """
        return self._total_orders_to_ship

    @total_orders_to_ship.setter
    def total_orders_to_ship(self, total_orders_to_ship):
        """
        Sets the total_orders_to_ship of this FulfillmentProcess.


        :param total_orders_to_ship: The total_orders_to_ship of this FulfillmentProcess.
        :type: int
        """
        self._total_orders_to_ship = total_orders_to_ship

    @property
    def completed_to_do(self):
        """
        Gets the completed_to_do of this FulfillmentProcess.


        :return: The completed_to_do of this FulfillmentProcess.
        :rtype: int
        """
        return self._completed_to_do

    @completed_to_do.setter
    def completed_to_do(self, completed_to_do):
        """
        Sets the completed_to_do of this FulfillmentProcess.


        :param completed_to_do: The completed_to_do of this FulfillmentProcess.
        :type: int
        """
        self._completed_to_do = completed_to_do

    @property
    def total_to_do(self):
        """
        Gets the total_to_do of this FulfillmentProcess.


        :return: The total_to_do of this FulfillmentProcess.
        :rtype: int
        """
        return self._total_to_do

    @total_to_do.setter
    def total_to_do(self, total_to_do):
        """
        Sets the total_to_do of this FulfillmentProcess.


        :param total_to_do: The total_to_do of this FulfillmentProcess.
        :type: int
        """
        self._total_to_do = total_to_do

    @property
    def create_pick_work(self):
        """
        Gets the create_pick_work of this FulfillmentProcess.


        :return: The create_pick_work of this FulfillmentProcess.
        :rtype: bool
        """
        return self._create_pick_work

    @create_pick_work.setter
    def create_pick_work(self, create_pick_work):
        """
        Sets the create_pick_work of this FulfillmentProcess.


        :param create_pick_work: The create_pick_work of this FulfillmentProcess.
        :type: bool
        """
        self._create_pick_work = create_pick_work

    @property
    def picking_rule(self):
        """
        Gets the picking_rule of this FulfillmentProcess.


        :return: The picking_rule of this FulfillmentProcess.
        :rtype: str
        """
        return self._picking_rule

    @picking_rule.setter
    def picking_rule(self, picking_rule):
        """
        Sets the picking_rule of this FulfillmentProcess.


        :param picking_rule: The picking_rule of this FulfillmentProcess.
        :type: str
        """
        self._picking_rule = picking_rule

    @property
    def layout_rule(self):
        """
        Gets the layout_rule of this FulfillmentProcess.


        :return: The layout_rule of this FulfillmentProcess.
        :rtype: str
        """
        return self._layout_rule

    @layout_rule.setter
    def layout_rule(self, layout_rule):
        """
        Sets the layout_rule of this FulfillmentProcess.


        :param layout_rule: The layout_rule of this FulfillmentProcess.
        :type: str
        """
        self._layout_rule = layout_rule

    @property
    def pick_sort_rule(self):
        """
        Gets the pick_sort_rule of this FulfillmentProcess.


        :return: The pick_sort_rule of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_sort_rule

    @pick_sort_rule.setter
    def pick_sort_rule(self, pick_sort_rule):
        """
        Sets the pick_sort_rule of this FulfillmentProcess.


        :param pick_sort_rule: The pick_sort_rule of this FulfillmentProcess.
        :type: str
        """
        self._pick_sort_rule = pick_sort_rule

    @property
    def first_pick_position(self):
        """
        Gets the first_pick_position of this FulfillmentProcess.


        :return: The first_pick_position of this FulfillmentProcess.
        :rtype: int
        """
        return self._first_pick_position

    @first_pick_position.setter
    def first_pick_position(self, first_pick_position):
        """
        Sets the first_pick_position of this FulfillmentProcess.


        :param first_pick_position: The first_pick_position of this FulfillmentProcess.
        :type: int
        """
        self._first_pick_position = first_pick_position

    @property
    def pick_list_format(self):
        """
        Gets the pick_list_format of this FulfillmentProcess.


        :return: The pick_list_format of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_list_format

    @pick_list_format.setter
    def pick_list_format(self, pick_list_format):
        """
        Sets the pick_list_format of this FulfillmentProcess.


        :param pick_list_format: The pick_list_format of this FulfillmentProcess.
        :type: str
        """
        self._pick_list_format = pick_list_format

    @property
    def pick_list_layout(self):
        """
        Gets the pick_list_layout of this FulfillmentProcess.


        :return: The pick_list_layout of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_list_layout

    @pick_list_layout.setter
    def pick_list_layout(self, pick_list_layout):
        """
        Sets the pick_list_layout of this FulfillmentProcess.


        :param pick_list_layout: The pick_list_layout of this FulfillmentProcess.
        :type: str
        """
        self._pick_list_layout = pick_list_layout

    @property
    def pick_list_group(self):
        """
        Gets the pick_list_group of this FulfillmentProcess.


        :return: The pick_list_group of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_list_group

    @pick_list_group.setter
    def pick_list_group(self, pick_list_group):
        """
        Sets the pick_list_group of this FulfillmentProcess.


        :param pick_list_group: The pick_list_group of this FulfillmentProcess.
        :type: str
        """
        self._pick_list_group = pick_list_group

    @property
    def pick_list_sort(self):
        """
        Gets the pick_list_sort of this FulfillmentProcess.


        :return: The pick_list_sort of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_list_sort

    @pick_list_sort.setter
    def pick_list_sort(self, pick_list_sort):
        """
        Sets the pick_list_sort of this FulfillmentProcess.


        :param pick_list_sort: The pick_list_sort of this FulfillmentProcess.
        :type: str
        """
        self._pick_list_sort = pick_list_sort

    @property
    def pick_summary_format(self):
        """
        Gets the pick_summary_format of this FulfillmentProcess.


        :return: The pick_summary_format of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_summary_format

    @pick_summary_format.setter
    def pick_summary_format(self, pick_summary_format):
        """
        Sets the pick_summary_format of this FulfillmentProcess.


        :param pick_summary_format: The pick_summary_format of this FulfillmentProcess.
        :type: str
        """
        self._pick_summary_format = pick_summary_format

    @property
    def pick_summary_layout(self):
        """
        Gets the pick_summary_layout of this FulfillmentProcess.


        :return: The pick_summary_layout of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_summary_layout

    @pick_summary_layout.setter
    def pick_summary_layout(self, pick_summary_layout):
        """
        Sets the pick_summary_layout of this FulfillmentProcess.


        :param pick_summary_layout: The pick_summary_layout of this FulfillmentProcess.
        :type: str
        """
        self._pick_summary_layout = pick_summary_layout

    @property
    def pick_summary_sort(self):
        """
        Gets the pick_summary_sort of this FulfillmentProcess.


        :return: The pick_summary_sort of this FulfillmentProcess.
        :rtype: str
        """
        return self._pick_summary_sort

    @pick_summary_sort.setter
    def pick_summary_sort(self, pick_summary_sort):
        """
        Sets the pick_summary_sort of this FulfillmentProcess.


        :param pick_summary_sort: The pick_summary_sort of this FulfillmentProcess.
        :type: str
        """
        self._pick_summary_sort = pick_summary_sort

    @property
    def create_pick_summary(self):
        """
        Gets the create_pick_summary of this FulfillmentProcess.


        :return: The create_pick_summary of this FulfillmentProcess.
        :rtype: bool
        """
        return self._create_pick_summary

    @create_pick_summary.setter
    def create_pick_summary(self, create_pick_summary):
        """
        Sets the create_pick_summary of this FulfillmentProcess.


        :param create_pick_summary: The create_pick_summary of this FulfillmentProcess.
        :type: bool
        """
        self._create_pick_summary = create_pick_summary

    @property
    def create_pick_list(self):
        """
        Gets the create_pick_list of this FulfillmentProcess.


        :return: The create_pick_list of this FulfillmentProcess.
        :rtype: bool
        """
        return self._create_pick_list

    @create_pick_list.setter
    def create_pick_list(self, create_pick_list):
        """
        Sets the create_pick_list of this FulfillmentProcess.


        :param create_pick_list: The create_pick_list of this FulfillmentProcess.
        :type: bool
        """
        self._create_pick_list = create_pick_list

    @property
    def pre_generate_parcel_labels(self):
        """
        Gets the pre_generate_parcel_labels of this FulfillmentProcess.


        :return: The pre_generate_parcel_labels of this FulfillmentProcess.
        :rtype: bool
        """
        return self._pre_generate_parcel_labels

    @pre_generate_parcel_labels.setter
    def pre_generate_parcel_labels(self, pre_generate_parcel_labels):
        """
        Sets the pre_generate_parcel_labels of this FulfillmentProcess.


        :param pre_generate_parcel_labels: The pre_generate_parcel_labels of this FulfillmentProcess.
        :type: bool
        """
        self._pre_generate_parcel_labels = pre_generate_parcel_labels

    @property
    def ship_date(self):
        """
        Gets the ship_date of this FulfillmentProcess.


        :return: The ship_date of this FulfillmentProcess.
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """
        Sets the ship_date of this FulfillmentProcess.


        :param ship_date: The ship_date of this FulfillmentProcess.
        :type: datetime
        """
        self._ship_date = ship_date

    @property
    def auto_ship_casebreak_cartons(self):
        """
        Gets the auto_ship_casebreak_cartons of this FulfillmentProcess.


        :return: The auto_ship_casebreak_cartons of this FulfillmentProcess.
        :rtype: bool
        """
        return self._auto_ship_casebreak_cartons

    @auto_ship_casebreak_cartons.setter
    def auto_ship_casebreak_cartons(self, auto_ship_casebreak_cartons):
        """
        Sets the auto_ship_casebreak_cartons of this FulfillmentProcess.


        :param auto_ship_casebreak_cartons: The auto_ship_casebreak_cartons of this FulfillmentProcess.
        :type: bool
        """
        self._auto_ship_casebreak_cartons = auto_ship_casebreak_cartons

    @property
    def cartonize_orders(self):
        """
        Gets the cartonize_orders of this FulfillmentProcess.


        :return: The cartonize_orders of this FulfillmentProcess.
        :rtype: bool
        """
        return self._cartonize_orders

    @cartonize_orders.setter
    def cartonize_orders(self, cartonize_orders):
        """
        Sets the cartonize_orders of this FulfillmentProcess.


        :param cartonize_orders: The cartonize_orders of this FulfillmentProcess.
        :type: bool
        """
        self._cartonize_orders = cartonize_orders

    @property
    def create_packing_slip(self):
        """
        Gets the create_packing_slip of this FulfillmentProcess.


        :return: The create_packing_slip of this FulfillmentProcess.
        :rtype: bool
        """
        return self._create_packing_slip

    @create_packing_slip.setter
    def create_packing_slip(self, create_packing_slip):
        """
        Sets the create_packing_slip of this FulfillmentProcess.


        :param create_packing_slip: The create_packing_slip of this FulfillmentProcess.
        :type: bool
        """
        self._create_packing_slip = create_packing_slip

    @property
    def override_packing_slip_template_id(self):
        """
        Gets the override_packing_slip_template_id of this FulfillmentProcess.


        :return: The override_packing_slip_template_id of this FulfillmentProcess.
        :rtype: int
        """
        return self._override_packing_slip_template_id

    @override_packing_slip_template_id.setter
    def override_packing_slip_template_id(self, override_packing_slip_template_id):
        """
        Sets the override_packing_slip_template_id of this FulfillmentProcess.


        :param override_packing_slip_template_id: The override_packing_slip_template_id of this FulfillmentProcess.
        :type: int
        """
        self._override_packing_slip_template_id = override_packing_slip_template_id

    @property
    def create_order_assembly_guide(self):
        """
        Gets the create_order_assembly_guide of this FulfillmentProcess.


        :return: The create_order_assembly_guide of this FulfillmentProcess.
        :rtype: bool
        """
        return self._create_order_assembly_guide

    @create_order_assembly_guide.setter
    def create_order_assembly_guide(self, create_order_assembly_guide):
        """
        Sets the create_order_assembly_guide of this FulfillmentProcess.


        :param create_order_assembly_guide: The create_order_assembly_guide of this FulfillmentProcess.
        :type: bool
        """
        self._create_order_assembly_guide = create_order_assembly_guide

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this FulfillmentProcess.


        :return: The custom_fields of this FulfillmentProcess.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this FulfillmentProcess.


        :param custom_fields: The custom_fields of this FulfillmentProcess.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

