# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: v3.0
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EditLineItemFulfillmentStrategyInputAPIModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'order_no_list': 'list[float]',
        'fulfillment_channel_id': 'int',
        'sku': 'str'
    }

    attribute_map = {
        'order_no_list': 'orderNoList',
        'fulfillment_channel_id': 'fulfillmentChannelId',
        'sku': 'sku'
    }

    def __init__(self, order_no_list=None, fulfillment_channel_id=None, sku=None):  # noqa: E501
        """EditLineItemFulfillmentStrategyInputAPIModel - a model defined in Swagger"""  # noqa: E501

        self._order_no_list = None
        self._fulfillment_channel_id = None
        self._sku = None
        self.discriminator = None

        if order_no_list is not None:
            self.order_no_list = order_no_list
        self.fulfillment_channel_id = fulfillment_channel_id
        if sku is not None:
            self.sku = sku

    @property
    def order_no_list(self):
        """Gets the order_no_list of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501


        :return: The order_no_list of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :rtype: list[float]
        """
        return self._order_no_list

    @order_no_list.setter
    def order_no_list(self, order_no_list):
        """Sets the order_no_list of this EditLineItemFulfillmentStrategyInputAPIModel.


        :param order_no_list: The order_no_list of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :type: list[float]
        """

        self._order_no_list = order_no_list

    @property
    def fulfillment_channel_id(self):
        """Gets the fulfillment_channel_id of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501


        :return: The fulfillment_channel_id of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._fulfillment_channel_id

    @fulfillment_channel_id.setter
    def fulfillment_channel_id(self, fulfillment_channel_id):
        """Sets the fulfillment_channel_id of this EditLineItemFulfillmentStrategyInputAPIModel.


        :param fulfillment_channel_id: The fulfillment_channel_id of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :type: int
        """
        if fulfillment_channel_id is None:
            raise ValueError("Invalid value for `fulfillment_channel_id`, must not be `None`")  # noqa: E501

        self._fulfillment_channel_id = fulfillment_channel_id

    @property
    def sku(self):
        """Gets the sku of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501


        :return: The sku of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this EditLineItemFulfillmentStrategyInputAPIModel.


        :param sku: The sku of this EditLineItemFulfillmentStrategyInputAPIModel.  # noqa: E501
        :type: str
        """

        self._sku = sku

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EditLineItemFulfillmentStrategyInputAPIModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
