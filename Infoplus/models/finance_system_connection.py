# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class FinanceSystemConnection(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'name': 'str',
        'active': 'bool',
        'finance_system_connection_type': 'str',
        'environment': 'str',
        'lob_id': 'int',
        'warehouse_id': 'int',
        'client_id': 'int',
        'order_source_id': 'int',
        'integration_partner_id': 'int',
        'infoplus_sku_field_to_map': 'str',
        'finance_system_sku_field_to_map': 'str',
        'script_id': 'int',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'name': 'name',
        'active': 'active',
        'finance_system_connection_type': 'financeSystemConnectionType',
        'environment': 'environment',
        'lob_id': 'lobId',
        'warehouse_id': 'warehouseId',
        'client_id': 'clientId',
        'order_source_id': 'orderSourceId',
        'integration_partner_id': 'integrationPartnerId',
        'infoplus_sku_field_to_map': 'infoplusSKUFieldToMap',
        'finance_system_sku_field_to_map': 'financeSystemSKUFieldToMap',
        'script_id': 'scriptId',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, create_date=None, modify_date=None, name=None, active=False, finance_system_connection_type=None, environment=None, lob_id=None, warehouse_id=None, client_id=None, order_source_id=None, integration_partner_id=None, infoplus_sku_field_to_map=None, finance_system_sku_field_to_map=None, script_id=None, custom_fields=None):  # noqa: E501
        """FinanceSystemConnection - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._name = None
        self._active = None
        self._finance_system_connection_type = None
        self._environment = None
        self._lob_id = None
        self._warehouse_id = None
        self._client_id = None
        self._order_source_id = None
        self._integration_partner_id = None
        self._infoplus_sku_field_to_map = None
        self._finance_system_sku_field_to_map = None
        self._script_id = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        self.name = name
        self.active = active
        self.finance_system_connection_type = finance_system_connection_type
        self.environment = environment
        self.lob_id = lob_id
        self.warehouse_id = warehouse_id
        if client_id is not None:
            self.client_id = client_id
        self.order_source_id = order_source_id
        self.integration_partner_id = integration_partner_id
        self.infoplus_sku_field_to_map = infoplus_sku_field_to_map
        self.finance_system_sku_field_to_map = finance_system_sku_field_to_map
        if script_id is not None:
            self.script_id = script_id
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this FinanceSystemConnection.  # noqa: E501


        :return: The id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FinanceSystemConnection.


        :param id: The id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def create_date(self):
        """Gets the create_date of this FinanceSystemConnection.  # noqa: E501


        :return: The create_date of this FinanceSystemConnection.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this FinanceSystemConnection.


        :param create_date: The create_date of this FinanceSystemConnection.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this FinanceSystemConnection.  # noqa: E501


        :return: The modify_date of this FinanceSystemConnection.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this FinanceSystemConnection.


        :param modify_date: The modify_date of this FinanceSystemConnection.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def name(self):
        """Gets the name of this FinanceSystemConnection.  # noqa: E501


        :return: The name of this FinanceSystemConnection.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FinanceSystemConnection.


        :param name: The name of this FinanceSystemConnection.  # noqa: E501
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def active(self):
        """Gets the active of this FinanceSystemConnection.  # noqa: E501


        :return: The active of this FinanceSystemConnection.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this FinanceSystemConnection.


        :param active: The active of this FinanceSystemConnection.  # noqa: E501
        :type: bool
        """
        if active is None:
            raise ValueError("Invalid value for `active`, must not be `None`")  # noqa: E501

        self._active = active

    @property
    def finance_system_connection_type(self):
        """Gets the finance_system_connection_type of this FinanceSystemConnection.  # noqa: E501


        :return: The finance_system_connection_type of this FinanceSystemConnection.  # noqa: E501
        :rtype: str
        """
        return self._finance_system_connection_type

    @finance_system_connection_type.setter
    def finance_system_connection_type(self, finance_system_connection_type):
        """Sets the finance_system_connection_type of this FinanceSystemConnection.


        :param finance_system_connection_type: The finance_system_connection_type of this FinanceSystemConnection.  # noqa: E501
        :type: str
        """
        if finance_system_connection_type is None:
            raise ValueError("Invalid value for `finance_system_connection_type`, must not be `None`")  # noqa: E501

        self._finance_system_connection_type = finance_system_connection_type

    @property
    def environment(self):
        """Gets the environment of this FinanceSystemConnection.  # noqa: E501


        :return: The environment of this FinanceSystemConnection.  # noqa: E501
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this FinanceSystemConnection.


        :param environment: The environment of this FinanceSystemConnection.  # noqa: E501
        :type: str
        """
        if environment is None:
            raise ValueError("Invalid value for `environment`, must not be `None`")  # noqa: E501

        self._environment = environment

    @property
    def lob_id(self):
        """Gets the lob_id of this FinanceSystemConnection.  # noqa: E501


        :return: The lob_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this FinanceSystemConnection.


        :param lob_id: The lob_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this FinanceSystemConnection.  # noqa: E501


        :return: The warehouse_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this FinanceSystemConnection.


        :param warehouse_id: The warehouse_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """
        if warehouse_id is None:
            raise ValueError("Invalid value for `warehouse_id`, must not be `None`")  # noqa: E501

        self._warehouse_id = warehouse_id

    @property
    def client_id(self):
        """Gets the client_id of this FinanceSystemConnection.  # noqa: E501


        :return: The client_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this FinanceSystemConnection.


        :param client_id: The client_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """

        self._client_id = client_id

    @property
    def order_source_id(self):
        """Gets the order_source_id of this FinanceSystemConnection.  # noqa: E501


        :return: The order_source_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._order_source_id

    @order_source_id.setter
    def order_source_id(self, order_source_id):
        """Sets the order_source_id of this FinanceSystemConnection.


        :param order_source_id: The order_source_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """
        if order_source_id is None:
            raise ValueError("Invalid value for `order_source_id`, must not be `None`")  # noqa: E501

        self._order_source_id = order_source_id

    @property
    def integration_partner_id(self):
        """Gets the integration_partner_id of this FinanceSystemConnection.  # noqa: E501


        :return: The integration_partner_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._integration_partner_id

    @integration_partner_id.setter
    def integration_partner_id(self, integration_partner_id):
        """Sets the integration_partner_id of this FinanceSystemConnection.


        :param integration_partner_id: The integration_partner_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """
        if integration_partner_id is None:
            raise ValueError("Invalid value for `integration_partner_id`, must not be `None`")  # noqa: E501

        self._integration_partner_id = integration_partner_id

    @property
    def infoplus_sku_field_to_map(self):
        """Gets the infoplus_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501


        :return: The infoplus_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501
        :rtype: str
        """
        return self._infoplus_sku_field_to_map

    @infoplus_sku_field_to_map.setter
    def infoplus_sku_field_to_map(self, infoplus_sku_field_to_map):
        """Sets the infoplus_sku_field_to_map of this FinanceSystemConnection.


        :param infoplus_sku_field_to_map: The infoplus_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501
        :type: str
        """
        if infoplus_sku_field_to_map is None:
            raise ValueError("Invalid value for `infoplus_sku_field_to_map`, must not be `None`")  # noqa: E501

        self._infoplus_sku_field_to_map = infoplus_sku_field_to_map

    @property
    def finance_system_sku_field_to_map(self):
        """Gets the finance_system_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501


        :return: The finance_system_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501
        :rtype: str
        """
        return self._finance_system_sku_field_to_map

    @finance_system_sku_field_to_map.setter
    def finance_system_sku_field_to_map(self, finance_system_sku_field_to_map):
        """Sets the finance_system_sku_field_to_map of this FinanceSystemConnection.


        :param finance_system_sku_field_to_map: The finance_system_sku_field_to_map of this FinanceSystemConnection.  # noqa: E501
        :type: str
        """
        if finance_system_sku_field_to_map is None:
            raise ValueError("Invalid value for `finance_system_sku_field_to_map`, must not be `None`")  # noqa: E501

        self._finance_system_sku_field_to_map = finance_system_sku_field_to_map

    @property
    def script_id(self):
        """Gets the script_id of this FinanceSystemConnection.  # noqa: E501


        :return: The script_id of this FinanceSystemConnection.  # noqa: E501
        :rtype: int
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this FinanceSystemConnection.


        :param script_id: The script_id of this FinanceSystemConnection.  # noqa: E501
        :type: int
        """

        self._script_id = script_id

    @property
    def custom_fields(self):
        """Gets the custom_fields of this FinanceSystemConnection.  # noqa: E501


        :return: The custom_fields of this FinanceSystemConnection.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this FinanceSystemConnection.


        :param custom_fields: The custom_fields of this FinanceSystemConnection.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FinanceSystemConnection):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
