# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from Infoplus.models.receiving_worksheet_put_away_plan import ReceivingWorksheetPutAwayPlan  # noqa: F401,E501


class ReceivingWorksheetLineItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'sku': 'str',
        'sku2': 'str',
        'full_description': 'str',
        'ordered_qty': 'int',
        'prev_received_qty': 'int',
        'unreceived_qty': 'int',
        'receiving_qty': 'int',
        'unit_code': 'str',
        'wrap_code': 'str',
        'units_per_wrap': 'int',
        'units_per_case': 'int',
        'quantity_per_inner_pack': 'int',
        'quantity_per_pallet': 'int',
        'weight_per_wrap': 'float',
        'weight_per_case': 'float',
        'production_lot': 'str',
        'product_id_tag': 'str',
        'revision_date': 'str',
        'expiration_date': 'datetime',
        'origin': 'str',
        'carton_length': 'float',
        'carton_width': 'float',
        'carton_height': 'float',
        'put_away_plans': 'list[ReceivingWorksheetPutAwayPlan]',
        'quantity': 'int',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'sku': 'sku',
        'sku2': 'sku2',
        'full_description': 'fullDescription',
        'ordered_qty': 'orderedQty',
        'prev_received_qty': 'prevReceivedQty',
        'unreceived_qty': 'unreceivedQty',
        'receiving_qty': 'receivingQty',
        'unit_code': 'unitCode',
        'wrap_code': 'wrapCode',
        'units_per_wrap': 'unitsPerWrap',
        'units_per_case': 'unitsPerCase',
        'quantity_per_inner_pack': 'quantityPerInnerPack',
        'quantity_per_pallet': 'quantityPerPallet',
        'weight_per_wrap': 'weightPerWrap',
        'weight_per_case': 'weightPerCase',
        'production_lot': 'productionLot',
        'product_id_tag': 'productIdTag',
        'revision_date': 'revisionDate',
        'expiration_date': 'expirationDate',
        'origin': 'origin',
        'carton_length': 'cartonLength',
        'carton_width': 'cartonWidth',
        'carton_height': 'cartonHeight',
        'put_away_plans': 'putAwayPlans',
        'quantity': 'quantity',
        'custom_fields': 'customFields'
    }

    def __init__(self, sku=None, sku2=None, full_description=None, ordered_qty=None, prev_received_qty=None, unreceived_qty=None, receiving_qty=None, unit_code=None, wrap_code=None, units_per_wrap=None, units_per_case=None, quantity_per_inner_pack=None, quantity_per_pallet=None, weight_per_wrap=None, weight_per_case=None, production_lot=None, product_id_tag=None, revision_date=None, expiration_date=None, origin=None, carton_length=None, carton_width=None, carton_height=None, put_away_plans=None, quantity=None, custom_fields=None):  # noqa: E501
        """ReceivingWorksheetLineItem - a model defined in Swagger"""  # noqa: E501

        self._sku = None
        self._sku2 = None
        self._full_description = None
        self._ordered_qty = None
        self._prev_received_qty = None
        self._unreceived_qty = None
        self._receiving_qty = None
        self._unit_code = None
        self._wrap_code = None
        self._units_per_wrap = None
        self._units_per_case = None
        self._quantity_per_inner_pack = None
        self._quantity_per_pallet = None
        self._weight_per_wrap = None
        self._weight_per_case = None
        self._production_lot = None
        self._product_id_tag = None
        self._revision_date = None
        self._expiration_date = None
        self._origin = None
        self._carton_length = None
        self._carton_width = None
        self._carton_height = None
        self._put_away_plans = None
        self._quantity = None
        self._custom_fields = None
        self.discriminator = None

        if sku is not None:
            self.sku = sku
        if sku2 is not None:
            self.sku2 = sku2
        if full_description is not None:
            self.full_description = full_description
        if ordered_qty is not None:
            self.ordered_qty = ordered_qty
        if prev_received_qty is not None:
            self.prev_received_qty = prev_received_qty
        if unreceived_qty is not None:
            self.unreceived_qty = unreceived_qty
        self.receiving_qty = receiving_qty
        if unit_code is not None:
            self.unit_code = unit_code
        if wrap_code is not None:
            self.wrap_code = wrap_code
        if units_per_wrap is not None:
            self.units_per_wrap = units_per_wrap
        if units_per_case is not None:
            self.units_per_case = units_per_case
        if quantity_per_inner_pack is not None:
            self.quantity_per_inner_pack = quantity_per_inner_pack
        if quantity_per_pallet is not None:
            self.quantity_per_pallet = quantity_per_pallet
        self.weight_per_wrap = weight_per_wrap
        if weight_per_case is not None:
            self.weight_per_case = weight_per_case
        if production_lot is not None:
            self.production_lot = production_lot
        if product_id_tag is not None:
            self.product_id_tag = product_id_tag
        if revision_date is not None:
            self.revision_date = revision_date
        if expiration_date is not None:
            self.expiration_date = expiration_date
        if origin is not None:
            self.origin = origin
        if carton_length is not None:
            self.carton_length = carton_length
        if carton_width is not None:
            self.carton_width = carton_width
        if carton_height is not None:
            self.carton_height = carton_height
        if put_away_plans is not None:
            self.put_away_plans = put_away_plans
        if quantity is not None:
            self.quantity = quantity
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def sku(self):
        """Gets the sku of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The sku of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ReceivingWorksheetLineItem.


        :param sku: The sku of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._sku = sku

    @property
    def sku2(self):
        """Gets the sku2 of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The sku2 of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._sku2

    @sku2.setter
    def sku2(self, sku2):
        """Sets the sku2 of this ReceivingWorksheetLineItem.


        :param sku2: The sku2 of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._sku2 = sku2

    @property
    def full_description(self):
        """Gets the full_description of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The full_description of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._full_description

    @full_description.setter
    def full_description(self, full_description):
        """Sets the full_description of this ReceivingWorksheetLineItem.


        :param full_description: The full_description of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._full_description = full_description

    @property
    def ordered_qty(self):
        """Gets the ordered_qty of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The ordered_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._ordered_qty

    @ordered_qty.setter
    def ordered_qty(self, ordered_qty):
        """Sets the ordered_qty of this ReceivingWorksheetLineItem.


        :param ordered_qty: The ordered_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._ordered_qty = ordered_qty

    @property
    def prev_received_qty(self):
        """Gets the prev_received_qty of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The prev_received_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._prev_received_qty

    @prev_received_qty.setter
    def prev_received_qty(self, prev_received_qty):
        """Sets the prev_received_qty of this ReceivingWorksheetLineItem.


        :param prev_received_qty: The prev_received_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._prev_received_qty = prev_received_qty

    @property
    def unreceived_qty(self):
        """Gets the unreceived_qty of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The unreceived_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._unreceived_qty

    @unreceived_qty.setter
    def unreceived_qty(self, unreceived_qty):
        """Sets the unreceived_qty of this ReceivingWorksheetLineItem.


        :param unreceived_qty: The unreceived_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._unreceived_qty = unreceived_qty

    @property
    def receiving_qty(self):
        """Gets the receiving_qty of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The receiving_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._receiving_qty

    @receiving_qty.setter
    def receiving_qty(self, receiving_qty):
        """Sets the receiving_qty of this ReceivingWorksheetLineItem.


        :param receiving_qty: The receiving_qty of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """
        if receiving_qty is None:
            raise ValueError("Invalid value for `receiving_qty`, must not be `None`")  # noqa: E501

        self._receiving_qty = receiving_qty

    @property
    def unit_code(self):
        """Gets the unit_code of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The unit_code of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._unit_code

    @unit_code.setter
    def unit_code(self, unit_code):
        """Sets the unit_code of this ReceivingWorksheetLineItem.


        :param unit_code: The unit_code of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._unit_code = unit_code

    @property
    def wrap_code(self):
        """Gets the wrap_code of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The wrap_code of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._wrap_code

    @wrap_code.setter
    def wrap_code(self, wrap_code):
        """Sets the wrap_code of this ReceivingWorksheetLineItem.


        :param wrap_code: The wrap_code of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._wrap_code = wrap_code

    @property
    def units_per_wrap(self):
        """Gets the units_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The units_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._units_per_wrap

    @units_per_wrap.setter
    def units_per_wrap(self, units_per_wrap):
        """Sets the units_per_wrap of this ReceivingWorksheetLineItem.


        :param units_per_wrap: The units_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._units_per_wrap = units_per_wrap

    @property
    def units_per_case(self):
        """Gets the units_per_case of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The units_per_case of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._units_per_case

    @units_per_case.setter
    def units_per_case(self, units_per_case):
        """Sets the units_per_case of this ReceivingWorksheetLineItem.


        :param units_per_case: The units_per_case of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._units_per_case = units_per_case

    @property
    def quantity_per_inner_pack(self):
        """Gets the quantity_per_inner_pack of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The quantity_per_inner_pack of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._quantity_per_inner_pack

    @quantity_per_inner_pack.setter
    def quantity_per_inner_pack(self, quantity_per_inner_pack):
        """Sets the quantity_per_inner_pack of this ReceivingWorksheetLineItem.


        :param quantity_per_inner_pack: The quantity_per_inner_pack of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._quantity_per_inner_pack = quantity_per_inner_pack

    @property
    def quantity_per_pallet(self):
        """Gets the quantity_per_pallet of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The quantity_per_pallet of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._quantity_per_pallet

    @quantity_per_pallet.setter
    def quantity_per_pallet(self, quantity_per_pallet):
        """Sets the quantity_per_pallet of this ReceivingWorksheetLineItem.


        :param quantity_per_pallet: The quantity_per_pallet of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._quantity_per_pallet = quantity_per_pallet

    @property
    def weight_per_wrap(self):
        """Gets the weight_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The weight_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: float
        """
        return self._weight_per_wrap

    @weight_per_wrap.setter
    def weight_per_wrap(self, weight_per_wrap):
        """Sets the weight_per_wrap of this ReceivingWorksheetLineItem.


        :param weight_per_wrap: The weight_per_wrap of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: float
        """
        if weight_per_wrap is None:
            raise ValueError("Invalid value for `weight_per_wrap`, must not be `None`")  # noqa: E501

        self._weight_per_wrap = weight_per_wrap

    @property
    def weight_per_case(self):
        """Gets the weight_per_case of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The weight_per_case of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: float
        """
        return self._weight_per_case

    @weight_per_case.setter
    def weight_per_case(self, weight_per_case):
        """Sets the weight_per_case of this ReceivingWorksheetLineItem.


        :param weight_per_case: The weight_per_case of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: float
        """

        self._weight_per_case = weight_per_case

    @property
    def production_lot(self):
        """Gets the production_lot of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The production_lot of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._production_lot

    @production_lot.setter
    def production_lot(self, production_lot):
        """Sets the production_lot of this ReceivingWorksheetLineItem.


        :param production_lot: The production_lot of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._production_lot = production_lot

    @property
    def product_id_tag(self):
        """Gets the product_id_tag of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The product_id_tag of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._product_id_tag

    @product_id_tag.setter
    def product_id_tag(self, product_id_tag):
        """Sets the product_id_tag of this ReceivingWorksheetLineItem.


        :param product_id_tag: The product_id_tag of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._product_id_tag = product_id_tag

    @property
    def revision_date(self):
        """Gets the revision_date of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The revision_date of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._revision_date

    @revision_date.setter
    def revision_date(self, revision_date):
        """Sets the revision_date of this ReceivingWorksheetLineItem.


        :param revision_date: The revision_date of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._revision_date = revision_date

    @property
    def expiration_date(self):
        """Gets the expiration_date of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The expiration_date of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this ReceivingWorksheetLineItem.


        :param expiration_date: The expiration_date of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: datetime
        """

        self._expiration_date = expiration_date

    @property
    def origin(self):
        """Gets the origin of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The origin of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this ReceivingWorksheetLineItem.


        :param origin: The origin of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: str
        """

        self._origin = origin

    @property
    def carton_length(self):
        """Gets the carton_length of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The carton_length of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: float
        """
        return self._carton_length

    @carton_length.setter
    def carton_length(self, carton_length):
        """Sets the carton_length of this ReceivingWorksheetLineItem.


        :param carton_length: The carton_length of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: float
        """

        self._carton_length = carton_length

    @property
    def carton_width(self):
        """Gets the carton_width of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The carton_width of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: float
        """
        return self._carton_width

    @carton_width.setter
    def carton_width(self, carton_width):
        """Sets the carton_width of this ReceivingWorksheetLineItem.


        :param carton_width: The carton_width of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: float
        """

        self._carton_width = carton_width

    @property
    def carton_height(self):
        """Gets the carton_height of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The carton_height of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: float
        """
        return self._carton_height

    @carton_height.setter
    def carton_height(self, carton_height):
        """Sets the carton_height of this ReceivingWorksheetLineItem.


        :param carton_height: The carton_height of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: float
        """

        self._carton_height = carton_height

    @property
    def put_away_plans(self):
        """Gets the put_away_plans of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The put_away_plans of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: list[ReceivingWorksheetPutAwayPlan]
        """
        return self._put_away_plans

    @put_away_plans.setter
    def put_away_plans(self, put_away_plans):
        """Sets the put_away_plans of this ReceivingWorksheetLineItem.


        :param put_away_plans: The put_away_plans of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: list[ReceivingWorksheetPutAwayPlan]
        """

        self._put_away_plans = put_away_plans

    @property
    def quantity(self):
        """Gets the quantity of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The quantity of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ReceivingWorksheetLineItem.


        :param quantity: The quantity of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ReceivingWorksheetLineItem.  # noqa: E501


        :return: The custom_fields of this ReceivingWorksheetLineItem.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ReceivingWorksheetLineItem.


        :param custom_fields: The custom_fields of this ReceivingWorksheetLineItem.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReceivingWorksheetLineItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
