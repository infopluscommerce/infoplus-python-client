# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ExternalShipment(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ExternalShipment - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'order_id': 'float',
            'carrier_id': 'int',
            'parcel_account_id': 'int',
            'third_party_parcel_account_id': 'int',
            'freight': 'float',
            'tracking_no': 'str',
            'dim1_in': 'float',
            'dim2_in': 'float',
            'dim3_in': 'float',
            'weight_lbs': 'float',
            'dim_weight': 'float',
            'residential': 'bool',
            'zone': 'str',
            'status': 'str',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'order_id': 'orderId',
            'carrier_id': 'carrierId',
            'parcel_account_id': 'parcelAccountId',
            'third_party_parcel_account_id': 'thirdPartyParcelAccountId',
            'freight': 'freight',
            'tracking_no': 'trackingNo',
            'dim1_in': 'dim1In',
            'dim2_in': 'dim2In',
            'dim3_in': 'dim3In',
            'weight_lbs': 'weightLbs',
            'dim_weight': 'dimWeight',
            'residential': 'residential',
            'zone': 'zone',
            'status': 'status',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._order_id = None
        self._carrier_id = None
        self._parcel_account_id = None
        self._third_party_parcel_account_id = None
        self._freight = None
        self._tracking_no = None
        self._dim1_in = None
        self._dim2_in = None
        self._dim3_in = None
        self._weight_lbs = None
        self._dim_weight = None
        self._residential = False
        self._zone = None
        self._status = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this ExternalShipment.


        :return: The id of this ExternalShipment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ExternalShipment.


        :param id: The id of this ExternalShipment.
        :type: int
        """
        self._id = id

    @property
    def create_date(self):
        """
        Gets the create_date of this ExternalShipment.


        :return: The create_date of this ExternalShipment.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this ExternalShipment.


        :param create_date: The create_date of this ExternalShipment.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this ExternalShipment.


        :return: The modify_date of this ExternalShipment.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this ExternalShipment.


        :param modify_date: The modify_date of this ExternalShipment.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def order_id(self):
        """
        Gets the order_id of this ExternalShipment.


        :return: The order_id of this ExternalShipment.
        :rtype: float
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """
        Sets the order_id of this ExternalShipment.


        :param order_id: The order_id of this ExternalShipment.
        :type: float
        """
        self._order_id = order_id

    @property
    def carrier_id(self):
        """
        Gets the carrier_id of this ExternalShipment.


        :return: The carrier_id of this ExternalShipment.
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """
        Sets the carrier_id of this ExternalShipment.


        :param carrier_id: The carrier_id of this ExternalShipment.
        :type: int
        """
        self._carrier_id = carrier_id

    @property
    def parcel_account_id(self):
        """
        Gets the parcel_account_id of this ExternalShipment.


        :return: The parcel_account_id of this ExternalShipment.
        :rtype: int
        """
        return self._parcel_account_id

    @parcel_account_id.setter
    def parcel_account_id(self, parcel_account_id):
        """
        Sets the parcel_account_id of this ExternalShipment.


        :param parcel_account_id: The parcel_account_id of this ExternalShipment.
        :type: int
        """
        self._parcel_account_id = parcel_account_id

    @property
    def third_party_parcel_account_id(self):
        """
        Gets the third_party_parcel_account_id of this ExternalShipment.


        :return: The third_party_parcel_account_id of this ExternalShipment.
        :rtype: int
        """
        return self._third_party_parcel_account_id

    @third_party_parcel_account_id.setter
    def third_party_parcel_account_id(self, third_party_parcel_account_id):
        """
        Sets the third_party_parcel_account_id of this ExternalShipment.


        :param third_party_parcel_account_id: The third_party_parcel_account_id of this ExternalShipment.
        :type: int
        """
        self._third_party_parcel_account_id = third_party_parcel_account_id

    @property
    def freight(self):
        """
        Gets the freight of this ExternalShipment.


        :return: The freight of this ExternalShipment.
        :rtype: float
        """
        return self._freight

    @freight.setter
    def freight(self, freight):
        """
        Sets the freight of this ExternalShipment.


        :param freight: The freight of this ExternalShipment.
        :type: float
        """
        self._freight = freight

    @property
    def tracking_no(self):
        """
        Gets the tracking_no of this ExternalShipment.


        :return: The tracking_no of this ExternalShipment.
        :rtype: str
        """
        return self._tracking_no

    @tracking_no.setter
    def tracking_no(self, tracking_no):
        """
        Sets the tracking_no of this ExternalShipment.


        :param tracking_no: The tracking_no of this ExternalShipment.
        :type: str
        """
        self._tracking_no = tracking_no

    @property
    def dim1_in(self):
        """
        Gets the dim1_in of this ExternalShipment.


        :return: The dim1_in of this ExternalShipment.
        :rtype: float
        """
        return self._dim1_in

    @dim1_in.setter
    def dim1_in(self, dim1_in):
        """
        Sets the dim1_in of this ExternalShipment.


        :param dim1_in: The dim1_in of this ExternalShipment.
        :type: float
        """
        self._dim1_in = dim1_in

    @property
    def dim2_in(self):
        """
        Gets the dim2_in of this ExternalShipment.


        :return: The dim2_in of this ExternalShipment.
        :rtype: float
        """
        return self._dim2_in

    @dim2_in.setter
    def dim2_in(self, dim2_in):
        """
        Sets the dim2_in of this ExternalShipment.


        :param dim2_in: The dim2_in of this ExternalShipment.
        :type: float
        """
        self._dim2_in = dim2_in

    @property
    def dim3_in(self):
        """
        Gets the dim3_in of this ExternalShipment.


        :return: The dim3_in of this ExternalShipment.
        :rtype: float
        """
        return self._dim3_in

    @dim3_in.setter
    def dim3_in(self, dim3_in):
        """
        Sets the dim3_in of this ExternalShipment.


        :param dim3_in: The dim3_in of this ExternalShipment.
        :type: float
        """
        self._dim3_in = dim3_in

    @property
    def weight_lbs(self):
        """
        Gets the weight_lbs of this ExternalShipment.


        :return: The weight_lbs of this ExternalShipment.
        :rtype: float
        """
        return self._weight_lbs

    @weight_lbs.setter
    def weight_lbs(self, weight_lbs):
        """
        Sets the weight_lbs of this ExternalShipment.


        :param weight_lbs: The weight_lbs of this ExternalShipment.
        :type: float
        """
        self._weight_lbs = weight_lbs

    @property
    def dim_weight(self):
        """
        Gets the dim_weight of this ExternalShipment.


        :return: The dim_weight of this ExternalShipment.
        :rtype: float
        """
        return self._dim_weight

    @dim_weight.setter
    def dim_weight(self, dim_weight):
        """
        Sets the dim_weight of this ExternalShipment.


        :param dim_weight: The dim_weight of this ExternalShipment.
        :type: float
        """
        self._dim_weight = dim_weight

    @property
    def residential(self):
        """
        Gets the residential of this ExternalShipment.


        :return: The residential of this ExternalShipment.
        :rtype: bool
        """
        return self._residential

    @residential.setter
    def residential(self, residential):
        """
        Sets the residential of this ExternalShipment.


        :param residential: The residential of this ExternalShipment.
        :type: bool
        """
        self._residential = residential

    @property
    def zone(self):
        """
        Gets the zone of this ExternalShipment.


        :return: The zone of this ExternalShipment.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """
        Sets the zone of this ExternalShipment.


        :param zone: The zone of this ExternalShipment.
        :type: str
        """
        self._zone = zone

    @property
    def status(self):
        """
        Gets the status of this ExternalShipment.


        :return: The status of this ExternalShipment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this ExternalShipment.


        :param status: The status of this ExternalShipment.
        :type: str
        """
        self._status = status

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this ExternalShipment.


        :return: The custom_fields of this ExternalShipment.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this ExternalShipment.


        :param custom_fields: The custom_fields of this ExternalShipment.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

