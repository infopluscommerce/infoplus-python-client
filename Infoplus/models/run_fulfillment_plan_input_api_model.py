# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: v3.0
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RunFulfillmentPlanInputAPIModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'order_no_list': 'list[float]',
        'fulfillment_plan_id': 'int',
        'max_sk_us_per_batch': 'int',
        'first_pick_position': 'int',
        'max_cartons': 'int',
        'ship_date': 'datetime'
    }

    attribute_map = {
        'order_no_list': 'orderNoList',
        'fulfillment_plan_id': 'fulfillmentPlanId',
        'max_sk_us_per_batch': 'maxSKUsPerBatch',
        'first_pick_position': 'firstPickPosition',
        'max_cartons': 'maxCartons',
        'ship_date': 'shipDate'
    }

    def __init__(self, order_no_list=None, fulfillment_plan_id=None, max_sk_us_per_batch=None, first_pick_position=None, max_cartons=None, ship_date=None):  # noqa: E501
        """RunFulfillmentPlanInputAPIModel - a model defined in Swagger"""  # noqa: E501

        self._order_no_list = None
        self._fulfillment_plan_id = None
        self._max_sk_us_per_batch = None
        self._first_pick_position = None
        self._max_cartons = None
        self._ship_date = None
        self.discriminator = None

        if order_no_list is not None:
            self.order_no_list = order_no_list
        self.fulfillment_plan_id = fulfillment_plan_id
        if max_sk_us_per_batch is not None:
            self.max_sk_us_per_batch = max_sk_us_per_batch
        if first_pick_position is not None:
            self.first_pick_position = first_pick_position
        if max_cartons is not None:
            self.max_cartons = max_cartons
        self.ship_date = ship_date

    @property
    def order_no_list(self):
        """Gets the order_no_list of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The order_no_list of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: list[float]
        """
        return self._order_no_list

    @order_no_list.setter
    def order_no_list(self, order_no_list):
        """Sets the order_no_list of this RunFulfillmentPlanInputAPIModel.


        :param order_no_list: The order_no_list of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: list[float]
        """

        self._order_no_list = order_no_list

    @property
    def fulfillment_plan_id(self):
        """Gets the fulfillment_plan_id of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The fulfillment_plan_id of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._fulfillment_plan_id

    @fulfillment_plan_id.setter
    def fulfillment_plan_id(self, fulfillment_plan_id):
        """Sets the fulfillment_plan_id of this RunFulfillmentPlanInputAPIModel.


        :param fulfillment_plan_id: The fulfillment_plan_id of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: int
        """
        if fulfillment_plan_id is None:
            raise ValueError("Invalid value for `fulfillment_plan_id`, must not be `None`")  # noqa: E501

        self._fulfillment_plan_id = fulfillment_plan_id

    @property
    def max_sk_us_per_batch(self):
        """Gets the max_sk_us_per_batch of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The max_sk_us_per_batch of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._max_sk_us_per_batch

    @max_sk_us_per_batch.setter
    def max_sk_us_per_batch(self, max_sk_us_per_batch):
        """Sets the max_sk_us_per_batch of this RunFulfillmentPlanInputAPIModel.


        :param max_sk_us_per_batch: The max_sk_us_per_batch of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: int
        """

        self._max_sk_us_per_batch = max_sk_us_per_batch

    @property
    def first_pick_position(self):
        """Gets the first_pick_position of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The first_pick_position of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._first_pick_position

    @first_pick_position.setter
    def first_pick_position(self, first_pick_position):
        """Sets the first_pick_position of this RunFulfillmentPlanInputAPIModel.


        :param first_pick_position: The first_pick_position of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: int
        """

        self._first_pick_position = first_pick_position

    @property
    def max_cartons(self):
        """Gets the max_cartons of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The max_cartons of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._max_cartons

    @max_cartons.setter
    def max_cartons(self, max_cartons):
        """Sets the max_cartons of this RunFulfillmentPlanInputAPIModel.


        :param max_cartons: The max_cartons of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: int
        """

        self._max_cartons = max_cartons

    @property
    def ship_date(self):
        """Gets the ship_date of this RunFulfillmentPlanInputAPIModel.  # noqa: E501


        :return: The ship_date of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """Sets the ship_date of this RunFulfillmentPlanInputAPIModel.


        :param ship_date: The ship_date of this RunFulfillmentPlanInputAPIModel.  # noqa: E501
        :type: datetime
        """
        if ship_date is None:
            raise ValueError("Invalid value for `ship_date`, must not be `None`")  # noqa: E501

        self._ship_date = ship_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RunFulfillmentPlanInputAPIModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
