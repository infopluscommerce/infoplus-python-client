# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class OrderLineActivity(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        OrderLineActivity - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'order_no': 'float',
            'lob_id': 'int',
            'sku': 'str',
            'po_no_id': 'int',
            'cross_dock': 'int',
            'process_no': 'int',
            'ordered_qty': 'int',
            'allowed_qty': 'int',
            'shipped_qty': 'int',
            'backorder_qty': 'int',
            'adjust_code': 'int',
            'process_flag': 'str',
            'rev_date': 'str',
            'restriction_rule': 'int',
            'unit_cost': 'float',
            'unit_sell': 'float',
            'unit_discount': 'float',
            'extended_cost': 'float',
            'extended_sell': 'float',
            'extended_discount': 'float',
            'nc_extended_sell': 'float',
            'per': 'str',
            'charge_code': 'str',
            'distribution_code': 'str',
            'upc': 'str',
            'vendor_sku': 'str',
            'order_source_sku': 'str',
            'item_major_group_id': 'int',
            'master_major_group_name': 'str',
            'item_sub_group_id': 'int',
            'master_sub_group_name': 'str',
            'item_product_code_id': 'int',
            'master_production_code_name': 'str',
            'item_account_code_id': 'int',
            'master_account_code_name': 'str',
            'item_summary_code_id': 'int',
            'master_summary_code_name': 'str',
            'item_legacy_low_stock_contact_id': 'int',
            'low_stock_contact_name': 'str',
            'sector': 'str',
            'weight_per_wrap': 'float',
            'item_weight': 'float',
            'production_lot': 'str',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'order_no': 'orderNo',
            'lob_id': 'lobId',
            'sku': 'sku',
            'po_no_id': 'poNoId',
            'cross_dock': 'crossDock',
            'process_no': 'processNo',
            'ordered_qty': 'orderedQty',
            'allowed_qty': 'allowedQty',
            'shipped_qty': 'shippedQty',
            'backorder_qty': 'backorderQty',
            'adjust_code': 'adjustCode',
            'process_flag': 'processFlag',
            'rev_date': 'revDate',
            'restriction_rule': 'restrictionRule',
            'unit_cost': 'unitCost',
            'unit_sell': 'unitSell',
            'unit_discount': 'unitDiscount',
            'extended_cost': 'extendedCost',
            'extended_sell': 'extendedSell',
            'extended_discount': 'extendedDiscount',
            'nc_extended_sell': 'ncExtendedSell',
            'per': 'per',
            'charge_code': 'chargeCode',
            'distribution_code': 'distributionCode',
            'upc': 'upc',
            'vendor_sku': 'vendorSKU',
            'order_source_sku': 'orderSourceSKU',
            'item_major_group_id': 'itemMajorGroupId',
            'master_major_group_name': 'masterMajorGroupName',
            'item_sub_group_id': 'itemSubGroupId',
            'master_sub_group_name': 'masterSubGroupName',
            'item_product_code_id': 'itemProductCodeId',
            'master_production_code_name': 'masterProductionCodeName',
            'item_account_code_id': 'itemAccountCodeId',
            'master_account_code_name': 'masterAccountCodeName',
            'item_summary_code_id': 'itemSummaryCodeId',
            'master_summary_code_name': 'masterSummaryCodeName',
            'item_legacy_low_stock_contact_id': 'itemLegacyLowStockContactId',
            'low_stock_contact_name': 'lowStockContactName',
            'sector': 'sector',
            'weight_per_wrap': 'weightPerWrap',
            'item_weight': 'itemWeight',
            'production_lot': 'productionLot',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._order_no = None
        self._lob_id = None
        self._sku = None
        self._po_no_id = None
        self._cross_dock = None
        self._process_no = None
        self._ordered_qty = None
        self._allowed_qty = None
        self._shipped_qty = None
        self._backorder_qty = None
        self._adjust_code = None
        self._process_flag = None
        self._rev_date = None
        self._restriction_rule = None
        self._unit_cost = None
        self._unit_sell = None
        self._unit_discount = None
        self._extended_cost = None
        self._extended_sell = None
        self._extended_discount = None
        self._nc_extended_sell = None
        self._per = None
        self._charge_code = None
        self._distribution_code = None
        self._upc = None
        self._vendor_sku = None
        self._order_source_sku = None
        self._item_major_group_id = None
        self._master_major_group_name = None
        self._item_sub_group_id = None
        self._master_sub_group_name = None
        self._item_product_code_id = None
        self._master_production_code_name = None
        self._item_account_code_id = None
        self._master_account_code_name = None
        self._item_summary_code_id = None
        self._master_summary_code_name = None
        self._item_legacy_low_stock_contact_id = None
        self._low_stock_contact_name = None
        self._sector = None
        self._weight_per_wrap = None
        self._item_weight = None
        self._production_lot = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this OrderLineActivity.


        :return: The id of this OrderLineActivity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this OrderLineActivity.


        :param id: The id of this OrderLineActivity.
        :type: int
        """
        self._id = id

    @property
    def create_date(self):
        """
        Gets the create_date of this OrderLineActivity.


        :return: The create_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this OrderLineActivity.


        :param create_date: The create_date of this OrderLineActivity.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this OrderLineActivity.


        :return: The modify_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this OrderLineActivity.


        :param modify_date: The modify_date of this OrderLineActivity.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def order_no(self):
        """
        Gets the order_no of this OrderLineActivity.


        :return: The order_no of this OrderLineActivity.
        :rtype: float
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """
        Sets the order_no of this OrderLineActivity.


        :param order_no: The order_no of this OrderLineActivity.
        :type: float
        """
        self._order_no = order_no

    @property
    def lob_id(self):
        """
        Gets the lob_id of this OrderLineActivity.


        :return: The lob_id of this OrderLineActivity.
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """
        Sets the lob_id of this OrderLineActivity.


        :param lob_id: The lob_id of this OrderLineActivity.
        :type: int
        """
        self._lob_id = lob_id

    @property
    def sku(self):
        """
        Gets the sku of this OrderLineActivity.


        :return: The sku of this OrderLineActivity.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """
        Sets the sku of this OrderLineActivity.


        :param sku: The sku of this OrderLineActivity.
        :type: str
        """
        self._sku = sku

    @property
    def po_no_id(self):
        """
        Gets the po_no_id of this OrderLineActivity.


        :return: The po_no_id of this OrderLineActivity.
        :rtype: int
        """
        return self._po_no_id

    @po_no_id.setter
    def po_no_id(self, po_no_id):
        """
        Sets the po_no_id of this OrderLineActivity.


        :param po_no_id: The po_no_id of this OrderLineActivity.
        :type: int
        """
        self._po_no_id = po_no_id

    @property
    def cross_dock(self):
        """
        Gets the cross_dock of this OrderLineActivity.


        :return: The cross_dock of this OrderLineActivity.
        :rtype: int
        """
        return self._cross_dock

    @cross_dock.setter
    def cross_dock(self, cross_dock):
        """
        Sets the cross_dock of this OrderLineActivity.


        :param cross_dock: The cross_dock of this OrderLineActivity.
        :type: int
        """
        self._cross_dock = cross_dock

    @property
    def process_no(self):
        """
        Gets the process_no of this OrderLineActivity.


        :return: The process_no of this OrderLineActivity.
        :rtype: int
        """
        return self._process_no

    @process_no.setter
    def process_no(self, process_no):
        """
        Sets the process_no of this OrderLineActivity.


        :param process_no: The process_no of this OrderLineActivity.
        :type: int
        """
        self._process_no = process_no

    @property
    def ordered_qty(self):
        """
        Gets the ordered_qty of this OrderLineActivity.


        :return: The ordered_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._ordered_qty

    @ordered_qty.setter
    def ordered_qty(self, ordered_qty):
        """
        Sets the ordered_qty of this OrderLineActivity.


        :param ordered_qty: The ordered_qty of this OrderLineActivity.
        :type: int
        """
        self._ordered_qty = ordered_qty

    @property
    def allowed_qty(self):
        """
        Gets the allowed_qty of this OrderLineActivity.


        :return: The allowed_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._allowed_qty

    @allowed_qty.setter
    def allowed_qty(self, allowed_qty):
        """
        Sets the allowed_qty of this OrderLineActivity.


        :param allowed_qty: The allowed_qty of this OrderLineActivity.
        :type: int
        """
        self._allowed_qty = allowed_qty

    @property
    def shipped_qty(self):
        """
        Gets the shipped_qty of this OrderLineActivity.


        :return: The shipped_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._shipped_qty

    @shipped_qty.setter
    def shipped_qty(self, shipped_qty):
        """
        Sets the shipped_qty of this OrderLineActivity.


        :param shipped_qty: The shipped_qty of this OrderLineActivity.
        :type: int
        """
        self._shipped_qty = shipped_qty

    @property
    def backorder_qty(self):
        """
        Gets the backorder_qty of this OrderLineActivity.


        :return: The backorder_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._backorder_qty

    @backorder_qty.setter
    def backorder_qty(self, backorder_qty):
        """
        Sets the backorder_qty of this OrderLineActivity.


        :param backorder_qty: The backorder_qty of this OrderLineActivity.
        :type: int
        """
        self._backorder_qty = backorder_qty

    @property
    def adjust_code(self):
        """
        Gets the adjust_code of this OrderLineActivity.


        :return: The adjust_code of this OrderLineActivity.
        :rtype: int
        """
        return self._adjust_code

    @adjust_code.setter
    def adjust_code(self, adjust_code):
        """
        Sets the adjust_code of this OrderLineActivity.


        :param adjust_code: The adjust_code of this OrderLineActivity.
        :type: int
        """
        self._adjust_code = adjust_code

    @property
    def process_flag(self):
        """
        Gets the process_flag of this OrderLineActivity.


        :return: The process_flag of this OrderLineActivity.
        :rtype: str
        """
        return self._process_flag

    @process_flag.setter
    def process_flag(self, process_flag):
        """
        Sets the process_flag of this OrderLineActivity.


        :param process_flag: The process_flag of this OrderLineActivity.
        :type: str
        """
        self._process_flag = process_flag

    @property
    def rev_date(self):
        """
        Gets the rev_date of this OrderLineActivity.


        :return: The rev_date of this OrderLineActivity.
        :rtype: str
        """
        return self._rev_date

    @rev_date.setter
    def rev_date(self, rev_date):
        """
        Sets the rev_date of this OrderLineActivity.


        :param rev_date: The rev_date of this OrderLineActivity.
        :type: str
        """
        self._rev_date = rev_date

    @property
    def restriction_rule(self):
        """
        Gets the restriction_rule of this OrderLineActivity.


        :return: The restriction_rule of this OrderLineActivity.
        :rtype: int
        """
        return self._restriction_rule

    @restriction_rule.setter
    def restriction_rule(self, restriction_rule):
        """
        Sets the restriction_rule of this OrderLineActivity.


        :param restriction_rule: The restriction_rule of this OrderLineActivity.
        :type: int
        """
        self._restriction_rule = restriction_rule

    @property
    def unit_cost(self):
        """
        Gets the unit_cost of this OrderLineActivity.


        :return: The unit_cost of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_cost

    @unit_cost.setter
    def unit_cost(self, unit_cost):
        """
        Sets the unit_cost of this OrderLineActivity.


        :param unit_cost: The unit_cost of this OrderLineActivity.
        :type: float
        """
        self._unit_cost = unit_cost

    @property
    def unit_sell(self):
        """
        Gets the unit_sell of this OrderLineActivity.


        :return: The unit_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_sell

    @unit_sell.setter
    def unit_sell(self, unit_sell):
        """
        Sets the unit_sell of this OrderLineActivity.


        :param unit_sell: The unit_sell of this OrderLineActivity.
        :type: float
        """
        self._unit_sell = unit_sell

    @property
    def unit_discount(self):
        """
        Gets the unit_discount of this OrderLineActivity.


        :return: The unit_discount of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_discount

    @unit_discount.setter
    def unit_discount(self, unit_discount):
        """
        Sets the unit_discount of this OrderLineActivity.


        :param unit_discount: The unit_discount of this OrderLineActivity.
        :type: float
        """
        self._unit_discount = unit_discount

    @property
    def extended_cost(self):
        """
        Gets the extended_cost of this OrderLineActivity.


        :return: The extended_cost of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_cost

    @extended_cost.setter
    def extended_cost(self, extended_cost):
        """
        Sets the extended_cost of this OrderLineActivity.


        :param extended_cost: The extended_cost of this OrderLineActivity.
        :type: float
        """
        self._extended_cost = extended_cost

    @property
    def extended_sell(self):
        """
        Gets the extended_sell of this OrderLineActivity.


        :return: The extended_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_sell

    @extended_sell.setter
    def extended_sell(self, extended_sell):
        """
        Sets the extended_sell of this OrderLineActivity.


        :param extended_sell: The extended_sell of this OrderLineActivity.
        :type: float
        """
        self._extended_sell = extended_sell

    @property
    def extended_discount(self):
        """
        Gets the extended_discount of this OrderLineActivity.


        :return: The extended_discount of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_discount

    @extended_discount.setter
    def extended_discount(self, extended_discount):
        """
        Sets the extended_discount of this OrderLineActivity.


        :param extended_discount: The extended_discount of this OrderLineActivity.
        :type: float
        """
        self._extended_discount = extended_discount

    @property
    def nc_extended_sell(self):
        """
        Gets the nc_extended_sell of this OrderLineActivity.


        :return: The nc_extended_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._nc_extended_sell

    @nc_extended_sell.setter
    def nc_extended_sell(self, nc_extended_sell):
        """
        Sets the nc_extended_sell of this OrderLineActivity.


        :param nc_extended_sell: The nc_extended_sell of this OrderLineActivity.
        :type: float
        """
        self._nc_extended_sell = nc_extended_sell

    @property
    def per(self):
        """
        Gets the per of this OrderLineActivity.


        :return: The per of this OrderLineActivity.
        :rtype: str
        """
        return self._per

    @per.setter
    def per(self, per):
        """
        Sets the per of this OrderLineActivity.


        :param per: The per of this OrderLineActivity.
        :type: str
        """
        self._per = per

    @property
    def charge_code(self):
        """
        Gets the charge_code of this OrderLineActivity.


        :return: The charge_code of this OrderLineActivity.
        :rtype: str
        """
        return self._charge_code

    @charge_code.setter
    def charge_code(self, charge_code):
        """
        Sets the charge_code of this OrderLineActivity.


        :param charge_code: The charge_code of this OrderLineActivity.
        :type: str
        """
        self._charge_code = charge_code

    @property
    def distribution_code(self):
        """
        Gets the distribution_code of this OrderLineActivity.


        :return: The distribution_code of this OrderLineActivity.
        :rtype: str
        """
        return self._distribution_code

    @distribution_code.setter
    def distribution_code(self, distribution_code):
        """
        Sets the distribution_code of this OrderLineActivity.


        :param distribution_code: The distribution_code of this OrderLineActivity.
        :type: str
        """
        self._distribution_code = distribution_code

    @property
    def upc(self):
        """
        Gets the upc of this OrderLineActivity.


        :return: The upc of this OrderLineActivity.
        :rtype: str
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """
        Sets the upc of this OrderLineActivity.


        :param upc: The upc of this OrderLineActivity.
        :type: str
        """
        self._upc = upc

    @property
    def vendor_sku(self):
        """
        Gets the vendor_sku of this OrderLineActivity.


        :return: The vendor_sku of this OrderLineActivity.
        :rtype: str
        """
        return self._vendor_sku

    @vendor_sku.setter
    def vendor_sku(self, vendor_sku):
        """
        Sets the vendor_sku of this OrderLineActivity.


        :param vendor_sku: The vendor_sku of this OrderLineActivity.
        :type: str
        """
        self._vendor_sku = vendor_sku

    @property
    def order_source_sku(self):
        """
        Gets the order_source_sku of this OrderLineActivity.


        :return: The order_source_sku of this OrderLineActivity.
        :rtype: str
        """
        return self._order_source_sku

    @order_source_sku.setter
    def order_source_sku(self, order_source_sku):
        """
        Sets the order_source_sku of this OrderLineActivity.


        :param order_source_sku: The order_source_sku of this OrderLineActivity.
        :type: str
        """
        self._order_source_sku = order_source_sku

    @property
    def item_major_group_id(self):
        """
        Gets the item_major_group_id of this OrderLineActivity.


        :return: The item_major_group_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_major_group_id

    @item_major_group_id.setter
    def item_major_group_id(self, item_major_group_id):
        """
        Sets the item_major_group_id of this OrderLineActivity.


        :param item_major_group_id: The item_major_group_id of this OrderLineActivity.
        :type: int
        """
        self._item_major_group_id = item_major_group_id

    @property
    def master_major_group_name(self):
        """
        Gets the master_major_group_name of this OrderLineActivity.


        :return: The master_major_group_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_major_group_name

    @master_major_group_name.setter
    def master_major_group_name(self, master_major_group_name):
        """
        Sets the master_major_group_name of this OrderLineActivity.


        :param master_major_group_name: The master_major_group_name of this OrderLineActivity.
        :type: str
        """
        self._master_major_group_name = master_major_group_name

    @property
    def item_sub_group_id(self):
        """
        Gets the item_sub_group_id of this OrderLineActivity.


        :return: The item_sub_group_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_sub_group_id

    @item_sub_group_id.setter
    def item_sub_group_id(self, item_sub_group_id):
        """
        Sets the item_sub_group_id of this OrderLineActivity.


        :param item_sub_group_id: The item_sub_group_id of this OrderLineActivity.
        :type: int
        """
        self._item_sub_group_id = item_sub_group_id

    @property
    def master_sub_group_name(self):
        """
        Gets the master_sub_group_name of this OrderLineActivity.


        :return: The master_sub_group_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_sub_group_name

    @master_sub_group_name.setter
    def master_sub_group_name(self, master_sub_group_name):
        """
        Sets the master_sub_group_name of this OrderLineActivity.


        :param master_sub_group_name: The master_sub_group_name of this OrderLineActivity.
        :type: str
        """
        self._master_sub_group_name = master_sub_group_name

    @property
    def item_product_code_id(self):
        """
        Gets the item_product_code_id of this OrderLineActivity.


        :return: The item_product_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_product_code_id

    @item_product_code_id.setter
    def item_product_code_id(self, item_product_code_id):
        """
        Sets the item_product_code_id of this OrderLineActivity.


        :param item_product_code_id: The item_product_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_product_code_id = item_product_code_id

    @property
    def master_production_code_name(self):
        """
        Gets the master_production_code_name of this OrderLineActivity.


        :return: The master_production_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_production_code_name

    @master_production_code_name.setter
    def master_production_code_name(self, master_production_code_name):
        """
        Sets the master_production_code_name of this OrderLineActivity.


        :param master_production_code_name: The master_production_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_production_code_name = master_production_code_name

    @property
    def item_account_code_id(self):
        """
        Gets the item_account_code_id of this OrderLineActivity.


        :return: The item_account_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_account_code_id

    @item_account_code_id.setter
    def item_account_code_id(self, item_account_code_id):
        """
        Sets the item_account_code_id of this OrderLineActivity.


        :param item_account_code_id: The item_account_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_account_code_id = item_account_code_id

    @property
    def master_account_code_name(self):
        """
        Gets the master_account_code_name of this OrderLineActivity.


        :return: The master_account_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_account_code_name

    @master_account_code_name.setter
    def master_account_code_name(self, master_account_code_name):
        """
        Sets the master_account_code_name of this OrderLineActivity.


        :param master_account_code_name: The master_account_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_account_code_name = master_account_code_name

    @property
    def item_summary_code_id(self):
        """
        Gets the item_summary_code_id of this OrderLineActivity.


        :return: The item_summary_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_summary_code_id

    @item_summary_code_id.setter
    def item_summary_code_id(self, item_summary_code_id):
        """
        Sets the item_summary_code_id of this OrderLineActivity.


        :param item_summary_code_id: The item_summary_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_summary_code_id = item_summary_code_id

    @property
    def master_summary_code_name(self):
        """
        Gets the master_summary_code_name of this OrderLineActivity.


        :return: The master_summary_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_summary_code_name

    @master_summary_code_name.setter
    def master_summary_code_name(self, master_summary_code_name):
        """
        Sets the master_summary_code_name of this OrderLineActivity.


        :param master_summary_code_name: The master_summary_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_summary_code_name = master_summary_code_name

    @property
    def item_legacy_low_stock_contact_id(self):
        """
        Gets the item_legacy_low_stock_contact_id of this OrderLineActivity.


        :return: The item_legacy_low_stock_contact_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_legacy_low_stock_contact_id

    @item_legacy_low_stock_contact_id.setter
    def item_legacy_low_stock_contact_id(self, item_legacy_low_stock_contact_id):
        """
        Sets the item_legacy_low_stock_contact_id of this OrderLineActivity.


        :param item_legacy_low_stock_contact_id: The item_legacy_low_stock_contact_id of this OrderLineActivity.
        :type: int
        """
        self._item_legacy_low_stock_contact_id = item_legacy_low_stock_contact_id

    @property
    def low_stock_contact_name(self):
        """
        Gets the low_stock_contact_name of this OrderLineActivity.


        :return: The low_stock_contact_name of this OrderLineActivity.
        :rtype: str
        """
        return self._low_stock_contact_name

    @low_stock_contact_name.setter
    def low_stock_contact_name(self, low_stock_contact_name):
        """
        Sets the low_stock_contact_name of this OrderLineActivity.


        :param low_stock_contact_name: The low_stock_contact_name of this OrderLineActivity.
        :type: str
        """
        self._low_stock_contact_name = low_stock_contact_name

    @property
    def sector(self):
        """
        Gets the sector of this OrderLineActivity.


        :return: The sector of this OrderLineActivity.
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """
        Sets the sector of this OrderLineActivity.


        :param sector: The sector of this OrderLineActivity.
        :type: str
        """
        self._sector = sector

    @property
    def weight_per_wrap(self):
        """
        Gets the weight_per_wrap of this OrderLineActivity.


        :return: The weight_per_wrap of this OrderLineActivity.
        :rtype: float
        """
        return self._weight_per_wrap

    @weight_per_wrap.setter
    def weight_per_wrap(self, weight_per_wrap):
        """
        Sets the weight_per_wrap of this OrderLineActivity.


        :param weight_per_wrap: The weight_per_wrap of this OrderLineActivity.
        :type: float
        """
        self._weight_per_wrap = weight_per_wrap

    @property
    def item_weight(self):
        """
        Gets the item_weight of this OrderLineActivity.


        :return: The item_weight of this OrderLineActivity.
        :rtype: float
        """
        return self._item_weight

    @item_weight.setter
    def item_weight(self, item_weight):
        """
        Sets the item_weight of this OrderLineActivity.


        :param item_weight: The item_weight of this OrderLineActivity.
        :type: float
        """
        self._item_weight = item_weight

    @property
    def production_lot(self):
        """
        Gets the production_lot of this OrderLineActivity.


        :return: The production_lot of this OrderLineActivity.
        :rtype: str
        """
        return self._production_lot

    @production_lot.setter
    def production_lot(self, production_lot):
        """
        Sets the production_lot of this OrderLineActivity.


        :param production_lot: The production_lot of this OrderLineActivity.
        :type: str
        """
        self._production_lot = production_lot

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this OrderLineActivity.


        :return: The custom_fields of this OrderLineActivity.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this OrderLineActivity.


        :param custom_fields: The custom_fields of this OrderLineActivity.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

