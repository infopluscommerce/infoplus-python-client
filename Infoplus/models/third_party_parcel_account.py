# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ThirdPartyParcelAccount(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ThirdPartyParcelAccount - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'lob_id': 'int',
            'carrier': 'str',
            'account_no': 'str',
            'account_name': 'str',
            'billing_company': 'str',
            'attention': 'str',
            'street1': 'str',
            'street2': 'str',
            'street3': 'str',
            'city': 'str',
            'state': 'str',
            'country': 'str',
            'zip_code': 'str',
            'phone': 'str',
            'active': 'str',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'lob_id': 'lobId',
            'carrier': 'carrier',
            'account_no': 'accountNo',
            'account_name': 'accountName',
            'billing_company': 'billingCompany',
            'attention': 'attention',
            'street1': 'street1',
            'street2': 'street2',
            'street3': 'street3',
            'city': 'city',
            'state': 'state',
            'country': 'country',
            'zip_code': 'zipCode',
            'phone': 'phone',
            'active': 'active',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._lob_id = None
        self._carrier = None
        self._account_no = None
        self._account_name = None
        self._billing_company = None
        self._attention = None
        self._street1 = None
        self._street2 = None
        self._street3 = None
        self._city = None
        self._state = None
        self._country = None
        self._zip_code = None
        self._phone = None
        self._active = None
        self._create_date = None
        self._modify_date = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this ThirdPartyParcelAccount.


        :return: The id of this ThirdPartyParcelAccount.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ThirdPartyParcelAccount.


        :param id: The id of this ThirdPartyParcelAccount.
        :type: int
        """
        self._id = id

    @property
    def lob_id(self):
        """
        Gets the lob_id of this ThirdPartyParcelAccount.


        :return: The lob_id of this ThirdPartyParcelAccount.
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """
        Sets the lob_id of this ThirdPartyParcelAccount.


        :param lob_id: The lob_id of this ThirdPartyParcelAccount.
        :type: int
        """
        self._lob_id = lob_id

    @property
    def carrier(self):
        """
        Gets the carrier of this ThirdPartyParcelAccount.


        :return: The carrier of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """
        Sets the carrier of this ThirdPartyParcelAccount.


        :param carrier: The carrier of this ThirdPartyParcelAccount.
        :type: str
        """
        self._carrier = carrier

    @property
    def account_no(self):
        """
        Gets the account_no of this ThirdPartyParcelAccount.


        :return: The account_no of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._account_no

    @account_no.setter
    def account_no(self, account_no):
        """
        Sets the account_no of this ThirdPartyParcelAccount.


        :param account_no: The account_no of this ThirdPartyParcelAccount.
        :type: str
        """
        self._account_no = account_no

    @property
    def account_name(self):
        """
        Gets the account_name of this ThirdPartyParcelAccount.


        :return: The account_name of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """
        Sets the account_name of this ThirdPartyParcelAccount.


        :param account_name: The account_name of this ThirdPartyParcelAccount.
        :type: str
        """
        self._account_name = account_name

    @property
    def billing_company(self):
        """
        Gets the billing_company of this ThirdPartyParcelAccount.


        :return: The billing_company of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._billing_company

    @billing_company.setter
    def billing_company(self, billing_company):
        """
        Sets the billing_company of this ThirdPartyParcelAccount.


        :param billing_company: The billing_company of this ThirdPartyParcelAccount.
        :type: str
        """
        self._billing_company = billing_company

    @property
    def attention(self):
        """
        Gets the attention of this ThirdPartyParcelAccount.


        :return: The attention of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._attention

    @attention.setter
    def attention(self, attention):
        """
        Sets the attention of this ThirdPartyParcelAccount.


        :param attention: The attention of this ThirdPartyParcelAccount.
        :type: str
        """
        self._attention = attention

    @property
    def street1(self):
        """
        Gets the street1 of this ThirdPartyParcelAccount.


        :return: The street1 of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._street1

    @street1.setter
    def street1(self, street1):
        """
        Sets the street1 of this ThirdPartyParcelAccount.


        :param street1: The street1 of this ThirdPartyParcelAccount.
        :type: str
        """
        self._street1 = street1

    @property
    def street2(self):
        """
        Gets the street2 of this ThirdPartyParcelAccount.


        :return: The street2 of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._street2

    @street2.setter
    def street2(self, street2):
        """
        Sets the street2 of this ThirdPartyParcelAccount.


        :param street2: The street2 of this ThirdPartyParcelAccount.
        :type: str
        """
        self._street2 = street2

    @property
    def street3(self):
        """
        Gets the street3 of this ThirdPartyParcelAccount.


        :return: The street3 of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._street3

    @street3.setter
    def street3(self, street3):
        """
        Sets the street3 of this ThirdPartyParcelAccount.


        :param street3: The street3 of this ThirdPartyParcelAccount.
        :type: str
        """
        self._street3 = street3

    @property
    def city(self):
        """
        Gets the city of this ThirdPartyParcelAccount.


        :return: The city of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """
        Sets the city of this ThirdPartyParcelAccount.


        :param city: The city of this ThirdPartyParcelAccount.
        :type: str
        """
        self._city = city

    @property
    def state(self):
        """
        Gets the state of this ThirdPartyParcelAccount.


        :return: The state of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this ThirdPartyParcelAccount.


        :param state: The state of this ThirdPartyParcelAccount.
        :type: str
        """
        self._state = state

    @property
    def country(self):
        """
        Gets the country of this ThirdPartyParcelAccount.


        :return: The country of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """
        Sets the country of this ThirdPartyParcelAccount.


        :param country: The country of this ThirdPartyParcelAccount.
        :type: str
        """
        self._country = country

    @property
    def zip_code(self):
        """
        Gets the zip_code of this ThirdPartyParcelAccount.


        :return: The zip_code of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """
        Sets the zip_code of this ThirdPartyParcelAccount.


        :param zip_code: The zip_code of this ThirdPartyParcelAccount.
        :type: str
        """
        self._zip_code = zip_code

    @property
    def phone(self):
        """
        Gets the phone of this ThirdPartyParcelAccount.


        :return: The phone of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """
        Sets the phone of this ThirdPartyParcelAccount.


        :param phone: The phone of this ThirdPartyParcelAccount.
        :type: str
        """
        self._phone = phone

    @property
    def active(self):
        """
        Gets the active of this ThirdPartyParcelAccount.


        :return: The active of this ThirdPartyParcelAccount.
        :rtype: str
        """
        return self._active

    @active.setter
    def active(self, active):
        """
        Sets the active of this ThirdPartyParcelAccount.


        :param active: The active of this ThirdPartyParcelAccount.
        :type: str
        """
        self._active = active

    @property
    def create_date(self):
        """
        Gets the create_date of this ThirdPartyParcelAccount.


        :return: The create_date of this ThirdPartyParcelAccount.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this ThirdPartyParcelAccount.


        :param create_date: The create_date of this ThirdPartyParcelAccount.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this ThirdPartyParcelAccount.


        :return: The modify_date of this ThirdPartyParcelAccount.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this ThirdPartyParcelAccount.


        :param modify_date: The modify_date of this ThirdPartyParcelAccount.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this ThirdPartyParcelAccount.


        :return: The custom_fields of this ThirdPartyParcelAccount.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this ThirdPartyParcelAccount.


        :param custom_fields: The custom_fields of this ThirdPartyParcelAccount.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

