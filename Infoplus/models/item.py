# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: v3.0
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Item(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'account_code_id': 'int',
        'low_stock_contact_id': 'int',
        'legacy_low_level_contact_id': 'int',
        'low_stock_code_id': 'int',
        'major_group_id': 'int',
        'sub_group_id': 'int',
        'product_code_id': 'int',
        'summary_code_id': 'int',
        'buyer_id': 'int',
        'lob_id': 'int',
        'sku': 'str',
        'vendor_sku': 'str',
        'upc': 'str',
        'item_description': 'str',
        'packing_slip_description': 'str',
        'absolute_max': 'str',
        'additional_description': 'str',
        'backorder': 'str',
        'charge_code': 'str',
        'commodity_code_id': 'int',
        'companion_code': 'int',
        'create_date': 'datetime',
        'critical_amount': 'int',
        'overall_fixed_reorder_point': 'int',
        'overall_lead_time': 'int',
        'sell_price': 'float',
        'pricing_per': 'str',
        'lot_control_flag': 'str',
        'max_cycle': 'int',
        'max_interim': 'int',
        'numeric_sort_order': 'int',
        'outside_vendor_id': 'int',
        'pick_code': 'str',
        'pod_order_suffix': 'int',
        'pod_rev_date': 'str',
        'status': 'str',
        'seasonal_item': 'str',
        'requires_production_lot': 'str',
        'sector': 'str',
        'secure': 'str',
        'serial_code': 'str',
        'unit_code': 'str',
        'units_per_wrap': 'int',
        'weight_per_wrap': 'float',
        'quantity_per_inner_pack': 'int',
        'quantity_per_case': 'int',
        'quantity_per_pallet': 'int',
        'inner_pack_barcode': 'str',
        'case_barcode': 'str',
        'pallet_barcode': 'str',
        'void_date': 'datetime',
        'wrap_code': 'str',
        'extrinsic_text1': 'str',
        'extrinsic_text2': 'str',
        'extrinsic_text3': 'str',
        'extrinsic_number1': 'int',
        'extrinsic_number2': 'int',
        'extrinsic_decimal1': 'float',
        'extrinsic_decimal2': 'float',
        'casebreak_enabled': 'str',
        'vendor_id': 'int',
        'vendor_price': 'float',
        'vendor_per': 'str',
        'modify_date': 'datetime',
        'primary_image': 'str',
        'pick_image': 'str',
        'behavior_type': 'str',
        'assembly_instructions': 'str',
        'forward_lot_mixing_rule': 'str',
        'storage_lot_mixing_rule': 'str',
        'forward_item_mixing_rule': 'str',
        'storage_item_mixing_rule': 'str',
        'allocation_rule': 'str',
        'allocation_sort': 'str',
        'allocation_field': 'str',
        'barcode_field': 'str',
        'warehouse_display_field': 'str',
        'product_id_tag_scheme_id': 'int',
        'item_serial_scheme_id': 'int',
        'receiving_criteria_scheme_id': 'int',
        'asn_rule': 'str',
        'quantity_type': 'str',
        'hazmat': 'str',
        'is_alcohol': 'bool',
        'alcohol_type': 'str',
        'alcohol_content': 'float',
        'alcohol_container': 'str',
        'alcohol_vintage_year': 'str',
        'alcohol_country': 'str',
        'alcohol_state': 'str',
        'alcohol_region': 'str',
        'alcohol_brand': 'str',
        'alcohol_upc_code': 'str',
        'alcohol_nambca_code': 'str',
        'alcohol_unimerc_code': 'str',
        'alcohol_scc_code': 'str',
        'length': 'float',
        'width': 'float',
        'height': 'float',
        'top_up': 'bool',
        'ship_solo': 'bool',
        'inventory_update_timestamp': 'datetime',
        'available_quantity': 'int',
        'damaged_quantity': 'int',
        'in_fulfillment_process_quantity': 'int',
        'on_hand_quantity': 'int',
        'open_order_quantity': 'int',
        'open_po_quantity': 'int',
        'orderable_quantity': 'int',
        'unallocatable_quantity': 'int',
        'unavailable_quantity': 'int',
        'total_demand': 'int',
        'available_quantity_inner_packs': 'int',
        'damaged_quantity_inner_packs': 'int',
        'in_fulfillment_process_quantity_inner_packs': 'int',
        'on_hand_quantity_inner_packs': 'int',
        'open_order_quantity_inner_packs': 'int',
        'open_po_quantity_inner_packs': 'int',
        'orderable_quantity_inner_packs': 'int',
        'unallocatable_quantity_inner_packs': 'int',
        'unavailable_quantity_inner_packs': 'int',
        'available_quantity_cases': 'int',
        'damaged_quantity_cases': 'int',
        'in_fulfillment_process_quantity_cases': 'int',
        'on_hand_quantity_cases': 'int',
        'open_order_quantity_cases': 'int',
        'open_po_quantity_cases': 'int',
        'orderable_quantity_cases': 'int',
        'unallocatable_quantity_cases': 'int',
        'unavailable_quantity_cases': 'int',
        'available_quantity_pallets': 'int',
        'damaged_quantity_pallets': 'int',
        'in_fulfillment_process_quantity_pallets': 'int',
        'on_hand_quantity_pallets': 'int',
        'open_order_quantity_pallets': 'int',
        'open_po_quantity_pallets': 'int',
        'orderable_quantity_pallets': 'int',
        'unallocatable_quantity_pallets': 'int',
        'unavailable_quantity_pallets': 'int',
        'overall_days_on_hand': 'int',
        'overall_stock_status': 'str',
        'estimated_pallets': 'int',
        'estimated_cases': 'int',
        'estimated_inner_packs': 'int',
        'next_requested_delivery_date': 'datetime',
        'warehouse1_id': 'int',
        'w1_available_quantity': 'int',
        'w1_damaged_quantity': 'int',
        'w1_in_fulfillment_process_quantity': 'int',
        'w1_on_hand_quantity': 'int',
        'w1_open_order_quantity': 'int',
        'w1_open_po_quantity': 'int',
        'w1_orderable_quantity': 'int',
        'w1_unallocatable_quantity': 'int',
        'w1_unavailable_quantity': 'int',
        'w1_days_on_hand': 'int',
        'w1_stock_status': 'str',
        'w1_estimated_pallets': 'int',
        'w1_estimated_cases': 'int',
        'w1_estimated_inner_packs': 'int',
        'w1_next_requested_delivery_date': 'datetime',
        'warehouse2_id': 'int',
        'w2_available_quantity': 'int',
        'w2_damaged_quantity': 'int',
        'w2_in_fulfillment_process_quantity': 'int',
        'w2_on_hand_quantity': 'int',
        'w2_open_order_quantity': 'int',
        'w2_open_po_quantity': 'int',
        'w2_orderable_quantity': 'int',
        'w2_unallocatable_quantity': 'int',
        'w2_unavailable_quantity': 'int',
        'w2_days_on_hand': 'int',
        'w2_stock_status': 'str',
        'w2_estimated_pallets': 'int',
        'w2_estimated_cases': 'int',
        'w2_estimated_inner_packs': 'int',
        'w2_next_requested_delivery_date': 'datetime',
        'warehouse3_id': 'int',
        'w3_available_quantity': 'int',
        'w3_damaged_quantity': 'int',
        'w3_in_fulfillment_process_quantity': 'int',
        'w3_on_hand_quantity': 'int',
        'w3_open_order_quantity': 'int',
        'w3_open_po_quantity': 'int',
        'w3_orderable_quantity': 'int',
        'w3_unallocatable_quantity': 'int',
        'w3_unavailable_quantity': 'int',
        'w3_days_on_hand': 'int',
        'w3_stock_status': 'str',
        'w3_estimated_pallets': 'int',
        'w3_estimated_cases': 'int',
        'w3_estimated_inner_packs': 'int',
        'w3_next_requested_delivery_date': 'datetime',
        'warehouse4_id': 'int',
        'w4_available_quantity': 'int',
        'w4_damaged_quantity': 'int',
        'w4_in_fulfillment_process_quantity': 'int',
        'w4_on_hand_quantity': 'int',
        'w4_open_order_quantity': 'int',
        'w4_open_po_quantity': 'int',
        'w4_orderable_quantity': 'int',
        'w4_unallocatable_quantity': 'int',
        'w4_unavailable_quantity': 'int',
        'w4_days_on_hand': 'int',
        'w4_stock_status': 'str',
        'w4_estimated_pallets': 'int',
        'w4_estimated_cases': 'int',
        'w4_estimated_inner_packs': 'int',
        'w4_next_requested_delivery_date': 'datetime',
        'warehouse5_id': 'int',
        'w5_available_quantity': 'int',
        'w5_damaged_quantity': 'int',
        'w5_in_fulfillment_process_quantity': 'int',
        'w5_on_hand_quantity': 'int',
        'w5_open_order_quantity': 'int',
        'w5_open_po_quantity': 'int',
        'w5_orderable_quantity': 'int',
        'w5_unallocatable_quantity': 'int',
        'w5_unavailable_quantity': 'int',
        'w5_days_on_hand': 'int',
        'w5_stock_status': 'str',
        'w5_estimated_pallets': 'int',
        'w5_estimated_cases': 'int',
        'w5_estimated_inner_packs': 'int',
        'w5_next_requested_delivery_date': 'datetime',
        'warehouse6_id': 'int',
        'w6_available_quantity': 'int',
        'w6_damaged_quantity': 'int',
        'w6_in_fulfillment_process_quantity': 'int',
        'w6_on_hand_quantity': 'int',
        'w6_open_order_quantity': 'int',
        'w6_open_po_quantity': 'int',
        'w6_orderable_quantity': 'int',
        'w6_unallocatable_quantity': 'int',
        'w6_unavailable_quantity': 'int',
        'w6_days_on_hand': 'int',
        'w6_stock_status': 'str',
        'w6_estimated_pallets': 'int',
        'w6_estimated_cases': 'int',
        'w6_estimated_inner_packs': 'int',
        'w6_next_requested_delivery_date': 'datetime',
        'warehouse7_id': 'int',
        'w7_available_quantity': 'int',
        'w7_damaged_quantity': 'int',
        'w7_in_fulfillment_process_quantity': 'int',
        'w7_on_hand_quantity': 'int',
        'w7_open_order_quantity': 'int',
        'w7_open_po_quantity': 'int',
        'w7_orderable_quantity': 'int',
        'w7_unallocatable_quantity': 'int',
        'w7_unavailable_quantity': 'int',
        'w7_days_on_hand': 'int',
        'w7_stock_status': 'str',
        'w7_estimated_pallets': 'int',
        'w7_estimated_cases': 'int',
        'w7_estimated_inner_packs': 'int',
        'w7_next_requested_delivery_date': 'datetime',
        'warehouse8_id': 'int',
        'w8_available_quantity': 'int',
        'w8_damaged_quantity': 'int',
        'w8_in_fulfillment_process_quantity': 'int',
        'w8_on_hand_quantity': 'int',
        'w8_open_order_quantity': 'int',
        'w8_open_po_quantity': 'int',
        'w8_orderable_quantity': 'int',
        'w8_unallocatable_quantity': 'int',
        'w8_unavailable_quantity': 'int',
        'w8_days_on_hand': 'int',
        'w8_stock_status': 'str',
        'w8_estimated_pallets': 'int',
        'w8_estimated_cases': 'int',
        'w8_estimated_inner_packs': 'int',
        'w8_next_requested_delivery_date': 'datetime',
        'warehouse9_id': 'int',
        'w9_available_quantity': 'int',
        'w9_damaged_quantity': 'int',
        'w9_in_fulfillment_process_quantity': 'int',
        'w9_on_hand_quantity': 'int',
        'w9_open_order_quantity': 'int',
        'w9_open_po_quantity': 'int',
        'w9_orderable_quantity': 'int',
        'w9_unallocatable_quantity': 'int',
        'w9_unavailable_quantity': 'int',
        'w9_days_on_hand': 'int',
        'w9_stock_status': 'str',
        'w9_estimated_pallets': 'int',
        'w9_estimated_cases': 'int',
        'w9_estimated_inner_packs': 'int',
        'w9_next_requested_delivery_date': 'datetime',
        'warehouse10_id': 'int',
        'w10_available_quantity': 'int',
        'w10_damaged_quantity': 'int',
        'w10_in_fulfillment_process_quantity': 'int',
        'w10_on_hand_quantity': 'int',
        'w10_open_order_quantity': 'int',
        'w10_open_po_quantity': 'int',
        'w10_orderable_quantity': 'int',
        'w10_unallocatable_quantity': 'int',
        'w10_unavailable_quantity': 'int',
        'w10_days_on_hand': 'int',
        'w10_stock_status': 'str',
        'w10_estimated_pallets': 'int',
        'w10_estimated_cases': 'int',
        'w10_estimated_inner_packs': 'int',
        'w10_next_requested_delivery_date': 'datetime',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'account_code_id': 'accountCodeId',
        'low_stock_contact_id': 'lowStockContactId',
        'legacy_low_level_contact_id': 'legacyLowLevelContactId',
        'low_stock_code_id': 'lowStockCodeId',
        'major_group_id': 'majorGroupId',
        'sub_group_id': 'subGroupId',
        'product_code_id': 'productCodeId',
        'summary_code_id': 'summaryCodeId',
        'buyer_id': 'buyerId',
        'lob_id': 'lobId',
        'sku': 'sku',
        'vendor_sku': 'vendorSKU',
        'upc': 'upc',
        'item_description': 'itemDescription',
        'packing_slip_description': 'packingSlipDescription',
        'absolute_max': 'absoluteMax',
        'additional_description': 'additionalDescription',
        'backorder': 'backorder',
        'charge_code': 'chargeCode',
        'commodity_code_id': 'commodityCodeId',
        'companion_code': 'companionCode',
        'create_date': 'createDate',
        'critical_amount': 'criticalAmount',
        'overall_fixed_reorder_point': 'overallFixedReorderPoint',
        'overall_lead_time': 'overallLeadTime',
        'sell_price': 'sellPrice',
        'pricing_per': 'pricingPer',
        'lot_control_flag': 'lotControlFlag',
        'max_cycle': 'maxCycle',
        'max_interim': 'maxInterim',
        'numeric_sort_order': 'numericSortOrder',
        'outside_vendor_id': 'outsideVendorId',
        'pick_code': 'pickCode',
        'pod_order_suffix': 'podOrderSuffix',
        'pod_rev_date': 'podRevDate',
        'status': 'status',
        'seasonal_item': 'seasonalItem',
        'requires_production_lot': 'requiresProductionLot',
        'sector': 'sector',
        'secure': 'secure',
        'serial_code': 'serialCode',
        'unit_code': 'unitCode',
        'units_per_wrap': 'unitsPerWrap',
        'weight_per_wrap': 'weightPerWrap',
        'quantity_per_inner_pack': 'quantityPerInnerPack',
        'quantity_per_case': 'quantityPerCase',
        'quantity_per_pallet': 'quantityPerPallet',
        'inner_pack_barcode': 'innerPackBarcode',
        'case_barcode': 'caseBarcode',
        'pallet_barcode': 'palletBarcode',
        'void_date': 'voidDate',
        'wrap_code': 'wrapCode',
        'extrinsic_text1': 'extrinsicText1',
        'extrinsic_text2': 'extrinsicText2',
        'extrinsic_text3': 'extrinsicText3',
        'extrinsic_number1': 'extrinsicNumber1',
        'extrinsic_number2': 'extrinsicNumber2',
        'extrinsic_decimal1': 'extrinsicDecimal1',
        'extrinsic_decimal2': 'extrinsicDecimal2',
        'casebreak_enabled': 'casebreakEnabled',
        'vendor_id': 'vendorId',
        'vendor_price': 'vendorPrice',
        'vendor_per': 'vendorPer',
        'modify_date': 'modifyDate',
        'primary_image': 'primaryImage',
        'pick_image': 'pickImage',
        'behavior_type': 'behaviorType',
        'assembly_instructions': 'assemblyInstructions',
        'forward_lot_mixing_rule': 'forwardLotMixingRule',
        'storage_lot_mixing_rule': 'storageLotMixingRule',
        'forward_item_mixing_rule': 'forwardItemMixingRule',
        'storage_item_mixing_rule': 'storageItemMixingRule',
        'allocation_rule': 'allocationRule',
        'allocation_sort': 'allocationSort',
        'allocation_field': 'allocationField',
        'barcode_field': 'barcodeField',
        'warehouse_display_field': 'warehouseDisplayField',
        'product_id_tag_scheme_id': 'productIdTagSchemeId',
        'item_serial_scheme_id': 'itemSerialSchemeId',
        'receiving_criteria_scheme_id': 'receivingCriteriaSchemeId',
        'asn_rule': 'asnRule',
        'quantity_type': 'quantityType',
        'hazmat': 'hazmat',
        'is_alcohol': 'isAlcohol',
        'alcohol_type': 'alcoholType',
        'alcohol_content': 'alcoholContent',
        'alcohol_container': 'alcoholContainer',
        'alcohol_vintage_year': 'alcoholVintageYear',
        'alcohol_country': 'alcoholCountry',
        'alcohol_state': 'alcoholState',
        'alcohol_region': 'alcoholRegion',
        'alcohol_brand': 'alcoholBrand',
        'alcohol_upc_code': 'alcoholUPCCode',
        'alcohol_nambca_code': 'alcoholNAMBCACode',
        'alcohol_unimerc_code': 'alcoholUNIMERCCode',
        'alcohol_scc_code': 'alcoholSCCCode',
        'length': 'length',
        'width': 'width',
        'height': 'height',
        'top_up': 'topUp',
        'ship_solo': 'shipSolo',
        'inventory_update_timestamp': 'inventoryUpdateTimestamp',
        'available_quantity': 'availableQuantity',
        'damaged_quantity': 'damagedQuantity',
        'in_fulfillment_process_quantity': 'inFulfillmentProcessQuantity',
        'on_hand_quantity': 'onHandQuantity',
        'open_order_quantity': 'openOrderQuantity',
        'open_po_quantity': 'openPOQuantity',
        'orderable_quantity': 'orderableQuantity',
        'unallocatable_quantity': 'unallocatableQuantity',
        'unavailable_quantity': 'unavailableQuantity',
        'total_demand': 'totalDemand',
        'available_quantity_inner_packs': 'availableQuantityInnerPacks',
        'damaged_quantity_inner_packs': 'damagedQuantityInnerPacks',
        'in_fulfillment_process_quantity_inner_packs': 'inFulfillmentProcessQuantityInnerPacks',
        'on_hand_quantity_inner_packs': 'onHandQuantityInnerPacks',
        'open_order_quantity_inner_packs': 'openOrderQuantityInnerPacks',
        'open_po_quantity_inner_packs': 'openPOQuantityInnerPacks',
        'orderable_quantity_inner_packs': 'orderableQuantityInnerPacks',
        'unallocatable_quantity_inner_packs': 'unallocatableQuantityInnerPacks',
        'unavailable_quantity_inner_packs': 'unavailableQuantityInnerPacks',
        'available_quantity_cases': 'availableQuantityCases',
        'damaged_quantity_cases': 'damagedQuantityCases',
        'in_fulfillment_process_quantity_cases': 'inFulfillmentProcessQuantityCases',
        'on_hand_quantity_cases': 'onHandQuantityCases',
        'open_order_quantity_cases': 'openOrderQuantityCases',
        'open_po_quantity_cases': 'openPOQuantityCases',
        'orderable_quantity_cases': 'orderableQuantityCases',
        'unallocatable_quantity_cases': 'unallocatableQuantityCases',
        'unavailable_quantity_cases': 'unavailableQuantityCases',
        'available_quantity_pallets': 'availableQuantityPallets',
        'damaged_quantity_pallets': 'damagedQuantityPallets',
        'in_fulfillment_process_quantity_pallets': 'inFulfillmentProcessQuantityPallets',
        'on_hand_quantity_pallets': 'onHandQuantityPallets',
        'open_order_quantity_pallets': 'openOrderQuantityPallets',
        'open_po_quantity_pallets': 'openPOQuantityPallets',
        'orderable_quantity_pallets': 'orderableQuantityPallets',
        'unallocatable_quantity_pallets': 'unallocatableQuantityPallets',
        'unavailable_quantity_pallets': 'unavailableQuantityPallets',
        'overall_days_on_hand': 'overallDaysOnHand',
        'overall_stock_status': 'overallStockStatus',
        'estimated_pallets': 'estimatedPallets',
        'estimated_cases': 'estimatedCases',
        'estimated_inner_packs': 'estimatedInnerPacks',
        'next_requested_delivery_date': 'nextRequestedDeliveryDate',
        'warehouse1_id': 'warehouse1Id',
        'w1_available_quantity': 'w1AvailableQuantity',
        'w1_damaged_quantity': 'w1DamagedQuantity',
        'w1_in_fulfillment_process_quantity': 'w1InFulfillmentProcessQuantity',
        'w1_on_hand_quantity': 'w1OnHandQuantity',
        'w1_open_order_quantity': 'w1OpenOrderQuantity',
        'w1_open_po_quantity': 'w1OpenPOQuantity',
        'w1_orderable_quantity': 'w1OrderableQuantity',
        'w1_unallocatable_quantity': 'w1UnallocatableQuantity',
        'w1_unavailable_quantity': 'w1UnavailableQuantity',
        'w1_days_on_hand': 'w1DaysOnHand',
        'w1_stock_status': 'w1StockStatus',
        'w1_estimated_pallets': 'w1EstimatedPallets',
        'w1_estimated_cases': 'w1EstimatedCases',
        'w1_estimated_inner_packs': 'w1EstimatedInnerPacks',
        'w1_next_requested_delivery_date': 'w1NextRequestedDeliveryDate',
        'warehouse2_id': 'warehouse2Id',
        'w2_available_quantity': 'w2AvailableQuantity',
        'w2_damaged_quantity': 'w2DamagedQuantity',
        'w2_in_fulfillment_process_quantity': 'w2InFulfillmentProcessQuantity',
        'w2_on_hand_quantity': 'w2OnHandQuantity',
        'w2_open_order_quantity': 'w2OpenOrderQuantity',
        'w2_open_po_quantity': 'w2OpenPOQuantity',
        'w2_orderable_quantity': 'w2OrderableQuantity',
        'w2_unallocatable_quantity': 'w2UnallocatableQuantity',
        'w2_unavailable_quantity': 'w2UnavailableQuantity',
        'w2_days_on_hand': 'w2DaysOnHand',
        'w2_stock_status': 'w2StockStatus',
        'w2_estimated_pallets': 'w2EstimatedPallets',
        'w2_estimated_cases': 'w2EstimatedCases',
        'w2_estimated_inner_packs': 'w2EstimatedInnerPacks',
        'w2_next_requested_delivery_date': 'w2NextRequestedDeliveryDate',
        'warehouse3_id': 'warehouse3Id',
        'w3_available_quantity': 'w3AvailableQuantity',
        'w3_damaged_quantity': 'w3DamagedQuantity',
        'w3_in_fulfillment_process_quantity': 'w3InFulfillmentProcessQuantity',
        'w3_on_hand_quantity': 'w3OnHandQuantity',
        'w3_open_order_quantity': 'w3OpenOrderQuantity',
        'w3_open_po_quantity': 'w3OpenPOQuantity',
        'w3_orderable_quantity': 'w3OrderableQuantity',
        'w3_unallocatable_quantity': 'w3UnallocatableQuantity',
        'w3_unavailable_quantity': 'w3UnavailableQuantity',
        'w3_days_on_hand': 'w3DaysOnHand',
        'w3_stock_status': 'w3StockStatus',
        'w3_estimated_pallets': 'w3EstimatedPallets',
        'w3_estimated_cases': 'w3EstimatedCases',
        'w3_estimated_inner_packs': 'w3EstimatedInnerPacks',
        'w3_next_requested_delivery_date': 'w3NextRequestedDeliveryDate',
        'warehouse4_id': 'warehouse4Id',
        'w4_available_quantity': 'w4AvailableQuantity',
        'w4_damaged_quantity': 'w4DamagedQuantity',
        'w4_in_fulfillment_process_quantity': 'w4InFulfillmentProcessQuantity',
        'w4_on_hand_quantity': 'w4OnHandQuantity',
        'w4_open_order_quantity': 'w4OpenOrderQuantity',
        'w4_open_po_quantity': 'w4OpenPOQuantity',
        'w4_orderable_quantity': 'w4OrderableQuantity',
        'w4_unallocatable_quantity': 'w4UnallocatableQuantity',
        'w4_unavailable_quantity': 'w4UnavailableQuantity',
        'w4_days_on_hand': 'w4DaysOnHand',
        'w4_stock_status': 'w4StockStatus',
        'w4_estimated_pallets': 'w4EstimatedPallets',
        'w4_estimated_cases': 'w4EstimatedCases',
        'w4_estimated_inner_packs': 'w4EstimatedInnerPacks',
        'w4_next_requested_delivery_date': 'w4NextRequestedDeliveryDate',
        'warehouse5_id': 'warehouse5Id',
        'w5_available_quantity': 'w5AvailableQuantity',
        'w5_damaged_quantity': 'w5DamagedQuantity',
        'w5_in_fulfillment_process_quantity': 'w5InFulfillmentProcessQuantity',
        'w5_on_hand_quantity': 'w5OnHandQuantity',
        'w5_open_order_quantity': 'w5OpenOrderQuantity',
        'w5_open_po_quantity': 'w5OpenPOQuantity',
        'w5_orderable_quantity': 'w5OrderableQuantity',
        'w5_unallocatable_quantity': 'w5UnallocatableQuantity',
        'w5_unavailable_quantity': 'w5UnavailableQuantity',
        'w5_days_on_hand': 'w5DaysOnHand',
        'w5_stock_status': 'w5StockStatus',
        'w5_estimated_pallets': 'w5EstimatedPallets',
        'w5_estimated_cases': 'w5EstimatedCases',
        'w5_estimated_inner_packs': 'w5EstimatedInnerPacks',
        'w5_next_requested_delivery_date': 'w5NextRequestedDeliveryDate',
        'warehouse6_id': 'warehouse6Id',
        'w6_available_quantity': 'w6AvailableQuantity',
        'w6_damaged_quantity': 'w6DamagedQuantity',
        'w6_in_fulfillment_process_quantity': 'w6InFulfillmentProcessQuantity',
        'w6_on_hand_quantity': 'w6OnHandQuantity',
        'w6_open_order_quantity': 'w6OpenOrderQuantity',
        'w6_open_po_quantity': 'w6OpenPOQuantity',
        'w6_orderable_quantity': 'w6OrderableQuantity',
        'w6_unallocatable_quantity': 'w6UnallocatableQuantity',
        'w6_unavailable_quantity': 'w6UnavailableQuantity',
        'w6_days_on_hand': 'w6DaysOnHand',
        'w6_stock_status': 'w6StockStatus',
        'w6_estimated_pallets': 'w6EstimatedPallets',
        'w6_estimated_cases': 'w6EstimatedCases',
        'w6_estimated_inner_packs': 'w6EstimatedInnerPacks',
        'w6_next_requested_delivery_date': 'w6NextRequestedDeliveryDate',
        'warehouse7_id': 'warehouse7Id',
        'w7_available_quantity': 'w7AvailableQuantity',
        'w7_damaged_quantity': 'w7DamagedQuantity',
        'w7_in_fulfillment_process_quantity': 'w7InFulfillmentProcessQuantity',
        'w7_on_hand_quantity': 'w7OnHandQuantity',
        'w7_open_order_quantity': 'w7OpenOrderQuantity',
        'w7_open_po_quantity': 'w7OpenPOQuantity',
        'w7_orderable_quantity': 'w7OrderableQuantity',
        'w7_unallocatable_quantity': 'w7UnallocatableQuantity',
        'w7_unavailable_quantity': 'w7UnavailableQuantity',
        'w7_days_on_hand': 'w7DaysOnHand',
        'w7_stock_status': 'w7StockStatus',
        'w7_estimated_pallets': 'w7EstimatedPallets',
        'w7_estimated_cases': 'w7EstimatedCases',
        'w7_estimated_inner_packs': 'w7EstimatedInnerPacks',
        'w7_next_requested_delivery_date': 'w7NextRequestedDeliveryDate',
        'warehouse8_id': 'warehouse8Id',
        'w8_available_quantity': 'w8AvailableQuantity',
        'w8_damaged_quantity': 'w8DamagedQuantity',
        'w8_in_fulfillment_process_quantity': 'w8InFulfillmentProcessQuantity',
        'w8_on_hand_quantity': 'w8OnHandQuantity',
        'w8_open_order_quantity': 'w8OpenOrderQuantity',
        'w8_open_po_quantity': 'w8OpenPOQuantity',
        'w8_orderable_quantity': 'w8OrderableQuantity',
        'w8_unallocatable_quantity': 'w8UnallocatableQuantity',
        'w8_unavailable_quantity': 'w8UnavailableQuantity',
        'w8_days_on_hand': 'w8DaysOnHand',
        'w8_stock_status': 'w8StockStatus',
        'w8_estimated_pallets': 'w8EstimatedPallets',
        'w8_estimated_cases': 'w8EstimatedCases',
        'w8_estimated_inner_packs': 'w8EstimatedInnerPacks',
        'w8_next_requested_delivery_date': 'w8NextRequestedDeliveryDate',
        'warehouse9_id': 'warehouse9Id',
        'w9_available_quantity': 'w9AvailableQuantity',
        'w9_damaged_quantity': 'w9DamagedQuantity',
        'w9_in_fulfillment_process_quantity': 'w9InFulfillmentProcessQuantity',
        'w9_on_hand_quantity': 'w9OnHandQuantity',
        'w9_open_order_quantity': 'w9OpenOrderQuantity',
        'w9_open_po_quantity': 'w9OpenPOQuantity',
        'w9_orderable_quantity': 'w9OrderableQuantity',
        'w9_unallocatable_quantity': 'w9UnallocatableQuantity',
        'w9_unavailable_quantity': 'w9UnavailableQuantity',
        'w9_days_on_hand': 'w9DaysOnHand',
        'w9_stock_status': 'w9StockStatus',
        'w9_estimated_pallets': 'w9EstimatedPallets',
        'w9_estimated_cases': 'w9EstimatedCases',
        'w9_estimated_inner_packs': 'w9EstimatedInnerPacks',
        'w9_next_requested_delivery_date': 'w9NextRequestedDeliveryDate',
        'warehouse10_id': 'warehouse10Id',
        'w10_available_quantity': 'w10AvailableQuantity',
        'w10_damaged_quantity': 'w10DamagedQuantity',
        'w10_in_fulfillment_process_quantity': 'w10InFulfillmentProcessQuantity',
        'w10_on_hand_quantity': 'w10OnHandQuantity',
        'w10_open_order_quantity': 'w10OpenOrderQuantity',
        'w10_open_po_quantity': 'w10OpenPOQuantity',
        'w10_orderable_quantity': 'w10OrderableQuantity',
        'w10_unallocatable_quantity': 'w10UnallocatableQuantity',
        'w10_unavailable_quantity': 'w10UnavailableQuantity',
        'w10_days_on_hand': 'w10DaysOnHand',
        'w10_stock_status': 'w10StockStatus',
        'w10_estimated_pallets': 'w10EstimatedPallets',
        'w10_estimated_cases': 'w10EstimatedCases',
        'w10_estimated_inner_packs': 'w10EstimatedInnerPacks',
        'w10_next_requested_delivery_date': 'w10NextRequestedDeliveryDate',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, account_code_id=None, low_stock_contact_id=None, legacy_low_level_contact_id=None, low_stock_code_id=None, major_group_id=None, sub_group_id=None, product_code_id=None, summary_code_id=None, buyer_id=None, lob_id=None, sku=None, vendor_sku=None, upc=None, item_description=None, packing_slip_description=None, absolute_max=None, additional_description=None, backorder=None, charge_code=None, commodity_code_id=None, companion_code=None, create_date=None, critical_amount=None, overall_fixed_reorder_point=None, overall_lead_time=None, sell_price=None, pricing_per=None, lot_control_flag=None, max_cycle=None, max_interim=None, numeric_sort_order=None, outside_vendor_id=None, pick_code=None, pod_order_suffix=None, pod_rev_date=None, status=None, seasonal_item=None, requires_production_lot=None, sector=None, secure=None, serial_code=None, unit_code=None, units_per_wrap=None, weight_per_wrap=None, quantity_per_inner_pack=None, quantity_per_case=None, quantity_per_pallet=None, inner_pack_barcode=None, case_barcode=None, pallet_barcode=None, void_date=None, wrap_code=None, extrinsic_text1=None, extrinsic_text2=None, extrinsic_text3=None, extrinsic_number1=None, extrinsic_number2=None, extrinsic_decimal1=None, extrinsic_decimal2=None, casebreak_enabled=None, vendor_id=None, vendor_price=None, vendor_per=None, modify_date=None, primary_image=None, pick_image=None, behavior_type=None, assembly_instructions=None, forward_lot_mixing_rule=None, storage_lot_mixing_rule=None, forward_item_mixing_rule=None, storage_item_mixing_rule=None, allocation_rule=None, allocation_sort=None, allocation_field=None, barcode_field=None, warehouse_display_field=None, product_id_tag_scheme_id=None, item_serial_scheme_id=None, receiving_criteria_scheme_id=None, asn_rule=None, quantity_type=None, hazmat=None, is_alcohol=False, alcohol_type=None, alcohol_content=None, alcohol_container=None, alcohol_vintage_year=None, alcohol_country=None, alcohol_state=None, alcohol_region=None, alcohol_brand=None, alcohol_upc_code=None, alcohol_nambca_code=None, alcohol_unimerc_code=None, alcohol_scc_code=None, length=None, width=None, height=None, top_up=False, ship_solo=False, inventory_update_timestamp=None, available_quantity=None, damaged_quantity=None, in_fulfillment_process_quantity=None, on_hand_quantity=None, open_order_quantity=None, open_po_quantity=None, orderable_quantity=None, unallocatable_quantity=None, unavailable_quantity=None, total_demand=None, available_quantity_inner_packs=None, damaged_quantity_inner_packs=None, in_fulfillment_process_quantity_inner_packs=None, on_hand_quantity_inner_packs=None, open_order_quantity_inner_packs=None, open_po_quantity_inner_packs=None, orderable_quantity_inner_packs=None, unallocatable_quantity_inner_packs=None, unavailable_quantity_inner_packs=None, available_quantity_cases=None, damaged_quantity_cases=None, in_fulfillment_process_quantity_cases=None, on_hand_quantity_cases=None, open_order_quantity_cases=None, open_po_quantity_cases=None, orderable_quantity_cases=None, unallocatable_quantity_cases=None, unavailable_quantity_cases=None, available_quantity_pallets=None, damaged_quantity_pallets=None, in_fulfillment_process_quantity_pallets=None, on_hand_quantity_pallets=None, open_order_quantity_pallets=None, open_po_quantity_pallets=None, orderable_quantity_pallets=None, unallocatable_quantity_pallets=None, unavailable_quantity_pallets=None, overall_days_on_hand=None, overall_stock_status=None, estimated_pallets=None, estimated_cases=None, estimated_inner_packs=None, next_requested_delivery_date=None, warehouse1_id=None, w1_available_quantity=None, w1_damaged_quantity=None, w1_in_fulfillment_process_quantity=None, w1_on_hand_quantity=None, w1_open_order_quantity=None, w1_open_po_quantity=None, w1_orderable_quantity=None, w1_unallocatable_quantity=None, w1_unavailable_quantity=None, w1_days_on_hand=None, w1_stock_status=None, w1_estimated_pallets=None, w1_estimated_cases=None, w1_estimated_inner_packs=None, w1_next_requested_delivery_date=None, warehouse2_id=None, w2_available_quantity=None, w2_damaged_quantity=None, w2_in_fulfillment_process_quantity=None, w2_on_hand_quantity=None, w2_open_order_quantity=None, w2_open_po_quantity=None, w2_orderable_quantity=None, w2_unallocatable_quantity=None, w2_unavailable_quantity=None, w2_days_on_hand=None, w2_stock_status=None, w2_estimated_pallets=None, w2_estimated_cases=None, w2_estimated_inner_packs=None, w2_next_requested_delivery_date=None, warehouse3_id=None, w3_available_quantity=None, w3_damaged_quantity=None, w3_in_fulfillment_process_quantity=None, w3_on_hand_quantity=None, w3_open_order_quantity=None, w3_open_po_quantity=None, w3_orderable_quantity=None, w3_unallocatable_quantity=None, w3_unavailable_quantity=None, w3_days_on_hand=None, w3_stock_status=None, w3_estimated_pallets=None, w3_estimated_cases=None, w3_estimated_inner_packs=None, w3_next_requested_delivery_date=None, warehouse4_id=None, w4_available_quantity=None, w4_damaged_quantity=None, w4_in_fulfillment_process_quantity=None, w4_on_hand_quantity=None, w4_open_order_quantity=None, w4_open_po_quantity=None, w4_orderable_quantity=None, w4_unallocatable_quantity=None, w4_unavailable_quantity=None, w4_days_on_hand=None, w4_stock_status=None, w4_estimated_pallets=None, w4_estimated_cases=None, w4_estimated_inner_packs=None, w4_next_requested_delivery_date=None, warehouse5_id=None, w5_available_quantity=None, w5_damaged_quantity=None, w5_in_fulfillment_process_quantity=None, w5_on_hand_quantity=None, w5_open_order_quantity=None, w5_open_po_quantity=None, w5_orderable_quantity=None, w5_unallocatable_quantity=None, w5_unavailable_quantity=None, w5_days_on_hand=None, w5_stock_status=None, w5_estimated_pallets=None, w5_estimated_cases=None, w5_estimated_inner_packs=None, w5_next_requested_delivery_date=None, warehouse6_id=None, w6_available_quantity=None, w6_damaged_quantity=None, w6_in_fulfillment_process_quantity=None, w6_on_hand_quantity=None, w6_open_order_quantity=None, w6_open_po_quantity=None, w6_orderable_quantity=None, w6_unallocatable_quantity=None, w6_unavailable_quantity=None, w6_days_on_hand=None, w6_stock_status=None, w6_estimated_pallets=None, w6_estimated_cases=None, w6_estimated_inner_packs=None, w6_next_requested_delivery_date=None, warehouse7_id=None, w7_available_quantity=None, w7_damaged_quantity=None, w7_in_fulfillment_process_quantity=None, w7_on_hand_quantity=None, w7_open_order_quantity=None, w7_open_po_quantity=None, w7_orderable_quantity=None, w7_unallocatable_quantity=None, w7_unavailable_quantity=None, w7_days_on_hand=None, w7_stock_status=None, w7_estimated_pallets=None, w7_estimated_cases=None, w7_estimated_inner_packs=None, w7_next_requested_delivery_date=None, warehouse8_id=None, w8_available_quantity=None, w8_damaged_quantity=None, w8_in_fulfillment_process_quantity=None, w8_on_hand_quantity=None, w8_open_order_quantity=None, w8_open_po_quantity=None, w8_orderable_quantity=None, w8_unallocatable_quantity=None, w8_unavailable_quantity=None, w8_days_on_hand=None, w8_stock_status=None, w8_estimated_pallets=None, w8_estimated_cases=None, w8_estimated_inner_packs=None, w8_next_requested_delivery_date=None, warehouse9_id=None, w9_available_quantity=None, w9_damaged_quantity=None, w9_in_fulfillment_process_quantity=None, w9_on_hand_quantity=None, w9_open_order_quantity=None, w9_open_po_quantity=None, w9_orderable_quantity=None, w9_unallocatable_quantity=None, w9_unavailable_quantity=None, w9_days_on_hand=None, w9_stock_status=None, w9_estimated_pallets=None, w9_estimated_cases=None, w9_estimated_inner_packs=None, w9_next_requested_delivery_date=None, warehouse10_id=None, w10_available_quantity=None, w10_damaged_quantity=None, w10_in_fulfillment_process_quantity=None, w10_on_hand_quantity=None, w10_open_order_quantity=None, w10_open_po_quantity=None, w10_orderable_quantity=None, w10_unallocatable_quantity=None, w10_unavailable_quantity=None, w10_days_on_hand=None, w10_stock_status=None, w10_estimated_pallets=None, w10_estimated_cases=None, w10_estimated_inner_packs=None, w10_next_requested_delivery_date=None, custom_fields=None):  # noqa: E501
        """Item - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._account_code_id = None
        self._low_stock_contact_id = None
        self._legacy_low_level_contact_id = None
        self._low_stock_code_id = None
        self._major_group_id = None
        self._sub_group_id = None
        self._product_code_id = None
        self._summary_code_id = None
        self._buyer_id = None
        self._lob_id = None
        self._sku = None
        self._vendor_sku = None
        self._upc = None
        self._item_description = None
        self._packing_slip_description = None
        self._absolute_max = None
        self._additional_description = None
        self._backorder = None
        self._charge_code = None
        self._commodity_code_id = None
        self._companion_code = None
        self._create_date = None
        self._critical_amount = None
        self._overall_fixed_reorder_point = None
        self._overall_lead_time = None
        self._sell_price = None
        self._pricing_per = None
        self._lot_control_flag = None
        self._max_cycle = None
        self._max_interim = None
        self._numeric_sort_order = None
        self._outside_vendor_id = None
        self._pick_code = None
        self._pod_order_suffix = None
        self._pod_rev_date = None
        self._status = None
        self._seasonal_item = None
        self._requires_production_lot = None
        self._sector = None
        self._secure = None
        self._serial_code = None
        self._unit_code = None
        self._units_per_wrap = None
        self._weight_per_wrap = None
        self._quantity_per_inner_pack = None
        self._quantity_per_case = None
        self._quantity_per_pallet = None
        self._inner_pack_barcode = None
        self._case_barcode = None
        self._pallet_barcode = None
        self._void_date = None
        self._wrap_code = None
        self._extrinsic_text1 = None
        self._extrinsic_text2 = None
        self._extrinsic_text3 = None
        self._extrinsic_number1 = None
        self._extrinsic_number2 = None
        self._extrinsic_decimal1 = None
        self._extrinsic_decimal2 = None
        self._casebreak_enabled = None
        self._vendor_id = None
        self._vendor_price = None
        self._vendor_per = None
        self._modify_date = None
        self._primary_image = None
        self._pick_image = None
        self._behavior_type = None
        self._assembly_instructions = None
        self._forward_lot_mixing_rule = None
        self._storage_lot_mixing_rule = None
        self._forward_item_mixing_rule = None
        self._storage_item_mixing_rule = None
        self._allocation_rule = None
        self._allocation_sort = None
        self._allocation_field = None
        self._barcode_field = None
        self._warehouse_display_field = None
        self._product_id_tag_scheme_id = None
        self._item_serial_scheme_id = None
        self._receiving_criteria_scheme_id = None
        self._asn_rule = None
        self._quantity_type = None
        self._hazmat = None
        self._is_alcohol = None
        self._alcohol_type = None
        self._alcohol_content = None
        self._alcohol_container = None
        self._alcohol_vintage_year = None
        self._alcohol_country = None
        self._alcohol_state = None
        self._alcohol_region = None
        self._alcohol_brand = None
        self._alcohol_upc_code = None
        self._alcohol_nambca_code = None
        self._alcohol_unimerc_code = None
        self._alcohol_scc_code = None
        self._length = None
        self._width = None
        self._height = None
        self._top_up = None
        self._ship_solo = None
        self._inventory_update_timestamp = None
        self._available_quantity = None
        self._damaged_quantity = None
        self._in_fulfillment_process_quantity = None
        self._on_hand_quantity = None
        self._open_order_quantity = None
        self._open_po_quantity = None
        self._orderable_quantity = None
        self._unallocatable_quantity = None
        self._unavailable_quantity = None
        self._total_demand = None
        self._available_quantity_inner_packs = None
        self._damaged_quantity_inner_packs = None
        self._in_fulfillment_process_quantity_inner_packs = None
        self._on_hand_quantity_inner_packs = None
        self._open_order_quantity_inner_packs = None
        self._open_po_quantity_inner_packs = None
        self._orderable_quantity_inner_packs = None
        self._unallocatable_quantity_inner_packs = None
        self._unavailable_quantity_inner_packs = None
        self._available_quantity_cases = None
        self._damaged_quantity_cases = None
        self._in_fulfillment_process_quantity_cases = None
        self._on_hand_quantity_cases = None
        self._open_order_quantity_cases = None
        self._open_po_quantity_cases = None
        self._orderable_quantity_cases = None
        self._unallocatable_quantity_cases = None
        self._unavailable_quantity_cases = None
        self._available_quantity_pallets = None
        self._damaged_quantity_pallets = None
        self._in_fulfillment_process_quantity_pallets = None
        self._on_hand_quantity_pallets = None
        self._open_order_quantity_pallets = None
        self._open_po_quantity_pallets = None
        self._orderable_quantity_pallets = None
        self._unallocatable_quantity_pallets = None
        self._unavailable_quantity_pallets = None
        self._overall_days_on_hand = None
        self._overall_stock_status = None
        self._estimated_pallets = None
        self._estimated_cases = None
        self._estimated_inner_packs = None
        self._next_requested_delivery_date = None
        self._warehouse1_id = None
        self._w1_available_quantity = None
        self._w1_damaged_quantity = None
        self._w1_in_fulfillment_process_quantity = None
        self._w1_on_hand_quantity = None
        self._w1_open_order_quantity = None
        self._w1_open_po_quantity = None
        self._w1_orderable_quantity = None
        self._w1_unallocatable_quantity = None
        self._w1_unavailable_quantity = None
        self._w1_days_on_hand = None
        self._w1_stock_status = None
        self._w1_estimated_pallets = None
        self._w1_estimated_cases = None
        self._w1_estimated_inner_packs = None
        self._w1_next_requested_delivery_date = None
        self._warehouse2_id = None
        self._w2_available_quantity = None
        self._w2_damaged_quantity = None
        self._w2_in_fulfillment_process_quantity = None
        self._w2_on_hand_quantity = None
        self._w2_open_order_quantity = None
        self._w2_open_po_quantity = None
        self._w2_orderable_quantity = None
        self._w2_unallocatable_quantity = None
        self._w2_unavailable_quantity = None
        self._w2_days_on_hand = None
        self._w2_stock_status = None
        self._w2_estimated_pallets = None
        self._w2_estimated_cases = None
        self._w2_estimated_inner_packs = None
        self._w2_next_requested_delivery_date = None
        self._warehouse3_id = None
        self._w3_available_quantity = None
        self._w3_damaged_quantity = None
        self._w3_in_fulfillment_process_quantity = None
        self._w3_on_hand_quantity = None
        self._w3_open_order_quantity = None
        self._w3_open_po_quantity = None
        self._w3_orderable_quantity = None
        self._w3_unallocatable_quantity = None
        self._w3_unavailable_quantity = None
        self._w3_days_on_hand = None
        self._w3_stock_status = None
        self._w3_estimated_pallets = None
        self._w3_estimated_cases = None
        self._w3_estimated_inner_packs = None
        self._w3_next_requested_delivery_date = None
        self._warehouse4_id = None
        self._w4_available_quantity = None
        self._w4_damaged_quantity = None
        self._w4_in_fulfillment_process_quantity = None
        self._w4_on_hand_quantity = None
        self._w4_open_order_quantity = None
        self._w4_open_po_quantity = None
        self._w4_orderable_quantity = None
        self._w4_unallocatable_quantity = None
        self._w4_unavailable_quantity = None
        self._w4_days_on_hand = None
        self._w4_stock_status = None
        self._w4_estimated_pallets = None
        self._w4_estimated_cases = None
        self._w4_estimated_inner_packs = None
        self._w4_next_requested_delivery_date = None
        self._warehouse5_id = None
        self._w5_available_quantity = None
        self._w5_damaged_quantity = None
        self._w5_in_fulfillment_process_quantity = None
        self._w5_on_hand_quantity = None
        self._w5_open_order_quantity = None
        self._w5_open_po_quantity = None
        self._w5_orderable_quantity = None
        self._w5_unallocatable_quantity = None
        self._w5_unavailable_quantity = None
        self._w5_days_on_hand = None
        self._w5_stock_status = None
        self._w5_estimated_pallets = None
        self._w5_estimated_cases = None
        self._w5_estimated_inner_packs = None
        self._w5_next_requested_delivery_date = None
        self._warehouse6_id = None
        self._w6_available_quantity = None
        self._w6_damaged_quantity = None
        self._w6_in_fulfillment_process_quantity = None
        self._w6_on_hand_quantity = None
        self._w6_open_order_quantity = None
        self._w6_open_po_quantity = None
        self._w6_orderable_quantity = None
        self._w6_unallocatable_quantity = None
        self._w6_unavailable_quantity = None
        self._w6_days_on_hand = None
        self._w6_stock_status = None
        self._w6_estimated_pallets = None
        self._w6_estimated_cases = None
        self._w6_estimated_inner_packs = None
        self._w6_next_requested_delivery_date = None
        self._warehouse7_id = None
        self._w7_available_quantity = None
        self._w7_damaged_quantity = None
        self._w7_in_fulfillment_process_quantity = None
        self._w7_on_hand_quantity = None
        self._w7_open_order_quantity = None
        self._w7_open_po_quantity = None
        self._w7_orderable_quantity = None
        self._w7_unallocatable_quantity = None
        self._w7_unavailable_quantity = None
        self._w7_days_on_hand = None
        self._w7_stock_status = None
        self._w7_estimated_pallets = None
        self._w7_estimated_cases = None
        self._w7_estimated_inner_packs = None
        self._w7_next_requested_delivery_date = None
        self._warehouse8_id = None
        self._w8_available_quantity = None
        self._w8_damaged_quantity = None
        self._w8_in_fulfillment_process_quantity = None
        self._w8_on_hand_quantity = None
        self._w8_open_order_quantity = None
        self._w8_open_po_quantity = None
        self._w8_orderable_quantity = None
        self._w8_unallocatable_quantity = None
        self._w8_unavailable_quantity = None
        self._w8_days_on_hand = None
        self._w8_stock_status = None
        self._w8_estimated_pallets = None
        self._w8_estimated_cases = None
        self._w8_estimated_inner_packs = None
        self._w8_next_requested_delivery_date = None
        self._warehouse9_id = None
        self._w9_available_quantity = None
        self._w9_damaged_quantity = None
        self._w9_in_fulfillment_process_quantity = None
        self._w9_on_hand_quantity = None
        self._w9_open_order_quantity = None
        self._w9_open_po_quantity = None
        self._w9_orderable_quantity = None
        self._w9_unallocatable_quantity = None
        self._w9_unavailable_quantity = None
        self._w9_days_on_hand = None
        self._w9_stock_status = None
        self._w9_estimated_pallets = None
        self._w9_estimated_cases = None
        self._w9_estimated_inner_packs = None
        self._w9_next_requested_delivery_date = None
        self._warehouse10_id = None
        self._w10_available_quantity = None
        self._w10_damaged_quantity = None
        self._w10_in_fulfillment_process_quantity = None
        self._w10_on_hand_quantity = None
        self._w10_open_order_quantity = None
        self._w10_open_po_quantity = None
        self._w10_orderable_quantity = None
        self._w10_unallocatable_quantity = None
        self._w10_unavailable_quantity = None
        self._w10_days_on_hand = None
        self._w10_stock_status = None
        self._w10_estimated_pallets = None
        self._w10_estimated_cases = None
        self._w10_estimated_inner_packs = None
        self._w10_next_requested_delivery_date = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if account_code_id is not None:
            self.account_code_id = account_code_id
        if low_stock_contact_id is not None:
            self.low_stock_contact_id = low_stock_contact_id
        if legacy_low_level_contact_id is not None:
            self.legacy_low_level_contact_id = legacy_low_level_contact_id
        if low_stock_code_id is not None:
            self.low_stock_code_id = low_stock_code_id
        self.major_group_id = major_group_id
        self.sub_group_id = sub_group_id
        if product_code_id is not None:
            self.product_code_id = product_code_id
        if summary_code_id is not None:
            self.summary_code_id = summary_code_id
        if buyer_id is not None:
            self.buyer_id = buyer_id
        self.lob_id = lob_id
        self.sku = sku
        if vendor_sku is not None:
            self.vendor_sku = vendor_sku
        if upc is not None:
            self.upc = upc
        self.item_description = item_description
        if packing_slip_description is not None:
            self.packing_slip_description = packing_slip_description
        if absolute_max is not None:
            self.absolute_max = absolute_max
        if additional_description is not None:
            self.additional_description = additional_description
        self.backorder = backorder
        self.charge_code = charge_code
        if commodity_code_id is not None:
            self.commodity_code_id = commodity_code_id
        if companion_code is not None:
            self.companion_code = companion_code
        if create_date is not None:
            self.create_date = create_date
        if critical_amount is not None:
            self.critical_amount = critical_amount
        if overall_fixed_reorder_point is not None:
            self.overall_fixed_reorder_point = overall_fixed_reorder_point
        if overall_lead_time is not None:
            self.overall_lead_time = overall_lead_time
        if sell_price is not None:
            self.sell_price = sell_price
        if pricing_per is not None:
            self.pricing_per = pricing_per
        if lot_control_flag is not None:
            self.lot_control_flag = lot_control_flag
        self.max_cycle = max_cycle
        self.max_interim = max_interim
        if numeric_sort_order is not None:
            self.numeric_sort_order = numeric_sort_order
        if outside_vendor_id is not None:
            self.outside_vendor_id = outside_vendor_id
        if pick_code is not None:
            self.pick_code = pick_code
        if pod_order_suffix is not None:
            self.pod_order_suffix = pod_order_suffix
        if pod_rev_date is not None:
            self.pod_rev_date = pod_rev_date
        self.status = status
        self.seasonal_item = seasonal_item
        if requires_production_lot is not None:
            self.requires_production_lot = requires_production_lot
        if sector is not None:
            self.sector = sector
        self.secure = secure
        if serial_code is not None:
            self.serial_code = serial_code
        self.unit_code = unit_code
        if units_per_wrap is not None:
            self.units_per_wrap = units_per_wrap
        if weight_per_wrap is not None:
            self.weight_per_wrap = weight_per_wrap
        if quantity_per_inner_pack is not None:
            self.quantity_per_inner_pack = quantity_per_inner_pack
        if quantity_per_case is not None:
            self.quantity_per_case = quantity_per_case
        if quantity_per_pallet is not None:
            self.quantity_per_pallet = quantity_per_pallet
        if inner_pack_barcode is not None:
            self.inner_pack_barcode = inner_pack_barcode
        if case_barcode is not None:
            self.case_barcode = case_barcode
        if pallet_barcode is not None:
            self.pallet_barcode = pallet_barcode
        if void_date is not None:
            self.void_date = void_date
        if wrap_code is not None:
            self.wrap_code = wrap_code
        if extrinsic_text1 is not None:
            self.extrinsic_text1 = extrinsic_text1
        if extrinsic_text2 is not None:
            self.extrinsic_text2 = extrinsic_text2
        if extrinsic_text3 is not None:
            self.extrinsic_text3 = extrinsic_text3
        if extrinsic_number1 is not None:
            self.extrinsic_number1 = extrinsic_number1
        if extrinsic_number2 is not None:
            self.extrinsic_number2 = extrinsic_number2
        if extrinsic_decimal1 is not None:
            self.extrinsic_decimal1 = extrinsic_decimal1
        if extrinsic_decimal2 is not None:
            self.extrinsic_decimal2 = extrinsic_decimal2
        if casebreak_enabled is not None:
            self.casebreak_enabled = casebreak_enabled
        if vendor_id is not None:
            self.vendor_id = vendor_id
        if vendor_price is not None:
            self.vendor_price = vendor_price
        if vendor_per is not None:
            self.vendor_per = vendor_per
        if modify_date is not None:
            self.modify_date = modify_date
        if primary_image is not None:
            self.primary_image = primary_image
        if pick_image is not None:
            self.pick_image = pick_image
        if behavior_type is not None:
            self.behavior_type = behavior_type
        if assembly_instructions is not None:
            self.assembly_instructions = assembly_instructions
        self.forward_lot_mixing_rule = forward_lot_mixing_rule
        self.storage_lot_mixing_rule = storage_lot_mixing_rule
        self.forward_item_mixing_rule = forward_item_mixing_rule
        self.storage_item_mixing_rule = storage_item_mixing_rule
        self.allocation_rule = allocation_rule
        if allocation_sort is not None:
            self.allocation_sort = allocation_sort
        if allocation_field is not None:
            self.allocation_field = allocation_field
        if barcode_field is not None:
            self.barcode_field = barcode_field
        if warehouse_display_field is not None:
            self.warehouse_display_field = warehouse_display_field
        if product_id_tag_scheme_id is not None:
            self.product_id_tag_scheme_id = product_id_tag_scheme_id
        if item_serial_scheme_id is not None:
            self.item_serial_scheme_id = item_serial_scheme_id
        self.receiving_criteria_scheme_id = receiving_criteria_scheme_id
        if asn_rule is not None:
            self.asn_rule = asn_rule
        if quantity_type is not None:
            self.quantity_type = quantity_type
        self.hazmat = hazmat
        if is_alcohol is not None:
            self.is_alcohol = is_alcohol
        if alcohol_type is not None:
            self.alcohol_type = alcohol_type
        if alcohol_content is not None:
            self.alcohol_content = alcohol_content
        if alcohol_container is not None:
            self.alcohol_container = alcohol_container
        if alcohol_vintage_year is not None:
            self.alcohol_vintage_year = alcohol_vintage_year
        if alcohol_country is not None:
            self.alcohol_country = alcohol_country
        if alcohol_state is not None:
            self.alcohol_state = alcohol_state
        if alcohol_region is not None:
            self.alcohol_region = alcohol_region
        if alcohol_brand is not None:
            self.alcohol_brand = alcohol_brand
        if alcohol_upc_code is not None:
            self.alcohol_upc_code = alcohol_upc_code
        if alcohol_nambca_code is not None:
            self.alcohol_nambca_code = alcohol_nambca_code
        if alcohol_unimerc_code is not None:
            self.alcohol_unimerc_code = alcohol_unimerc_code
        if alcohol_scc_code is not None:
            self.alcohol_scc_code = alcohol_scc_code
        if length is not None:
            self.length = length
        if width is not None:
            self.width = width
        if height is not None:
            self.height = height
        if top_up is not None:
            self.top_up = top_up
        if ship_solo is not None:
            self.ship_solo = ship_solo
        if inventory_update_timestamp is not None:
            self.inventory_update_timestamp = inventory_update_timestamp
        if available_quantity is not None:
            self.available_quantity = available_quantity
        if damaged_quantity is not None:
            self.damaged_quantity = damaged_quantity
        if in_fulfillment_process_quantity is not None:
            self.in_fulfillment_process_quantity = in_fulfillment_process_quantity
        if on_hand_quantity is not None:
            self.on_hand_quantity = on_hand_quantity
        if open_order_quantity is not None:
            self.open_order_quantity = open_order_quantity
        if open_po_quantity is not None:
            self.open_po_quantity = open_po_quantity
        if orderable_quantity is not None:
            self.orderable_quantity = orderable_quantity
        if unallocatable_quantity is not None:
            self.unallocatable_quantity = unallocatable_quantity
        if unavailable_quantity is not None:
            self.unavailable_quantity = unavailable_quantity
        if total_demand is not None:
            self.total_demand = total_demand
        if available_quantity_inner_packs is not None:
            self.available_quantity_inner_packs = available_quantity_inner_packs
        if damaged_quantity_inner_packs is not None:
            self.damaged_quantity_inner_packs = damaged_quantity_inner_packs
        if in_fulfillment_process_quantity_inner_packs is not None:
            self.in_fulfillment_process_quantity_inner_packs = in_fulfillment_process_quantity_inner_packs
        if on_hand_quantity_inner_packs is not None:
            self.on_hand_quantity_inner_packs = on_hand_quantity_inner_packs
        if open_order_quantity_inner_packs is not None:
            self.open_order_quantity_inner_packs = open_order_quantity_inner_packs
        if open_po_quantity_inner_packs is not None:
            self.open_po_quantity_inner_packs = open_po_quantity_inner_packs
        if orderable_quantity_inner_packs is not None:
            self.orderable_quantity_inner_packs = orderable_quantity_inner_packs
        if unallocatable_quantity_inner_packs is not None:
            self.unallocatable_quantity_inner_packs = unallocatable_quantity_inner_packs
        if unavailable_quantity_inner_packs is not None:
            self.unavailable_quantity_inner_packs = unavailable_quantity_inner_packs
        if available_quantity_cases is not None:
            self.available_quantity_cases = available_quantity_cases
        if damaged_quantity_cases is not None:
            self.damaged_quantity_cases = damaged_quantity_cases
        if in_fulfillment_process_quantity_cases is not None:
            self.in_fulfillment_process_quantity_cases = in_fulfillment_process_quantity_cases
        if on_hand_quantity_cases is not None:
            self.on_hand_quantity_cases = on_hand_quantity_cases
        if open_order_quantity_cases is not None:
            self.open_order_quantity_cases = open_order_quantity_cases
        if open_po_quantity_cases is not None:
            self.open_po_quantity_cases = open_po_quantity_cases
        if orderable_quantity_cases is not None:
            self.orderable_quantity_cases = orderable_quantity_cases
        if unallocatable_quantity_cases is not None:
            self.unallocatable_quantity_cases = unallocatable_quantity_cases
        if unavailable_quantity_cases is not None:
            self.unavailable_quantity_cases = unavailable_quantity_cases
        if available_quantity_pallets is not None:
            self.available_quantity_pallets = available_quantity_pallets
        if damaged_quantity_pallets is not None:
            self.damaged_quantity_pallets = damaged_quantity_pallets
        if in_fulfillment_process_quantity_pallets is not None:
            self.in_fulfillment_process_quantity_pallets = in_fulfillment_process_quantity_pallets
        if on_hand_quantity_pallets is not None:
            self.on_hand_quantity_pallets = on_hand_quantity_pallets
        if open_order_quantity_pallets is not None:
            self.open_order_quantity_pallets = open_order_quantity_pallets
        if open_po_quantity_pallets is not None:
            self.open_po_quantity_pallets = open_po_quantity_pallets
        if orderable_quantity_pallets is not None:
            self.orderable_quantity_pallets = orderable_quantity_pallets
        if unallocatable_quantity_pallets is not None:
            self.unallocatable_quantity_pallets = unallocatable_quantity_pallets
        if unavailable_quantity_pallets is not None:
            self.unavailable_quantity_pallets = unavailable_quantity_pallets
        if overall_days_on_hand is not None:
            self.overall_days_on_hand = overall_days_on_hand
        if overall_stock_status is not None:
            self.overall_stock_status = overall_stock_status
        if estimated_pallets is not None:
            self.estimated_pallets = estimated_pallets
        if estimated_cases is not None:
            self.estimated_cases = estimated_cases
        if estimated_inner_packs is not None:
            self.estimated_inner_packs = estimated_inner_packs
        if next_requested_delivery_date is not None:
            self.next_requested_delivery_date = next_requested_delivery_date
        if warehouse1_id is not None:
            self.warehouse1_id = warehouse1_id
        if w1_available_quantity is not None:
            self.w1_available_quantity = w1_available_quantity
        if w1_damaged_quantity is not None:
            self.w1_damaged_quantity = w1_damaged_quantity
        if w1_in_fulfillment_process_quantity is not None:
            self.w1_in_fulfillment_process_quantity = w1_in_fulfillment_process_quantity
        if w1_on_hand_quantity is not None:
            self.w1_on_hand_quantity = w1_on_hand_quantity
        if w1_open_order_quantity is not None:
            self.w1_open_order_quantity = w1_open_order_quantity
        if w1_open_po_quantity is not None:
            self.w1_open_po_quantity = w1_open_po_quantity
        if w1_orderable_quantity is not None:
            self.w1_orderable_quantity = w1_orderable_quantity
        if w1_unallocatable_quantity is not None:
            self.w1_unallocatable_quantity = w1_unallocatable_quantity
        if w1_unavailable_quantity is not None:
            self.w1_unavailable_quantity = w1_unavailable_quantity
        if w1_days_on_hand is not None:
            self.w1_days_on_hand = w1_days_on_hand
        if w1_stock_status is not None:
            self.w1_stock_status = w1_stock_status
        if w1_estimated_pallets is not None:
            self.w1_estimated_pallets = w1_estimated_pallets
        if w1_estimated_cases is not None:
            self.w1_estimated_cases = w1_estimated_cases
        if w1_estimated_inner_packs is not None:
            self.w1_estimated_inner_packs = w1_estimated_inner_packs
        if w1_next_requested_delivery_date is not None:
            self.w1_next_requested_delivery_date = w1_next_requested_delivery_date
        if warehouse2_id is not None:
            self.warehouse2_id = warehouse2_id
        if w2_available_quantity is not None:
            self.w2_available_quantity = w2_available_quantity
        if w2_damaged_quantity is not None:
            self.w2_damaged_quantity = w2_damaged_quantity
        if w2_in_fulfillment_process_quantity is not None:
            self.w2_in_fulfillment_process_quantity = w2_in_fulfillment_process_quantity
        if w2_on_hand_quantity is not None:
            self.w2_on_hand_quantity = w2_on_hand_quantity
        if w2_open_order_quantity is not None:
            self.w2_open_order_quantity = w2_open_order_quantity
        if w2_open_po_quantity is not None:
            self.w2_open_po_quantity = w2_open_po_quantity
        if w2_orderable_quantity is not None:
            self.w2_orderable_quantity = w2_orderable_quantity
        if w2_unallocatable_quantity is not None:
            self.w2_unallocatable_quantity = w2_unallocatable_quantity
        if w2_unavailable_quantity is not None:
            self.w2_unavailable_quantity = w2_unavailable_quantity
        if w2_days_on_hand is not None:
            self.w2_days_on_hand = w2_days_on_hand
        if w2_stock_status is not None:
            self.w2_stock_status = w2_stock_status
        if w2_estimated_pallets is not None:
            self.w2_estimated_pallets = w2_estimated_pallets
        if w2_estimated_cases is not None:
            self.w2_estimated_cases = w2_estimated_cases
        if w2_estimated_inner_packs is not None:
            self.w2_estimated_inner_packs = w2_estimated_inner_packs
        if w2_next_requested_delivery_date is not None:
            self.w2_next_requested_delivery_date = w2_next_requested_delivery_date
        if warehouse3_id is not None:
            self.warehouse3_id = warehouse3_id
        if w3_available_quantity is not None:
            self.w3_available_quantity = w3_available_quantity
        if w3_damaged_quantity is not None:
            self.w3_damaged_quantity = w3_damaged_quantity
        if w3_in_fulfillment_process_quantity is not None:
            self.w3_in_fulfillment_process_quantity = w3_in_fulfillment_process_quantity
        if w3_on_hand_quantity is not None:
            self.w3_on_hand_quantity = w3_on_hand_quantity
        if w3_open_order_quantity is not None:
            self.w3_open_order_quantity = w3_open_order_quantity
        if w3_open_po_quantity is not None:
            self.w3_open_po_quantity = w3_open_po_quantity
        if w3_orderable_quantity is not None:
            self.w3_orderable_quantity = w3_orderable_quantity
        if w3_unallocatable_quantity is not None:
            self.w3_unallocatable_quantity = w3_unallocatable_quantity
        if w3_unavailable_quantity is not None:
            self.w3_unavailable_quantity = w3_unavailable_quantity
        if w3_days_on_hand is not None:
            self.w3_days_on_hand = w3_days_on_hand
        if w3_stock_status is not None:
            self.w3_stock_status = w3_stock_status
        if w3_estimated_pallets is not None:
            self.w3_estimated_pallets = w3_estimated_pallets
        if w3_estimated_cases is not None:
            self.w3_estimated_cases = w3_estimated_cases
        if w3_estimated_inner_packs is not None:
            self.w3_estimated_inner_packs = w3_estimated_inner_packs
        if w3_next_requested_delivery_date is not None:
            self.w3_next_requested_delivery_date = w3_next_requested_delivery_date
        if warehouse4_id is not None:
            self.warehouse4_id = warehouse4_id
        if w4_available_quantity is not None:
            self.w4_available_quantity = w4_available_quantity
        if w4_damaged_quantity is not None:
            self.w4_damaged_quantity = w4_damaged_quantity
        if w4_in_fulfillment_process_quantity is not None:
            self.w4_in_fulfillment_process_quantity = w4_in_fulfillment_process_quantity
        if w4_on_hand_quantity is not None:
            self.w4_on_hand_quantity = w4_on_hand_quantity
        if w4_open_order_quantity is not None:
            self.w4_open_order_quantity = w4_open_order_quantity
        if w4_open_po_quantity is not None:
            self.w4_open_po_quantity = w4_open_po_quantity
        if w4_orderable_quantity is not None:
            self.w4_orderable_quantity = w4_orderable_quantity
        if w4_unallocatable_quantity is not None:
            self.w4_unallocatable_quantity = w4_unallocatable_quantity
        if w4_unavailable_quantity is not None:
            self.w4_unavailable_quantity = w4_unavailable_quantity
        if w4_days_on_hand is not None:
            self.w4_days_on_hand = w4_days_on_hand
        if w4_stock_status is not None:
            self.w4_stock_status = w4_stock_status
        if w4_estimated_pallets is not None:
            self.w4_estimated_pallets = w4_estimated_pallets
        if w4_estimated_cases is not None:
            self.w4_estimated_cases = w4_estimated_cases
        if w4_estimated_inner_packs is not None:
            self.w4_estimated_inner_packs = w4_estimated_inner_packs
        if w4_next_requested_delivery_date is not None:
            self.w4_next_requested_delivery_date = w4_next_requested_delivery_date
        if warehouse5_id is not None:
            self.warehouse5_id = warehouse5_id
        if w5_available_quantity is not None:
            self.w5_available_quantity = w5_available_quantity
        if w5_damaged_quantity is not None:
            self.w5_damaged_quantity = w5_damaged_quantity
        if w5_in_fulfillment_process_quantity is not None:
            self.w5_in_fulfillment_process_quantity = w5_in_fulfillment_process_quantity
        if w5_on_hand_quantity is not None:
            self.w5_on_hand_quantity = w5_on_hand_quantity
        if w5_open_order_quantity is not None:
            self.w5_open_order_quantity = w5_open_order_quantity
        if w5_open_po_quantity is not None:
            self.w5_open_po_quantity = w5_open_po_quantity
        if w5_orderable_quantity is not None:
            self.w5_orderable_quantity = w5_orderable_quantity
        if w5_unallocatable_quantity is not None:
            self.w5_unallocatable_quantity = w5_unallocatable_quantity
        if w5_unavailable_quantity is not None:
            self.w5_unavailable_quantity = w5_unavailable_quantity
        if w5_days_on_hand is not None:
            self.w5_days_on_hand = w5_days_on_hand
        if w5_stock_status is not None:
            self.w5_stock_status = w5_stock_status
        if w5_estimated_pallets is not None:
            self.w5_estimated_pallets = w5_estimated_pallets
        if w5_estimated_cases is not None:
            self.w5_estimated_cases = w5_estimated_cases
        if w5_estimated_inner_packs is not None:
            self.w5_estimated_inner_packs = w5_estimated_inner_packs
        if w5_next_requested_delivery_date is not None:
            self.w5_next_requested_delivery_date = w5_next_requested_delivery_date
        if warehouse6_id is not None:
            self.warehouse6_id = warehouse6_id
        if w6_available_quantity is not None:
            self.w6_available_quantity = w6_available_quantity
        if w6_damaged_quantity is not None:
            self.w6_damaged_quantity = w6_damaged_quantity
        if w6_in_fulfillment_process_quantity is not None:
            self.w6_in_fulfillment_process_quantity = w6_in_fulfillment_process_quantity
        if w6_on_hand_quantity is not None:
            self.w6_on_hand_quantity = w6_on_hand_quantity
        if w6_open_order_quantity is not None:
            self.w6_open_order_quantity = w6_open_order_quantity
        if w6_open_po_quantity is not None:
            self.w6_open_po_quantity = w6_open_po_quantity
        if w6_orderable_quantity is not None:
            self.w6_orderable_quantity = w6_orderable_quantity
        if w6_unallocatable_quantity is not None:
            self.w6_unallocatable_quantity = w6_unallocatable_quantity
        if w6_unavailable_quantity is not None:
            self.w6_unavailable_quantity = w6_unavailable_quantity
        if w6_days_on_hand is not None:
            self.w6_days_on_hand = w6_days_on_hand
        if w6_stock_status is not None:
            self.w6_stock_status = w6_stock_status
        if w6_estimated_pallets is not None:
            self.w6_estimated_pallets = w6_estimated_pallets
        if w6_estimated_cases is not None:
            self.w6_estimated_cases = w6_estimated_cases
        if w6_estimated_inner_packs is not None:
            self.w6_estimated_inner_packs = w6_estimated_inner_packs
        if w6_next_requested_delivery_date is not None:
            self.w6_next_requested_delivery_date = w6_next_requested_delivery_date
        if warehouse7_id is not None:
            self.warehouse7_id = warehouse7_id
        if w7_available_quantity is not None:
            self.w7_available_quantity = w7_available_quantity
        if w7_damaged_quantity is not None:
            self.w7_damaged_quantity = w7_damaged_quantity
        if w7_in_fulfillment_process_quantity is not None:
            self.w7_in_fulfillment_process_quantity = w7_in_fulfillment_process_quantity
        if w7_on_hand_quantity is not None:
            self.w7_on_hand_quantity = w7_on_hand_quantity
        if w7_open_order_quantity is not None:
            self.w7_open_order_quantity = w7_open_order_quantity
        if w7_open_po_quantity is not None:
            self.w7_open_po_quantity = w7_open_po_quantity
        if w7_orderable_quantity is not None:
            self.w7_orderable_quantity = w7_orderable_quantity
        if w7_unallocatable_quantity is not None:
            self.w7_unallocatable_quantity = w7_unallocatable_quantity
        if w7_unavailable_quantity is not None:
            self.w7_unavailable_quantity = w7_unavailable_quantity
        if w7_days_on_hand is not None:
            self.w7_days_on_hand = w7_days_on_hand
        if w7_stock_status is not None:
            self.w7_stock_status = w7_stock_status
        if w7_estimated_pallets is not None:
            self.w7_estimated_pallets = w7_estimated_pallets
        if w7_estimated_cases is not None:
            self.w7_estimated_cases = w7_estimated_cases
        if w7_estimated_inner_packs is not None:
            self.w7_estimated_inner_packs = w7_estimated_inner_packs
        if w7_next_requested_delivery_date is not None:
            self.w7_next_requested_delivery_date = w7_next_requested_delivery_date
        if warehouse8_id is not None:
            self.warehouse8_id = warehouse8_id
        if w8_available_quantity is not None:
            self.w8_available_quantity = w8_available_quantity
        if w8_damaged_quantity is not None:
            self.w8_damaged_quantity = w8_damaged_quantity
        if w8_in_fulfillment_process_quantity is not None:
            self.w8_in_fulfillment_process_quantity = w8_in_fulfillment_process_quantity
        if w8_on_hand_quantity is not None:
            self.w8_on_hand_quantity = w8_on_hand_quantity
        if w8_open_order_quantity is not None:
            self.w8_open_order_quantity = w8_open_order_quantity
        if w8_open_po_quantity is not None:
            self.w8_open_po_quantity = w8_open_po_quantity
        if w8_orderable_quantity is not None:
            self.w8_orderable_quantity = w8_orderable_quantity
        if w8_unallocatable_quantity is not None:
            self.w8_unallocatable_quantity = w8_unallocatable_quantity
        if w8_unavailable_quantity is not None:
            self.w8_unavailable_quantity = w8_unavailable_quantity
        if w8_days_on_hand is not None:
            self.w8_days_on_hand = w8_days_on_hand
        if w8_stock_status is not None:
            self.w8_stock_status = w8_stock_status
        if w8_estimated_pallets is not None:
            self.w8_estimated_pallets = w8_estimated_pallets
        if w8_estimated_cases is not None:
            self.w8_estimated_cases = w8_estimated_cases
        if w8_estimated_inner_packs is not None:
            self.w8_estimated_inner_packs = w8_estimated_inner_packs
        if w8_next_requested_delivery_date is not None:
            self.w8_next_requested_delivery_date = w8_next_requested_delivery_date
        if warehouse9_id is not None:
            self.warehouse9_id = warehouse9_id
        if w9_available_quantity is not None:
            self.w9_available_quantity = w9_available_quantity
        if w9_damaged_quantity is not None:
            self.w9_damaged_quantity = w9_damaged_quantity
        if w9_in_fulfillment_process_quantity is not None:
            self.w9_in_fulfillment_process_quantity = w9_in_fulfillment_process_quantity
        if w9_on_hand_quantity is not None:
            self.w9_on_hand_quantity = w9_on_hand_quantity
        if w9_open_order_quantity is not None:
            self.w9_open_order_quantity = w9_open_order_quantity
        if w9_open_po_quantity is not None:
            self.w9_open_po_quantity = w9_open_po_quantity
        if w9_orderable_quantity is not None:
            self.w9_orderable_quantity = w9_orderable_quantity
        if w9_unallocatable_quantity is not None:
            self.w9_unallocatable_quantity = w9_unallocatable_quantity
        if w9_unavailable_quantity is not None:
            self.w9_unavailable_quantity = w9_unavailable_quantity
        if w9_days_on_hand is not None:
            self.w9_days_on_hand = w9_days_on_hand
        if w9_stock_status is not None:
            self.w9_stock_status = w9_stock_status
        if w9_estimated_pallets is not None:
            self.w9_estimated_pallets = w9_estimated_pallets
        if w9_estimated_cases is not None:
            self.w9_estimated_cases = w9_estimated_cases
        if w9_estimated_inner_packs is not None:
            self.w9_estimated_inner_packs = w9_estimated_inner_packs
        if w9_next_requested_delivery_date is not None:
            self.w9_next_requested_delivery_date = w9_next_requested_delivery_date
        if warehouse10_id is not None:
            self.warehouse10_id = warehouse10_id
        if w10_available_quantity is not None:
            self.w10_available_quantity = w10_available_quantity
        if w10_damaged_quantity is not None:
            self.w10_damaged_quantity = w10_damaged_quantity
        if w10_in_fulfillment_process_quantity is not None:
            self.w10_in_fulfillment_process_quantity = w10_in_fulfillment_process_quantity
        if w10_on_hand_quantity is not None:
            self.w10_on_hand_quantity = w10_on_hand_quantity
        if w10_open_order_quantity is not None:
            self.w10_open_order_quantity = w10_open_order_quantity
        if w10_open_po_quantity is not None:
            self.w10_open_po_quantity = w10_open_po_quantity
        if w10_orderable_quantity is not None:
            self.w10_orderable_quantity = w10_orderable_quantity
        if w10_unallocatable_quantity is not None:
            self.w10_unallocatable_quantity = w10_unallocatable_quantity
        if w10_unavailable_quantity is not None:
            self.w10_unavailable_quantity = w10_unavailable_quantity
        if w10_days_on_hand is not None:
            self.w10_days_on_hand = w10_days_on_hand
        if w10_stock_status is not None:
            self.w10_stock_status = w10_stock_status
        if w10_estimated_pallets is not None:
            self.w10_estimated_pallets = w10_estimated_pallets
        if w10_estimated_cases is not None:
            self.w10_estimated_cases = w10_estimated_cases
        if w10_estimated_inner_packs is not None:
            self.w10_estimated_inner_packs = w10_estimated_inner_packs
        if w10_next_requested_delivery_date is not None:
            self.w10_next_requested_delivery_date = w10_next_requested_delivery_date
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this Item.  # noqa: E501


        :return: The id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Item.


        :param id: The id of this Item.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def account_code_id(self):
        """Gets the account_code_id of this Item.  # noqa: E501


        :return: The account_code_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._account_code_id

    @account_code_id.setter
    def account_code_id(self, account_code_id):
        """Sets the account_code_id of this Item.


        :param account_code_id: The account_code_id of this Item.  # noqa: E501
        :type: int
        """

        self._account_code_id = account_code_id

    @property
    def low_stock_contact_id(self):
        """Gets the low_stock_contact_id of this Item.  # noqa: E501


        :return: The low_stock_contact_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._low_stock_contact_id

    @low_stock_contact_id.setter
    def low_stock_contact_id(self, low_stock_contact_id):
        """Sets the low_stock_contact_id of this Item.


        :param low_stock_contact_id: The low_stock_contact_id of this Item.  # noqa: E501
        :type: int
        """

        self._low_stock_contact_id = low_stock_contact_id

    @property
    def legacy_low_level_contact_id(self):
        """Gets the legacy_low_level_contact_id of this Item.  # noqa: E501


        :return: The legacy_low_level_contact_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._legacy_low_level_contact_id

    @legacy_low_level_contact_id.setter
    def legacy_low_level_contact_id(self, legacy_low_level_contact_id):
        """Sets the legacy_low_level_contact_id of this Item.


        :param legacy_low_level_contact_id: The legacy_low_level_contact_id of this Item.  # noqa: E501
        :type: int
        """

        self._legacy_low_level_contact_id = legacy_low_level_contact_id

    @property
    def low_stock_code_id(self):
        """Gets the low_stock_code_id of this Item.  # noqa: E501


        :return: The low_stock_code_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._low_stock_code_id

    @low_stock_code_id.setter
    def low_stock_code_id(self, low_stock_code_id):
        """Sets the low_stock_code_id of this Item.


        :param low_stock_code_id: The low_stock_code_id of this Item.  # noqa: E501
        :type: int
        """

        self._low_stock_code_id = low_stock_code_id

    @property
    def major_group_id(self):
        """Gets the major_group_id of this Item.  # noqa: E501


        :return: The major_group_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._major_group_id

    @major_group_id.setter
    def major_group_id(self, major_group_id):
        """Sets the major_group_id of this Item.


        :param major_group_id: The major_group_id of this Item.  # noqa: E501
        :type: int
        """
        if major_group_id is None:
            raise ValueError("Invalid value for `major_group_id`, must not be `None`")  # noqa: E501

        self._major_group_id = major_group_id

    @property
    def sub_group_id(self):
        """Gets the sub_group_id of this Item.  # noqa: E501


        :return: The sub_group_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._sub_group_id

    @sub_group_id.setter
    def sub_group_id(self, sub_group_id):
        """Sets the sub_group_id of this Item.


        :param sub_group_id: The sub_group_id of this Item.  # noqa: E501
        :type: int
        """
        if sub_group_id is None:
            raise ValueError("Invalid value for `sub_group_id`, must not be `None`")  # noqa: E501

        self._sub_group_id = sub_group_id

    @property
    def product_code_id(self):
        """Gets the product_code_id of this Item.  # noqa: E501


        :return: The product_code_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._product_code_id

    @product_code_id.setter
    def product_code_id(self, product_code_id):
        """Sets the product_code_id of this Item.


        :param product_code_id: The product_code_id of this Item.  # noqa: E501
        :type: int
        """

        self._product_code_id = product_code_id

    @property
    def summary_code_id(self):
        """Gets the summary_code_id of this Item.  # noqa: E501


        :return: The summary_code_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._summary_code_id

    @summary_code_id.setter
    def summary_code_id(self, summary_code_id):
        """Sets the summary_code_id of this Item.


        :param summary_code_id: The summary_code_id of this Item.  # noqa: E501
        :type: int
        """

        self._summary_code_id = summary_code_id

    @property
    def buyer_id(self):
        """Gets the buyer_id of this Item.  # noqa: E501


        :return: The buyer_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._buyer_id

    @buyer_id.setter
    def buyer_id(self, buyer_id):
        """Sets the buyer_id of this Item.


        :param buyer_id: The buyer_id of this Item.  # noqa: E501
        :type: int
        """

        self._buyer_id = buyer_id

    @property
    def lob_id(self):
        """Gets the lob_id of this Item.  # noqa: E501


        :return: The lob_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this Item.


        :param lob_id: The lob_id of this Item.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def sku(self):
        """Gets the sku of this Item.  # noqa: E501


        :return: The sku of this Item.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this Item.


        :param sku: The sku of this Item.  # noqa: E501
        :type: str
        """
        if sku is None:
            raise ValueError("Invalid value for `sku`, must not be `None`")  # noqa: E501

        self._sku = sku

    @property
    def vendor_sku(self):
        """Gets the vendor_sku of this Item.  # noqa: E501


        :return: The vendor_sku of this Item.  # noqa: E501
        :rtype: str
        """
        return self._vendor_sku

    @vendor_sku.setter
    def vendor_sku(self, vendor_sku):
        """Sets the vendor_sku of this Item.


        :param vendor_sku: The vendor_sku of this Item.  # noqa: E501
        :type: str
        """

        self._vendor_sku = vendor_sku

    @property
    def upc(self):
        """Gets the upc of this Item.  # noqa: E501


        :return: The upc of this Item.  # noqa: E501
        :rtype: str
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """Sets the upc of this Item.


        :param upc: The upc of this Item.  # noqa: E501
        :type: str
        """

        self._upc = upc

    @property
    def item_description(self):
        """Gets the item_description of this Item.  # noqa: E501


        :return: The item_description of this Item.  # noqa: E501
        :rtype: str
        """
        return self._item_description

    @item_description.setter
    def item_description(self, item_description):
        """Sets the item_description of this Item.


        :param item_description: The item_description of this Item.  # noqa: E501
        :type: str
        """
        if item_description is None:
            raise ValueError("Invalid value for `item_description`, must not be `None`")  # noqa: E501

        self._item_description = item_description

    @property
    def packing_slip_description(self):
        """Gets the packing_slip_description of this Item.  # noqa: E501


        :return: The packing_slip_description of this Item.  # noqa: E501
        :rtype: str
        """
        return self._packing_slip_description

    @packing_slip_description.setter
    def packing_slip_description(self, packing_slip_description):
        """Sets the packing_slip_description of this Item.


        :param packing_slip_description: The packing_slip_description of this Item.  # noqa: E501
        :type: str
        """

        self._packing_slip_description = packing_slip_description

    @property
    def absolute_max(self):
        """Gets the absolute_max of this Item.  # noqa: E501


        :return: The absolute_max of this Item.  # noqa: E501
        :rtype: str
        """
        return self._absolute_max

    @absolute_max.setter
    def absolute_max(self, absolute_max):
        """Sets the absolute_max of this Item.


        :param absolute_max: The absolute_max of this Item.  # noqa: E501
        :type: str
        """

        self._absolute_max = absolute_max

    @property
    def additional_description(self):
        """Gets the additional_description of this Item.  # noqa: E501


        :return: The additional_description of this Item.  # noqa: E501
        :rtype: str
        """
        return self._additional_description

    @additional_description.setter
    def additional_description(self, additional_description):
        """Sets the additional_description of this Item.


        :param additional_description: The additional_description of this Item.  # noqa: E501
        :type: str
        """

        self._additional_description = additional_description

    @property
    def backorder(self):
        """Gets the backorder of this Item.  # noqa: E501


        :return: The backorder of this Item.  # noqa: E501
        :rtype: str
        """
        return self._backorder

    @backorder.setter
    def backorder(self, backorder):
        """Sets the backorder of this Item.


        :param backorder: The backorder of this Item.  # noqa: E501
        :type: str
        """
        if backorder is None:
            raise ValueError("Invalid value for `backorder`, must not be `None`")  # noqa: E501

        self._backorder = backorder

    @property
    def charge_code(self):
        """Gets the charge_code of this Item.  # noqa: E501


        :return: The charge_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._charge_code

    @charge_code.setter
    def charge_code(self, charge_code):
        """Sets the charge_code of this Item.


        :param charge_code: The charge_code of this Item.  # noqa: E501
        :type: str
        """
        if charge_code is None:
            raise ValueError("Invalid value for `charge_code`, must not be `None`")  # noqa: E501

        self._charge_code = charge_code

    @property
    def commodity_code_id(self):
        """Gets the commodity_code_id of this Item.  # noqa: E501


        :return: The commodity_code_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._commodity_code_id

    @commodity_code_id.setter
    def commodity_code_id(self, commodity_code_id):
        """Sets the commodity_code_id of this Item.


        :param commodity_code_id: The commodity_code_id of this Item.  # noqa: E501
        :type: int
        """

        self._commodity_code_id = commodity_code_id

    @property
    def companion_code(self):
        """Gets the companion_code of this Item.  # noqa: E501


        :return: The companion_code of this Item.  # noqa: E501
        :rtype: int
        """
        return self._companion_code

    @companion_code.setter
    def companion_code(self, companion_code):
        """Sets the companion_code of this Item.


        :param companion_code: The companion_code of this Item.  # noqa: E501
        :type: int
        """

        self._companion_code = companion_code

    @property
    def create_date(self):
        """Gets the create_date of this Item.  # noqa: E501


        :return: The create_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this Item.


        :param create_date: The create_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def critical_amount(self):
        """Gets the critical_amount of this Item.  # noqa: E501


        :return: The critical_amount of this Item.  # noqa: E501
        :rtype: int
        """
        return self._critical_amount

    @critical_amount.setter
    def critical_amount(self, critical_amount):
        """Sets the critical_amount of this Item.


        :param critical_amount: The critical_amount of this Item.  # noqa: E501
        :type: int
        """

        self._critical_amount = critical_amount

    @property
    def overall_fixed_reorder_point(self):
        """Gets the overall_fixed_reorder_point of this Item.  # noqa: E501


        :return: The overall_fixed_reorder_point of this Item.  # noqa: E501
        :rtype: int
        """
        return self._overall_fixed_reorder_point

    @overall_fixed_reorder_point.setter
    def overall_fixed_reorder_point(self, overall_fixed_reorder_point):
        """Sets the overall_fixed_reorder_point of this Item.


        :param overall_fixed_reorder_point: The overall_fixed_reorder_point of this Item.  # noqa: E501
        :type: int
        """

        self._overall_fixed_reorder_point = overall_fixed_reorder_point

    @property
    def overall_lead_time(self):
        """Gets the overall_lead_time of this Item.  # noqa: E501


        :return: The overall_lead_time of this Item.  # noqa: E501
        :rtype: int
        """
        return self._overall_lead_time

    @overall_lead_time.setter
    def overall_lead_time(self, overall_lead_time):
        """Sets the overall_lead_time of this Item.


        :param overall_lead_time: The overall_lead_time of this Item.  # noqa: E501
        :type: int
        """

        self._overall_lead_time = overall_lead_time

    @property
    def sell_price(self):
        """Gets the sell_price of this Item.  # noqa: E501


        :return: The sell_price of this Item.  # noqa: E501
        :rtype: float
        """
        return self._sell_price

    @sell_price.setter
    def sell_price(self, sell_price):
        """Sets the sell_price of this Item.


        :param sell_price: The sell_price of this Item.  # noqa: E501
        :type: float
        """

        self._sell_price = sell_price

    @property
    def pricing_per(self):
        """Gets the pricing_per of this Item.  # noqa: E501


        :return: The pricing_per of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pricing_per

    @pricing_per.setter
    def pricing_per(self, pricing_per):
        """Sets the pricing_per of this Item.


        :param pricing_per: The pricing_per of this Item.  # noqa: E501
        :type: str
        """

        self._pricing_per = pricing_per

    @property
    def lot_control_flag(self):
        """Gets the lot_control_flag of this Item.  # noqa: E501


        :return: The lot_control_flag of this Item.  # noqa: E501
        :rtype: str
        """
        return self._lot_control_flag

    @lot_control_flag.setter
    def lot_control_flag(self, lot_control_flag):
        """Sets the lot_control_flag of this Item.


        :param lot_control_flag: The lot_control_flag of this Item.  # noqa: E501
        :type: str
        """

        self._lot_control_flag = lot_control_flag

    @property
    def max_cycle(self):
        """Gets the max_cycle of this Item.  # noqa: E501


        :return: The max_cycle of this Item.  # noqa: E501
        :rtype: int
        """
        return self._max_cycle

    @max_cycle.setter
    def max_cycle(self, max_cycle):
        """Sets the max_cycle of this Item.


        :param max_cycle: The max_cycle of this Item.  # noqa: E501
        :type: int
        """
        if max_cycle is None:
            raise ValueError("Invalid value for `max_cycle`, must not be `None`")  # noqa: E501

        self._max_cycle = max_cycle

    @property
    def max_interim(self):
        """Gets the max_interim of this Item.  # noqa: E501


        :return: The max_interim of this Item.  # noqa: E501
        :rtype: int
        """
        return self._max_interim

    @max_interim.setter
    def max_interim(self, max_interim):
        """Sets the max_interim of this Item.


        :param max_interim: The max_interim of this Item.  # noqa: E501
        :type: int
        """
        if max_interim is None:
            raise ValueError("Invalid value for `max_interim`, must not be `None`")  # noqa: E501

        self._max_interim = max_interim

    @property
    def numeric_sort_order(self):
        """Gets the numeric_sort_order of this Item.  # noqa: E501


        :return: The numeric_sort_order of this Item.  # noqa: E501
        :rtype: int
        """
        return self._numeric_sort_order

    @numeric_sort_order.setter
    def numeric_sort_order(self, numeric_sort_order):
        """Sets the numeric_sort_order of this Item.


        :param numeric_sort_order: The numeric_sort_order of this Item.  # noqa: E501
        :type: int
        """

        self._numeric_sort_order = numeric_sort_order

    @property
    def outside_vendor_id(self):
        """Gets the outside_vendor_id of this Item.  # noqa: E501


        :return: The outside_vendor_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._outside_vendor_id

    @outside_vendor_id.setter
    def outside_vendor_id(self, outside_vendor_id):
        """Sets the outside_vendor_id of this Item.


        :param outside_vendor_id: The outside_vendor_id of this Item.  # noqa: E501
        :type: int
        """

        self._outside_vendor_id = outside_vendor_id

    @property
    def pick_code(self):
        """Gets the pick_code of this Item.  # noqa: E501


        :return: The pick_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pick_code

    @pick_code.setter
    def pick_code(self, pick_code):
        """Sets the pick_code of this Item.


        :param pick_code: The pick_code of this Item.  # noqa: E501
        :type: str
        """

        self._pick_code = pick_code

    @property
    def pod_order_suffix(self):
        """Gets the pod_order_suffix of this Item.  # noqa: E501


        :return: The pod_order_suffix of this Item.  # noqa: E501
        :rtype: int
        """
        return self._pod_order_suffix

    @pod_order_suffix.setter
    def pod_order_suffix(self, pod_order_suffix):
        """Sets the pod_order_suffix of this Item.


        :param pod_order_suffix: The pod_order_suffix of this Item.  # noqa: E501
        :type: int
        """

        self._pod_order_suffix = pod_order_suffix

    @property
    def pod_rev_date(self):
        """Gets the pod_rev_date of this Item.  # noqa: E501


        :return: The pod_rev_date of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pod_rev_date

    @pod_rev_date.setter
    def pod_rev_date(self, pod_rev_date):
        """Sets the pod_rev_date of this Item.


        :param pod_rev_date: The pod_rev_date of this Item.  # noqa: E501
        :type: str
        """

        self._pod_rev_date = pod_rev_date

    @property
    def status(self):
        """Gets the status of this Item.  # noqa: E501


        :return: The status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Item.


        :param status: The status of this Item.  # noqa: E501
        :type: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def seasonal_item(self):
        """Gets the seasonal_item of this Item.  # noqa: E501


        :return: The seasonal_item of this Item.  # noqa: E501
        :rtype: str
        """
        return self._seasonal_item

    @seasonal_item.setter
    def seasonal_item(self, seasonal_item):
        """Sets the seasonal_item of this Item.


        :param seasonal_item: The seasonal_item of this Item.  # noqa: E501
        :type: str
        """
        if seasonal_item is None:
            raise ValueError("Invalid value for `seasonal_item`, must not be `None`")  # noqa: E501

        self._seasonal_item = seasonal_item

    @property
    def requires_production_lot(self):
        """Gets the requires_production_lot of this Item.  # noqa: E501


        :return: The requires_production_lot of this Item.  # noqa: E501
        :rtype: str
        """
        return self._requires_production_lot

    @requires_production_lot.setter
    def requires_production_lot(self, requires_production_lot):
        """Sets the requires_production_lot of this Item.


        :param requires_production_lot: The requires_production_lot of this Item.  # noqa: E501
        :type: str
        """

        self._requires_production_lot = requires_production_lot

    @property
    def sector(self):
        """Gets the sector of this Item.  # noqa: E501


        :return: The sector of this Item.  # noqa: E501
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """Sets the sector of this Item.


        :param sector: The sector of this Item.  # noqa: E501
        :type: str
        """

        self._sector = sector

    @property
    def secure(self):
        """Gets the secure of this Item.  # noqa: E501


        :return: The secure of this Item.  # noqa: E501
        :rtype: str
        """
        return self._secure

    @secure.setter
    def secure(self, secure):
        """Sets the secure of this Item.


        :param secure: The secure of this Item.  # noqa: E501
        :type: str
        """
        if secure is None:
            raise ValueError("Invalid value for `secure`, must not be `None`")  # noqa: E501

        self._secure = secure

    @property
    def serial_code(self):
        """Gets the serial_code of this Item.  # noqa: E501


        :return: The serial_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._serial_code

    @serial_code.setter
    def serial_code(self, serial_code):
        """Sets the serial_code of this Item.


        :param serial_code: The serial_code of this Item.  # noqa: E501
        :type: str
        """

        self._serial_code = serial_code

    @property
    def unit_code(self):
        """Gets the unit_code of this Item.  # noqa: E501


        :return: The unit_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._unit_code

    @unit_code.setter
    def unit_code(self, unit_code):
        """Sets the unit_code of this Item.


        :param unit_code: The unit_code of this Item.  # noqa: E501
        :type: str
        """
        if unit_code is None:
            raise ValueError("Invalid value for `unit_code`, must not be `None`")  # noqa: E501

        self._unit_code = unit_code

    @property
    def units_per_wrap(self):
        """Gets the units_per_wrap of this Item.  # noqa: E501


        :return: The units_per_wrap of this Item.  # noqa: E501
        :rtype: int
        """
        return self._units_per_wrap

    @units_per_wrap.setter
    def units_per_wrap(self, units_per_wrap):
        """Sets the units_per_wrap of this Item.


        :param units_per_wrap: The units_per_wrap of this Item.  # noqa: E501
        :type: int
        """

        self._units_per_wrap = units_per_wrap

    @property
    def weight_per_wrap(self):
        """Gets the weight_per_wrap of this Item.  # noqa: E501


        :return: The weight_per_wrap of this Item.  # noqa: E501
        :rtype: float
        """
        return self._weight_per_wrap

    @weight_per_wrap.setter
    def weight_per_wrap(self, weight_per_wrap):
        """Sets the weight_per_wrap of this Item.


        :param weight_per_wrap: The weight_per_wrap of this Item.  # noqa: E501
        :type: float
        """

        self._weight_per_wrap = weight_per_wrap

    @property
    def quantity_per_inner_pack(self):
        """Gets the quantity_per_inner_pack of this Item.  # noqa: E501


        :return: The quantity_per_inner_pack of this Item.  # noqa: E501
        :rtype: int
        """
        return self._quantity_per_inner_pack

    @quantity_per_inner_pack.setter
    def quantity_per_inner_pack(self, quantity_per_inner_pack):
        """Sets the quantity_per_inner_pack of this Item.


        :param quantity_per_inner_pack: The quantity_per_inner_pack of this Item.  # noqa: E501
        :type: int
        """

        self._quantity_per_inner_pack = quantity_per_inner_pack

    @property
    def quantity_per_case(self):
        """Gets the quantity_per_case of this Item.  # noqa: E501


        :return: The quantity_per_case of this Item.  # noqa: E501
        :rtype: int
        """
        return self._quantity_per_case

    @quantity_per_case.setter
    def quantity_per_case(self, quantity_per_case):
        """Sets the quantity_per_case of this Item.


        :param quantity_per_case: The quantity_per_case of this Item.  # noqa: E501
        :type: int
        """

        self._quantity_per_case = quantity_per_case

    @property
    def quantity_per_pallet(self):
        """Gets the quantity_per_pallet of this Item.  # noqa: E501


        :return: The quantity_per_pallet of this Item.  # noqa: E501
        :rtype: int
        """
        return self._quantity_per_pallet

    @quantity_per_pallet.setter
    def quantity_per_pallet(self, quantity_per_pallet):
        """Sets the quantity_per_pallet of this Item.


        :param quantity_per_pallet: The quantity_per_pallet of this Item.  # noqa: E501
        :type: int
        """

        self._quantity_per_pallet = quantity_per_pallet

    @property
    def inner_pack_barcode(self):
        """Gets the inner_pack_barcode of this Item.  # noqa: E501


        :return: The inner_pack_barcode of this Item.  # noqa: E501
        :rtype: str
        """
        return self._inner_pack_barcode

    @inner_pack_barcode.setter
    def inner_pack_barcode(self, inner_pack_barcode):
        """Sets the inner_pack_barcode of this Item.


        :param inner_pack_barcode: The inner_pack_barcode of this Item.  # noqa: E501
        :type: str
        """

        self._inner_pack_barcode = inner_pack_barcode

    @property
    def case_barcode(self):
        """Gets the case_barcode of this Item.  # noqa: E501


        :return: The case_barcode of this Item.  # noqa: E501
        :rtype: str
        """
        return self._case_barcode

    @case_barcode.setter
    def case_barcode(self, case_barcode):
        """Sets the case_barcode of this Item.


        :param case_barcode: The case_barcode of this Item.  # noqa: E501
        :type: str
        """

        self._case_barcode = case_barcode

    @property
    def pallet_barcode(self):
        """Gets the pallet_barcode of this Item.  # noqa: E501


        :return: The pallet_barcode of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pallet_barcode

    @pallet_barcode.setter
    def pallet_barcode(self, pallet_barcode):
        """Sets the pallet_barcode of this Item.


        :param pallet_barcode: The pallet_barcode of this Item.  # noqa: E501
        :type: str
        """

        self._pallet_barcode = pallet_barcode

    @property
    def void_date(self):
        """Gets the void_date of this Item.  # noqa: E501


        :return: The void_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._void_date

    @void_date.setter
    def void_date(self, void_date):
        """Sets the void_date of this Item.


        :param void_date: The void_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._void_date = void_date

    @property
    def wrap_code(self):
        """Gets the wrap_code of this Item.  # noqa: E501


        :return: The wrap_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._wrap_code

    @wrap_code.setter
    def wrap_code(self, wrap_code):
        """Sets the wrap_code of this Item.


        :param wrap_code: The wrap_code of this Item.  # noqa: E501
        :type: str
        """

        self._wrap_code = wrap_code

    @property
    def extrinsic_text1(self):
        """Gets the extrinsic_text1 of this Item.  # noqa: E501


        :return: The extrinsic_text1 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._extrinsic_text1

    @extrinsic_text1.setter
    def extrinsic_text1(self, extrinsic_text1):
        """Sets the extrinsic_text1 of this Item.


        :param extrinsic_text1: The extrinsic_text1 of this Item.  # noqa: E501
        :type: str
        """

        self._extrinsic_text1 = extrinsic_text1

    @property
    def extrinsic_text2(self):
        """Gets the extrinsic_text2 of this Item.  # noqa: E501


        :return: The extrinsic_text2 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._extrinsic_text2

    @extrinsic_text2.setter
    def extrinsic_text2(self, extrinsic_text2):
        """Sets the extrinsic_text2 of this Item.


        :param extrinsic_text2: The extrinsic_text2 of this Item.  # noqa: E501
        :type: str
        """

        self._extrinsic_text2 = extrinsic_text2

    @property
    def extrinsic_text3(self):
        """Gets the extrinsic_text3 of this Item.  # noqa: E501


        :return: The extrinsic_text3 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._extrinsic_text3

    @extrinsic_text3.setter
    def extrinsic_text3(self, extrinsic_text3):
        """Sets the extrinsic_text3 of this Item.


        :param extrinsic_text3: The extrinsic_text3 of this Item.  # noqa: E501
        :type: str
        """

        self._extrinsic_text3 = extrinsic_text3

    @property
    def extrinsic_number1(self):
        """Gets the extrinsic_number1 of this Item.  # noqa: E501


        :return: The extrinsic_number1 of this Item.  # noqa: E501
        :rtype: int
        """
        return self._extrinsic_number1

    @extrinsic_number1.setter
    def extrinsic_number1(self, extrinsic_number1):
        """Sets the extrinsic_number1 of this Item.


        :param extrinsic_number1: The extrinsic_number1 of this Item.  # noqa: E501
        :type: int
        """

        self._extrinsic_number1 = extrinsic_number1

    @property
    def extrinsic_number2(self):
        """Gets the extrinsic_number2 of this Item.  # noqa: E501


        :return: The extrinsic_number2 of this Item.  # noqa: E501
        :rtype: int
        """
        return self._extrinsic_number2

    @extrinsic_number2.setter
    def extrinsic_number2(self, extrinsic_number2):
        """Sets the extrinsic_number2 of this Item.


        :param extrinsic_number2: The extrinsic_number2 of this Item.  # noqa: E501
        :type: int
        """

        self._extrinsic_number2 = extrinsic_number2

    @property
    def extrinsic_decimal1(self):
        """Gets the extrinsic_decimal1 of this Item.  # noqa: E501


        :return: The extrinsic_decimal1 of this Item.  # noqa: E501
        :rtype: float
        """
        return self._extrinsic_decimal1

    @extrinsic_decimal1.setter
    def extrinsic_decimal1(self, extrinsic_decimal1):
        """Sets the extrinsic_decimal1 of this Item.


        :param extrinsic_decimal1: The extrinsic_decimal1 of this Item.  # noqa: E501
        :type: float
        """

        self._extrinsic_decimal1 = extrinsic_decimal1

    @property
    def extrinsic_decimal2(self):
        """Gets the extrinsic_decimal2 of this Item.  # noqa: E501


        :return: The extrinsic_decimal2 of this Item.  # noqa: E501
        :rtype: float
        """
        return self._extrinsic_decimal2

    @extrinsic_decimal2.setter
    def extrinsic_decimal2(self, extrinsic_decimal2):
        """Sets the extrinsic_decimal2 of this Item.


        :param extrinsic_decimal2: The extrinsic_decimal2 of this Item.  # noqa: E501
        :type: float
        """

        self._extrinsic_decimal2 = extrinsic_decimal2

    @property
    def casebreak_enabled(self):
        """Gets the casebreak_enabled of this Item.  # noqa: E501


        :return: The casebreak_enabled of this Item.  # noqa: E501
        :rtype: str
        """
        return self._casebreak_enabled

    @casebreak_enabled.setter
    def casebreak_enabled(self, casebreak_enabled):
        """Sets the casebreak_enabled of this Item.


        :param casebreak_enabled: The casebreak_enabled of this Item.  # noqa: E501
        :type: str
        """

        self._casebreak_enabled = casebreak_enabled

    @property
    def vendor_id(self):
        """Gets the vendor_id of this Item.  # noqa: E501


        :return: The vendor_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """Sets the vendor_id of this Item.


        :param vendor_id: The vendor_id of this Item.  # noqa: E501
        :type: int
        """

        self._vendor_id = vendor_id

    @property
    def vendor_price(self):
        """Gets the vendor_price of this Item.  # noqa: E501


        :return: The vendor_price of this Item.  # noqa: E501
        :rtype: float
        """
        return self._vendor_price

    @vendor_price.setter
    def vendor_price(self, vendor_price):
        """Sets the vendor_price of this Item.


        :param vendor_price: The vendor_price of this Item.  # noqa: E501
        :type: float
        """

        self._vendor_price = vendor_price

    @property
    def vendor_per(self):
        """Gets the vendor_per of this Item.  # noqa: E501


        :return: The vendor_per of this Item.  # noqa: E501
        :rtype: str
        """
        return self._vendor_per

    @vendor_per.setter
    def vendor_per(self, vendor_per):
        """Sets the vendor_per of this Item.


        :param vendor_per: The vendor_per of this Item.  # noqa: E501
        :type: str
        """

        self._vendor_per = vendor_per

    @property
    def modify_date(self):
        """Gets the modify_date of this Item.  # noqa: E501


        :return: The modify_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this Item.


        :param modify_date: The modify_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def primary_image(self):
        """Gets the primary_image of this Item.  # noqa: E501


        :return: The primary_image of this Item.  # noqa: E501
        :rtype: str
        """
        return self._primary_image

    @primary_image.setter
    def primary_image(self, primary_image):
        """Sets the primary_image of this Item.


        :param primary_image: The primary_image of this Item.  # noqa: E501
        :type: str
        """

        self._primary_image = primary_image

    @property
    def pick_image(self):
        """Gets the pick_image of this Item.  # noqa: E501


        :return: The pick_image of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pick_image

    @pick_image.setter
    def pick_image(self, pick_image):
        """Sets the pick_image of this Item.


        :param pick_image: The pick_image of this Item.  # noqa: E501
        :type: str
        """

        self._pick_image = pick_image

    @property
    def behavior_type(self):
        """Gets the behavior_type of this Item.  # noqa: E501


        :return: The behavior_type of this Item.  # noqa: E501
        :rtype: str
        """
        return self._behavior_type

    @behavior_type.setter
    def behavior_type(self, behavior_type):
        """Sets the behavior_type of this Item.


        :param behavior_type: The behavior_type of this Item.  # noqa: E501
        :type: str
        """

        self._behavior_type = behavior_type

    @property
    def assembly_instructions(self):
        """Gets the assembly_instructions of this Item.  # noqa: E501


        :return: The assembly_instructions of this Item.  # noqa: E501
        :rtype: str
        """
        return self._assembly_instructions

    @assembly_instructions.setter
    def assembly_instructions(self, assembly_instructions):
        """Sets the assembly_instructions of this Item.


        :param assembly_instructions: The assembly_instructions of this Item.  # noqa: E501
        :type: str
        """

        self._assembly_instructions = assembly_instructions

    @property
    def forward_lot_mixing_rule(self):
        """Gets the forward_lot_mixing_rule of this Item.  # noqa: E501


        :return: The forward_lot_mixing_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._forward_lot_mixing_rule

    @forward_lot_mixing_rule.setter
    def forward_lot_mixing_rule(self, forward_lot_mixing_rule):
        """Sets the forward_lot_mixing_rule of this Item.


        :param forward_lot_mixing_rule: The forward_lot_mixing_rule of this Item.  # noqa: E501
        :type: str
        """
        if forward_lot_mixing_rule is None:
            raise ValueError("Invalid value for `forward_lot_mixing_rule`, must not be `None`")  # noqa: E501

        self._forward_lot_mixing_rule = forward_lot_mixing_rule

    @property
    def storage_lot_mixing_rule(self):
        """Gets the storage_lot_mixing_rule of this Item.  # noqa: E501


        :return: The storage_lot_mixing_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._storage_lot_mixing_rule

    @storage_lot_mixing_rule.setter
    def storage_lot_mixing_rule(self, storage_lot_mixing_rule):
        """Sets the storage_lot_mixing_rule of this Item.


        :param storage_lot_mixing_rule: The storage_lot_mixing_rule of this Item.  # noqa: E501
        :type: str
        """
        if storage_lot_mixing_rule is None:
            raise ValueError("Invalid value for `storage_lot_mixing_rule`, must not be `None`")  # noqa: E501

        self._storage_lot_mixing_rule = storage_lot_mixing_rule

    @property
    def forward_item_mixing_rule(self):
        """Gets the forward_item_mixing_rule of this Item.  # noqa: E501


        :return: The forward_item_mixing_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._forward_item_mixing_rule

    @forward_item_mixing_rule.setter
    def forward_item_mixing_rule(self, forward_item_mixing_rule):
        """Sets the forward_item_mixing_rule of this Item.


        :param forward_item_mixing_rule: The forward_item_mixing_rule of this Item.  # noqa: E501
        :type: str
        """
        if forward_item_mixing_rule is None:
            raise ValueError("Invalid value for `forward_item_mixing_rule`, must not be `None`")  # noqa: E501

        self._forward_item_mixing_rule = forward_item_mixing_rule

    @property
    def storage_item_mixing_rule(self):
        """Gets the storage_item_mixing_rule of this Item.  # noqa: E501


        :return: The storage_item_mixing_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._storage_item_mixing_rule

    @storage_item_mixing_rule.setter
    def storage_item_mixing_rule(self, storage_item_mixing_rule):
        """Sets the storage_item_mixing_rule of this Item.


        :param storage_item_mixing_rule: The storage_item_mixing_rule of this Item.  # noqa: E501
        :type: str
        """
        if storage_item_mixing_rule is None:
            raise ValueError("Invalid value for `storage_item_mixing_rule`, must not be `None`")  # noqa: E501

        self._storage_item_mixing_rule = storage_item_mixing_rule

    @property
    def allocation_rule(self):
        """Gets the allocation_rule of this Item.  # noqa: E501


        :return: The allocation_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._allocation_rule

    @allocation_rule.setter
    def allocation_rule(self, allocation_rule):
        """Sets the allocation_rule of this Item.


        :param allocation_rule: The allocation_rule of this Item.  # noqa: E501
        :type: str
        """
        if allocation_rule is None:
            raise ValueError("Invalid value for `allocation_rule`, must not be `None`")  # noqa: E501

        self._allocation_rule = allocation_rule

    @property
    def allocation_sort(self):
        """Gets the allocation_sort of this Item.  # noqa: E501


        :return: The allocation_sort of this Item.  # noqa: E501
        :rtype: str
        """
        return self._allocation_sort

    @allocation_sort.setter
    def allocation_sort(self, allocation_sort):
        """Sets the allocation_sort of this Item.


        :param allocation_sort: The allocation_sort of this Item.  # noqa: E501
        :type: str
        """

        self._allocation_sort = allocation_sort

    @property
    def allocation_field(self):
        """Gets the allocation_field of this Item.  # noqa: E501


        :return: The allocation_field of this Item.  # noqa: E501
        :rtype: str
        """
        return self._allocation_field

    @allocation_field.setter
    def allocation_field(self, allocation_field):
        """Sets the allocation_field of this Item.


        :param allocation_field: The allocation_field of this Item.  # noqa: E501
        :type: str
        """

        self._allocation_field = allocation_field

    @property
    def barcode_field(self):
        """Gets the barcode_field of this Item.  # noqa: E501


        :return: The barcode_field of this Item.  # noqa: E501
        :rtype: str
        """
        return self._barcode_field

    @barcode_field.setter
    def barcode_field(self, barcode_field):
        """Sets the barcode_field of this Item.


        :param barcode_field: The barcode_field of this Item.  # noqa: E501
        :type: str
        """

        self._barcode_field = barcode_field

    @property
    def warehouse_display_field(self):
        """Gets the warehouse_display_field of this Item.  # noqa: E501


        :return: The warehouse_display_field of this Item.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_display_field

    @warehouse_display_field.setter
    def warehouse_display_field(self, warehouse_display_field):
        """Sets the warehouse_display_field of this Item.


        :param warehouse_display_field: The warehouse_display_field of this Item.  # noqa: E501
        :type: str
        """

        self._warehouse_display_field = warehouse_display_field

    @property
    def product_id_tag_scheme_id(self):
        """Gets the product_id_tag_scheme_id of this Item.  # noqa: E501


        :return: The product_id_tag_scheme_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._product_id_tag_scheme_id

    @product_id_tag_scheme_id.setter
    def product_id_tag_scheme_id(self, product_id_tag_scheme_id):
        """Sets the product_id_tag_scheme_id of this Item.


        :param product_id_tag_scheme_id: The product_id_tag_scheme_id of this Item.  # noqa: E501
        :type: int
        """

        self._product_id_tag_scheme_id = product_id_tag_scheme_id

    @property
    def item_serial_scheme_id(self):
        """Gets the item_serial_scheme_id of this Item.  # noqa: E501


        :return: The item_serial_scheme_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._item_serial_scheme_id

    @item_serial_scheme_id.setter
    def item_serial_scheme_id(self, item_serial_scheme_id):
        """Sets the item_serial_scheme_id of this Item.


        :param item_serial_scheme_id: The item_serial_scheme_id of this Item.  # noqa: E501
        :type: int
        """

        self._item_serial_scheme_id = item_serial_scheme_id

    @property
    def receiving_criteria_scheme_id(self):
        """Gets the receiving_criteria_scheme_id of this Item.  # noqa: E501


        :return: The receiving_criteria_scheme_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._receiving_criteria_scheme_id

    @receiving_criteria_scheme_id.setter
    def receiving_criteria_scheme_id(self, receiving_criteria_scheme_id):
        """Sets the receiving_criteria_scheme_id of this Item.


        :param receiving_criteria_scheme_id: The receiving_criteria_scheme_id of this Item.  # noqa: E501
        :type: int
        """
        if receiving_criteria_scheme_id is None:
            raise ValueError("Invalid value for `receiving_criteria_scheme_id`, must not be `None`")  # noqa: E501

        self._receiving_criteria_scheme_id = receiving_criteria_scheme_id

    @property
    def asn_rule(self):
        """Gets the asn_rule of this Item.  # noqa: E501


        :return: The asn_rule of this Item.  # noqa: E501
        :rtype: str
        """
        return self._asn_rule

    @asn_rule.setter
    def asn_rule(self, asn_rule):
        """Sets the asn_rule of this Item.


        :param asn_rule: The asn_rule of this Item.  # noqa: E501
        :type: str
        """

        self._asn_rule = asn_rule

    @property
    def quantity_type(self):
        """Gets the quantity_type of this Item.  # noqa: E501


        :return: The quantity_type of this Item.  # noqa: E501
        :rtype: str
        """
        return self._quantity_type

    @quantity_type.setter
    def quantity_type(self, quantity_type):
        """Sets the quantity_type of this Item.


        :param quantity_type: The quantity_type of this Item.  # noqa: E501
        :type: str
        """

        self._quantity_type = quantity_type

    @property
    def hazmat(self):
        """Gets the hazmat of this Item.  # noqa: E501


        :return: The hazmat of this Item.  # noqa: E501
        :rtype: str
        """
        return self._hazmat

    @hazmat.setter
    def hazmat(self, hazmat):
        """Sets the hazmat of this Item.


        :param hazmat: The hazmat of this Item.  # noqa: E501
        :type: str
        """
        if hazmat is None:
            raise ValueError("Invalid value for `hazmat`, must not be `None`")  # noqa: E501

        self._hazmat = hazmat

    @property
    def is_alcohol(self):
        """Gets the is_alcohol of this Item.  # noqa: E501


        :return: The is_alcohol of this Item.  # noqa: E501
        :rtype: bool
        """
        return self._is_alcohol

    @is_alcohol.setter
    def is_alcohol(self, is_alcohol):
        """Sets the is_alcohol of this Item.


        :param is_alcohol: The is_alcohol of this Item.  # noqa: E501
        :type: bool
        """

        self._is_alcohol = is_alcohol

    @property
    def alcohol_type(self):
        """Gets the alcohol_type of this Item.  # noqa: E501


        :return: The alcohol_type of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_type

    @alcohol_type.setter
    def alcohol_type(self, alcohol_type):
        """Sets the alcohol_type of this Item.


        :param alcohol_type: The alcohol_type of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_type = alcohol_type

    @property
    def alcohol_content(self):
        """Gets the alcohol_content of this Item.  # noqa: E501


        :return: The alcohol_content of this Item.  # noqa: E501
        :rtype: float
        """
        return self._alcohol_content

    @alcohol_content.setter
    def alcohol_content(self, alcohol_content):
        """Sets the alcohol_content of this Item.


        :param alcohol_content: The alcohol_content of this Item.  # noqa: E501
        :type: float
        """

        self._alcohol_content = alcohol_content

    @property
    def alcohol_container(self):
        """Gets the alcohol_container of this Item.  # noqa: E501


        :return: The alcohol_container of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_container

    @alcohol_container.setter
    def alcohol_container(self, alcohol_container):
        """Sets the alcohol_container of this Item.


        :param alcohol_container: The alcohol_container of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_container = alcohol_container

    @property
    def alcohol_vintage_year(self):
        """Gets the alcohol_vintage_year of this Item.  # noqa: E501


        :return: The alcohol_vintage_year of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_vintage_year

    @alcohol_vintage_year.setter
    def alcohol_vintage_year(self, alcohol_vintage_year):
        """Sets the alcohol_vintage_year of this Item.


        :param alcohol_vintage_year: The alcohol_vintage_year of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_vintage_year = alcohol_vintage_year

    @property
    def alcohol_country(self):
        """Gets the alcohol_country of this Item.  # noqa: E501


        :return: The alcohol_country of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_country

    @alcohol_country.setter
    def alcohol_country(self, alcohol_country):
        """Sets the alcohol_country of this Item.


        :param alcohol_country: The alcohol_country of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_country = alcohol_country

    @property
    def alcohol_state(self):
        """Gets the alcohol_state of this Item.  # noqa: E501


        :return: The alcohol_state of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_state

    @alcohol_state.setter
    def alcohol_state(self, alcohol_state):
        """Sets the alcohol_state of this Item.


        :param alcohol_state: The alcohol_state of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_state = alcohol_state

    @property
    def alcohol_region(self):
        """Gets the alcohol_region of this Item.  # noqa: E501


        :return: The alcohol_region of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_region

    @alcohol_region.setter
    def alcohol_region(self, alcohol_region):
        """Sets the alcohol_region of this Item.


        :param alcohol_region: The alcohol_region of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_region = alcohol_region

    @property
    def alcohol_brand(self):
        """Gets the alcohol_brand of this Item.  # noqa: E501


        :return: The alcohol_brand of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_brand

    @alcohol_brand.setter
    def alcohol_brand(self, alcohol_brand):
        """Sets the alcohol_brand of this Item.


        :param alcohol_brand: The alcohol_brand of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_brand = alcohol_brand

    @property
    def alcohol_upc_code(self):
        """Gets the alcohol_upc_code of this Item.  # noqa: E501


        :return: The alcohol_upc_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_upc_code

    @alcohol_upc_code.setter
    def alcohol_upc_code(self, alcohol_upc_code):
        """Sets the alcohol_upc_code of this Item.


        :param alcohol_upc_code: The alcohol_upc_code of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_upc_code = alcohol_upc_code

    @property
    def alcohol_nambca_code(self):
        """Gets the alcohol_nambca_code of this Item.  # noqa: E501


        :return: The alcohol_nambca_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_nambca_code

    @alcohol_nambca_code.setter
    def alcohol_nambca_code(self, alcohol_nambca_code):
        """Sets the alcohol_nambca_code of this Item.


        :param alcohol_nambca_code: The alcohol_nambca_code of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_nambca_code = alcohol_nambca_code

    @property
    def alcohol_unimerc_code(self):
        """Gets the alcohol_unimerc_code of this Item.  # noqa: E501


        :return: The alcohol_unimerc_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_unimerc_code

    @alcohol_unimerc_code.setter
    def alcohol_unimerc_code(self, alcohol_unimerc_code):
        """Sets the alcohol_unimerc_code of this Item.


        :param alcohol_unimerc_code: The alcohol_unimerc_code of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_unimerc_code = alcohol_unimerc_code

    @property
    def alcohol_scc_code(self):
        """Gets the alcohol_scc_code of this Item.  # noqa: E501


        :return: The alcohol_scc_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_scc_code

    @alcohol_scc_code.setter
    def alcohol_scc_code(self, alcohol_scc_code):
        """Sets the alcohol_scc_code of this Item.


        :param alcohol_scc_code: The alcohol_scc_code of this Item.  # noqa: E501
        :type: str
        """

        self._alcohol_scc_code = alcohol_scc_code

    @property
    def length(self):
        """Gets the length of this Item.  # noqa: E501


        :return: The length of this Item.  # noqa: E501
        :rtype: float
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this Item.


        :param length: The length of this Item.  # noqa: E501
        :type: float
        """

        self._length = length

    @property
    def width(self):
        """Gets the width of this Item.  # noqa: E501


        :return: The width of this Item.  # noqa: E501
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Item.


        :param width: The width of this Item.  # noqa: E501
        :type: float
        """

        self._width = width

    @property
    def height(self):
        """Gets the height of this Item.  # noqa: E501


        :return: The height of this Item.  # noqa: E501
        :rtype: float
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this Item.


        :param height: The height of this Item.  # noqa: E501
        :type: float
        """

        self._height = height

    @property
    def top_up(self):
        """Gets the top_up of this Item.  # noqa: E501


        :return: The top_up of this Item.  # noqa: E501
        :rtype: bool
        """
        return self._top_up

    @top_up.setter
    def top_up(self, top_up):
        """Sets the top_up of this Item.


        :param top_up: The top_up of this Item.  # noqa: E501
        :type: bool
        """

        self._top_up = top_up

    @property
    def ship_solo(self):
        """Gets the ship_solo of this Item.  # noqa: E501


        :return: The ship_solo of this Item.  # noqa: E501
        :rtype: bool
        """
        return self._ship_solo

    @ship_solo.setter
    def ship_solo(self, ship_solo):
        """Sets the ship_solo of this Item.


        :param ship_solo: The ship_solo of this Item.  # noqa: E501
        :type: bool
        """

        self._ship_solo = ship_solo

    @property
    def inventory_update_timestamp(self):
        """Gets the inventory_update_timestamp of this Item.  # noqa: E501


        :return: The inventory_update_timestamp of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._inventory_update_timestamp

    @inventory_update_timestamp.setter
    def inventory_update_timestamp(self, inventory_update_timestamp):
        """Sets the inventory_update_timestamp of this Item.


        :param inventory_update_timestamp: The inventory_update_timestamp of this Item.  # noqa: E501
        :type: datetime
        """

        self._inventory_update_timestamp = inventory_update_timestamp

    @property
    def available_quantity(self):
        """Gets the available_quantity of this Item.  # noqa: E501


        :return: The available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity

    @available_quantity.setter
    def available_quantity(self, available_quantity):
        """Sets the available_quantity of this Item.


        :param available_quantity: The available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._available_quantity = available_quantity

    @property
    def damaged_quantity(self):
        """Gets the damaged_quantity of this Item.  # noqa: E501


        :return: The damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity

    @damaged_quantity.setter
    def damaged_quantity(self, damaged_quantity):
        """Sets the damaged_quantity of this Item.


        :param damaged_quantity: The damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._damaged_quantity = damaged_quantity

    @property
    def in_fulfillment_process_quantity(self):
        """Gets the in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity

    @in_fulfillment_process_quantity.setter
    def in_fulfillment_process_quantity(self, in_fulfillment_process_quantity):
        """Sets the in_fulfillment_process_quantity of this Item.


        :param in_fulfillment_process_quantity: The in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity = in_fulfillment_process_quantity

    @property
    def on_hand_quantity(self):
        """Gets the on_hand_quantity of this Item.  # noqa: E501


        :return: The on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity

    @on_hand_quantity.setter
    def on_hand_quantity(self, on_hand_quantity):
        """Sets the on_hand_quantity of this Item.


        :param on_hand_quantity: The on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity = on_hand_quantity

    @property
    def open_order_quantity(self):
        """Gets the open_order_quantity of this Item.  # noqa: E501


        :return: The open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity

    @open_order_quantity.setter
    def open_order_quantity(self, open_order_quantity):
        """Sets the open_order_quantity of this Item.


        :param open_order_quantity: The open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._open_order_quantity = open_order_quantity

    @property
    def open_po_quantity(self):
        """Gets the open_po_quantity of this Item.  # noqa: E501


        :return: The open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity

    @open_po_quantity.setter
    def open_po_quantity(self, open_po_quantity):
        """Sets the open_po_quantity of this Item.


        :param open_po_quantity: The open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._open_po_quantity = open_po_quantity

    @property
    def orderable_quantity(self):
        """Gets the orderable_quantity of this Item.  # noqa: E501


        :return: The orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity

    @orderable_quantity.setter
    def orderable_quantity(self, orderable_quantity):
        """Sets the orderable_quantity of this Item.


        :param orderable_quantity: The orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._orderable_quantity = orderable_quantity

    @property
    def unallocatable_quantity(self):
        """Gets the unallocatable_quantity of this Item.  # noqa: E501


        :return: The unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity

    @unallocatable_quantity.setter
    def unallocatable_quantity(self, unallocatable_quantity):
        """Sets the unallocatable_quantity of this Item.


        :param unallocatable_quantity: The unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity = unallocatable_quantity

    @property
    def unavailable_quantity(self):
        """Gets the unavailable_quantity of this Item.  # noqa: E501


        :return: The unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity

    @unavailable_quantity.setter
    def unavailable_quantity(self, unavailable_quantity):
        """Sets the unavailable_quantity of this Item.


        :param unavailable_quantity: The unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity = unavailable_quantity

    @property
    def total_demand(self):
        """Gets the total_demand of this Item.  # noqa: E501


        :return: The total_demand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._total_demand

    @total_demand.setter
    def total_demand(self, total_demand):
        """Sets the total_demand of this Item.


        :param total_demand: The total_demand of this Item.  # noqa: E501
        :type: int
        """

        self._total_demand = total_demand

    @property
    def available_quantity_inner_packs(self):
        """Gets the available_quantity_inner_packs of this Item.  # noqa: E501


        :return: The available_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_inner_packs

    @available_quantity_inner_packs.setter
    def available_quantity_inner_packs(self, available_quantity_inner_packs):
        """Sets the available_quantity_inner_packs of this Item.


        :param available_quantity_inner_packs: The available_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._available_quantity_inner_packs = available_quantity_inner_packs

    @property
    def damaged_quantity_inner_packs(self):
        """Gets the damaged_quantity_inner_packs of this Item.  # noqa: E501


        :return: The damaged_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_inner_packs

    @damaged_quantity_inner_packs.setter
    def damaged_quantity_inner_packs(self, damaged_quantity_inner_packs):
        """Sets the damaged_quantity_inner_packs of this Item.


        :param damaged_quantity_inner_packs: The damaged_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_inner_packs = damaged_quantity_inner_packs

    @property
    def in_fulfillment_process_quantity_inner_packs(self):
        """Gets the in_fulfillment_process_quantity_inner_packs of this Item.  # noqa: E501


        :return: The in_fulfillment_process_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_inner_packs

    @in_fulfillment_process_quantity_inner_packs.setter
    def in_fulfillment_process_quantity_inner_packs(self, in_fulfillment_process_quantity_inner_packs):
        """Sets the in_fulfillment_process_quantity_inner_packs of this Item.


        :param in_fulfillment_process_quantity_inner_packs: The in_fulfillment_process_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_inner_packs = in_fulfillment_process_quantity_inner_packs

    @property
    def on_hand_quantity_inner_packs(self):
        """Gets the on_hand_quantity_inner_packs of this Item.  # noqa: E501


        :return: The on_hand_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_inner_packs

    @on_hand_quantity_inner_packs.setter
    def on_hand_quantity_inner_packs(self, on_hand_quantity_inner_packs):
        """Sets the on_hand_quantity_inner_packs of this Item.


        :param on_hand_quantity_inner_packs: The on_hand_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_inner_packs = on_hand_quantity_inner_packs

    @property
    def open_order_quantity_inner_packs(self):
        """Gets the open_order_quantity_inner_packs of this Item.  # noqa: E501


        :return: The open_order_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_inner_packs

    @open_order_quantity_inner_packs.setter
    def open_order_quantity_inner_packs(self, open_order_quantity_inner_packs):
        """Sets the open_order_quantity_inner_packs of this Item.


        :param open_order_quantity_inner_packs: The open_order_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_inner_packs = open_order_quantity_inner_packs

    @property
    def open_po_quantity_inner_packs(self):
        """Gets the open_po_quantity_inner_packs of this Item.  # noqa: E501


        :return: The open_po_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_inner_packs

    @open_po_quantity_inner_packs.setter
    def open_po_quantity_inner_packs(self, open_po_quantity_inner_packs):
        """Sets the open_po_quantity_inner_packs of this Item.


        :param open_po_quantity_inner_packs: The open_po_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_inner_packs = open_po_quantity_inner_packs

    @property
    def orderable_quantity_inner_packs(self):
        """Gets the orderable_quantity_inner_packs of this Item.  # noqa: E501


        :return: The orderable_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_inner_packs

    @orderable_quantity_inner_packs.setter
    def orderable_quantity_inner_packs(self, orderable_quantity_inner_packs):
        """Sets the orderable_quantity_inner_packs of this Item.


        :param orderable_quantity_inner_packs: The orderable_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_inner_packs = orderable_quantity_inner_packs

    @property
    def unallocatable_quantity_inner_packs(self):
        """Gets the unallocatable_quantity_inner_packs of this Item.  # noqa: E501


        :return: The unallocatable_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_inner_packs

    @unallocatable_quantity_inner_packs.setter
    def unallocatable_quantity_inner_packs(self, unallocatable_quantity_inner_packs):
        """Sets the unallocatable_quantity_inner_packs of this Item.


        :param unallocatable_quantity_inner_packs: The unallocatable_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_inner_packs = unallocatable_quantity_inner_packs

    @property
    def unavailable_quantity_inner_packs(self):
        """Gets the unavailable_quantity_inner_packs of this Item.  # noqa: E501


        :return: The unavailable_quantity_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_inner_packs

    @unavailable_quantity_inner_packs.setter
    def unavailable_quantity_inner_packs(self, unavailable_quantity_inner_packs):
        """Sets the unavailable_quantity_inner_packs of this Item.


        :param unavailable_quantity_inner_packs: The unavailable_quantity_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_inner_packs = unavailable_quantity_inner_packs

    @property
    def available_quantity_cases(self):
        """Gets the available_quantity_cases of this Item.  # noqa: E501


        :return: The available_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_cases

    @available_quantity_cases.setter
    def available_quantity_cases(self, available_quantity_cases):
        """Sets the available_quantity_cases of this Item.


        :param available_quantity_cases: The available_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._available_quantity_cases = available_quantity_cases

    @property
    def damaged_quantity_cases(self):
        """Gets the damaged_quantity_cases of this Item.  # noqa: E501


        :return: The damaged_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_cases

    @damaged_quantity_cases.setter
    def damaged_quantity_cases(self, damaged_quantity_cases):
        """Sets the damaged_quantity_cases of this Item.


        :param damaged_quantity_cases: The damaged_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_cases = damaged_quantity_cases

    @property
    def in_fulfillment_process_quantity_cases(self):
        """Gets the in_fulfillment_process_quantity_cases of this Item.  # noqa: E501


        :return: The in_fulfillment_process_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_cases

    @in_fulfillment_process_quantity_cases.setter
    def in_fulfillment_process_quantity_cases(self, in_fulfillment_process_quantity_cases):
        """Sets the in_fulfillment_process_quantity_cases of this Item.


        :param in_fulfillment_process_quantity_cases: The in_fulfillment_process_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_cases = in_fulfillment_process_quantity_cases

    @property
    def on_hand_quantity_cases(self):
        """Gets the on_hand_quantity_cases of this Item.  # noqa: E501


        :return: The on_hand_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_cases

    @on_hand_quantity_cases.setter
    def on_hand_quantity_cases(self, on_hand_quantity_cases):
        """Sets the on_hand_quantity_cases of this Item.


        :param on_hand_quantity_cases: The on_hand_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_cases = on_hand_quantity_cases

    @property
    def open_order_quantity_cases(self):
        """Gets the open_order_quantity_cases of this Item.  # noqa: E501


        :return: The open_order_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_cases

    @open_order_quantity_cases.setter
    def open_order_quantity_cases(self, open_order_quantity_cases):
        """Sets the open_order_quantity_cases of this Item.


        :param open_order_quantity_cases: The open_order_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_cases = open_order_quantity_cases

    @property
    def open_po_quantity_cases(self):
        """Gets the open_po_quantity_cases of this Item.  # noqa: E501


        :return: The open_po_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_cases

    @open_po_quantity_cases.setter
    def open_po_quantity_cases(self, open_po_quantity_cases):
        """Sets the open_po_quantity_cases of this Item.


        :param open_po_quantity_cases: The open_po_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_cases = open_po_quantity_cases

    @property
    def orderable_quantity_cases(self):
        """Gets the orderable_quantity_cases of this Item.  # noqa: E501


        :return: The orderable_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_cases

    @orderable_quantity_cases.setter
    def orderable_quantity_cases(self, orderable_quantity_cases):
        """Sets the orderable_quantity_cases of this Item.


        :param orderable_quantity_cases: The orderable_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_cases = orderable_quantity_cases

    @property
    def unallocatable_quantity_cases(self):
        """Gets the unallocatable_quantity_cases of this Item.  # noqa: E501


        :return: The unallocatable_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_cases

    @unallocatable_quantity_cases.setter
    def unallocatable_quantity_cases(self, unallocatable_quantity_cases):
        """Sets the unallocatable_quantity_cases of this Item.


        :param unallocatable_quantity_cases: The unallocatable_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_cases = unallocatable_quantity_cases

    @property
    def unavailable_quantity_cases(self):
        """Gets the unavailable_quantity_cases of this Item.  # noqa: E501


        :return: The unavailable_quantity_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_cases

    @unavailable_quantity_cases.setter
    def unavailable_quantity_cases(self, unavailable_quantity_cases):
        """Sets the unavailable_quantity_cases of this Item.


        :param unavailable_quantity_cases: The unavailable_quantity_cases of this Item.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_cases = unavailable_quantity_cases

    @property
    def available_quantity_pallets(self):
        """Gets the available_quantity_pallets of this Item.  # noqa: E501


        :return: The available_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_pallets

    @available_quantity_pallets.setter
    def available_quantity_pallets(self, available_quantity_pallets):
        """Sets the available_quantity_pallets of this Item.


        :param available_quantity_pallets: The available_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._available_quantity_pallets = available_quantity_pallets

    @property
    def damaged_quantity_pallets(self):
        """Gets the damaged_quantity_pallets of this Item.  # noqa: E501


        :return: The damaged_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_pallets

    @damaged_quantity_pallets.setter
    def damaged_quantity_pallets(self, damaged_quantity_pallets):
        """Sets the damaged_quantity_pallets of this Item.


        :param damaged_quantity_pallets: The damaged_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_pallets = damaged_quantity_pallets

    @property
    def in_fulfillment_process_quantity_pallets(self):
        """Gets the in_fulfillment_process_quantity_pallets of this Item.  # noqa: E501


        :return: The in_fulfillment_process_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_pallets

    @in_fulfillment_process_quantity_pallets.setter
    def in_fulfillment_process_quantity_pallets(self, in_fulfillment_process_quantity_pallets):
        """Sets the in_fulfillment_process_quantity_pallets of this Item.


        :param in_fulfillment_process_quantity_pallets: The in_fulfillment_process_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_pallets = in_fulfillment_process_quantity_pallets

    @property
    def on_hand_quantity_pallets(self):
        """Gets the on_hand_quantity_pallets of this Item.  # noqa: E501


        :return: The on_hand_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_pallets

    @on_hand_quantity_pallets.setter
    def on_hand_quantity_pallets(self, on_hand_quantity_pallets):
        """Sets the on_hand_quantity_pallets of this Item.


        :param on_hand_quantity_pallets: The on_hand_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_pallets = on_hand_quantity_pallets

    @property
    def open_order_quantity_pallets(self):
        """Gets the open_order_quantity_pallets of this Item.  # noqa: E501


        :return: The open_order_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_pallets

    @open_order_quantity_pallets.setter
    def open_order_quantity_pallets(self, open_order_quantity_pallets):
        """Sets the open_order_quantity_pallets of this Item.


        :param open_order_quantity_pallets: The open_order_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_pallets = open_order_quantity_pallets

    @property
    def open_po_quantity_pallets(self):
        """Gets the open_po_quantity_pallets of this Item.  # noqa: E501


        :return: The open_po_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_pallets

    @open_po_quantity_pallets.setter
    def open_po_quantity_pallets(self, open_po_quantity_pallets):
        """Sets the open_po_quantity_pallets of this Item.


        :param open_po_quantity_pallets: The open_po_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_pallets = open_po_quantity_pallets

    @property
    def orderable_quantity_pallets(self):
        """Gets the orderable_quantity_pallets of this Item.  # noqa: E501


        :return: The orderable_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_pallets

    @orderable_quantity_pallets.setter
    def orderable_quantity_pallets(self, orderable_quantity_pallets):
        """Sets the orderable_quantity_pallets of this Item.


        :param orderable_quantity_pallets: The orderable_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_pallets = orderable_quantity_pallets

    @property
    def unallocatable_quantity_pallets(self):
        """Gets the unallocatable_quantity_pallets of this Item.  # noqa: E501


        :return: The unallocatable_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_pallets

    @unallocatable_quantity_pallets.setter
    def unallocatable_quantity_pallets(self, unallocatable_quantity_pallets):
        """Sets the unallocatable_quantity_pallets of this Item.


        :param unallocatable_quantity_pallets: The unallocatable_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_pallets = unallocatable_quantity_pallets

    @property
    def unavailable_quantity_pallets(self):
        """Gets the unavailable_quantity_pallets of this Item.  # noqa: E501


        :return: The unavailable_quantity_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_pallets

    @unavailable_quantity_pallets.setter
    def unavailable_quantity_pallets(self, unavailable_quantity_pallets):
        """Sets the unavailable_quantity_pallets of this Item.


        :param unavailable_quantity_pallets: The unavailable_quantity_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_pallets = unavailable_quantity_pallets

    @property
    def overall_days_on_hand(self):
        """Gets the overall_days_on_hand of this Item.  # noqa: E501


        :return: The overall_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._overall_days_on_hand

    @overall_days_on_hand.setter
    def overall_days_on_hand(self, overall_days_on_hand):
        """Sets the overall_days_on_hand of this Item.


        :param overall_days_on_hand: The overall_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._overall_days_on_hand = overall_days_on_hand

    @property
    def overall_stock_status(self):
        """Gets the overall_stock_status of this Item.  # noqa: E501


        :return: The overall_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._overall_stock_status

    @overall_stock_status.setter
    def overall_stock_status(self, overall_stock_status):
        """Sets the overall_stock_status of this Item.


        :param overall_stock_status: The overall_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._overall_stock_status = overall_stock_status

    @property
    def estimated_pallets(self):
        """Gets the estimated_pallets of this Item.  # noqa: E501


        :return: The estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._estimated_pallets

    @estimated_pallets.setter
    def estimated_pallets(self, estimated_pallets):
        """Sets the estimated_pallets of this Item.


        :param estimated_pallets: The estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._estimated_pallets = estimated_pallets

    @property
    def estimated_cases(self):
        """Gets the estimated_cases of this Item.  # noqa: E501


        :return: The estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._estimated_cases

    @estimated_cases.setter
    def estimated_cases(self, estimated_cases):
        """Sets the estimated_cases of this Item.


        :param estimated_cases: The estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._estimated_cases = estimated_cases

    @property
    def estimated_inner_packs(self):
        """Gets the estimated_inner_packs of this Item.  # noqa: E501


        :return: The estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._estimated_inner_packs

    @estimated_inner_packs.setter
    def estimated_inner_packs(self, estimated_inner_packs):
        """Sets the estimated_inner_packs of this Item.


        :param estimated_inner_packs: The estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._estimated_inner_packs = estimated_inner_packs

    @property
    def next_requested_delivery_date(self):
        """Gets the next_requested_delivery_date of this Item.  # noqa: E501


        :return: The next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._next_requested_delivery_date

    @next_requested_delivery_date.setter
    def next_requested_delivery_date(self, next_requested_delivery_date):
        """Sets the next_requested_delivery_date of this Item.


        :param next_requested_delivery_date: The next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._next_requested_delivery_date = next_requested_delivery_date

    @property
    def warehouse1_id(self):
        """Gets the warehouse1_id of this Item.  # noqa: E501


        :return: The warehouse1_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse1_id

    @warehouse1_id.setter
    def warehouse1_id(self, warehouse1_id):
        """Sets the warehouse1_id of this Item.


        :param warehouse1_id: The warehouse1_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse1_id = warehouse1_id

    @property
    def w1_available_quantity(self):
        """Gets the w1_available_quantity of this Item.  # noqa: E501


        :return: The w1_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_available_quantity

    @w1_available_quantity.setter
    def w1_available_quantity(self, w1_available_quantity):
        """Sets the w1_available_quantity of this Item.


        :param w1_available_quantity: The w1_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_available_quantity = w1_available_quantity

    @property
    def w1_damaged_quantity(self):
        """Gets the w1_damaged_quantity of this Item.  # noqa: E501


        :return: The w1_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_damaged_quantity

    @w1_damaged_quantity.setter
    def w1_damaged_quantity(self, w1_damaged_quantity):
        """Sets the w1_damaged_quantity of this Item.


        :param w1_damaged_quantity: The w1_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_damaged_quantity = w1_damaged_quantity

    @property
    def w1_in_fulfillment_process_quantity(self):
        """Gets the w1_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w1_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_in_fulfillment_process_quantity

    @w1_in_fulfillment_process_quantity.setter
    def w1_in_fulfillment_process_quantity(self, w1_in_fulfillment_process_quantity):
        """Sets the w1_in_fulfillment_process_quantity of this Item.


        :param w1_in_fulfillment_process_quantity: The w1_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_in_fulfillment_process_quantity = w1_in_fulfillment_process_quantity

    @property
    def w1_on_hand_quantity(self):
        """Gets the w1_on_hand_quantity of this Item.  # noqa: E501


        :return: The w1_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_on_hand_quantity

    @w1_on_hand_quantity.setter
    def w1_on_hand_quantity(self, w1_on_hand_quantity):
        """Sets the w1_on_hand_quantity of this Item.


        :param w1_on_hand_quantity: The w1_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_on_hand_quantity = w1_on_hand_quantity

    @property
    def w1_open_order_quantity(self):
        """Gets the w1_open_order_quantity of this Item.  # noqa: E501


        :return: The w1_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_open_order_quantity

    @w1_open_order_quantity.setter
    def w1_open_order_quantity(self, w1_open_order_quantity):
        """Sets the w1_open_order_quantity of this Item.


        :param w1_open_order_quantity: The w1_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_open_order_quantity = w1_open_order_quantity

    @property
    def w1_open_po_quantity(self):
        """Gets the w1_open_po_quantity of this Item.  # noqa: E501


        :return: The w1_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_open_po_quantity

    @w1_open_po_quantity.setter
    def w1_open_po_quantity(self, w1_open_po_quantity):
        """Sets the w1_open_po_quantity of this Item.


        :param w1_open_po_quantity: The w1_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_open_po_quantity = w1_open_po_quantity

    @property
    def w1_orderable_quantity(self):
        """Gets the w1_orderable_quantity of this Item.  # noqa: E501


        :return: The w1_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_orderable_quantity

    @w1_orderable_quantity.setter
    def w1_orderable_quantity(self, w1_orderable_quantity):
        """Sets the w1_orderable_quantity of this Item.


        :param w1_orderable_quantity: The w1_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_orderable_quantity = w1_orderable_quantity

    @property
    def w1_unallocatable_quantity(self):
        """Gets the w1_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w1_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_unallocatable_quantity

    @w1_unallocatable_quantity.setter
    def w1_unallocatable_quantity(self, w1_unallocatable_quantity):
        """Sets the w1_unallocatable_quantity of this Item.


        :param w1_unallocatable_quantity: The w1_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_unallocatable_quantity = w1_unallocatable_quantity

    @property
    def w1_unavailable_quantity(self):
        """Gets the w1_unavailable_quantity of this Item.  # noqa: E501


        :return: The w1_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_unavailable_quantity

    @w1_unavailable_quantity.setter
    def w1_unavailable_quantity(self, w1_unavailable_quantity):
        """Sets the w1_unavailable_quantity of this Item.


        :param w1_unavailable_quantity: The w1_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w1_unavailable_quantity = w1_unavailable_quantity

    @property
    def w1_days_on_hand(self):
        """Gets the w1_days_on_hand of this Item.  # noqa: E501


        :return: The w1_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_days_on_hand

    @w1_days_on_hand.setter
    def w1_days_on_hand(self, w1_days_on_hand):
        """Sets the w1_days_on_hand of this Item.


        :param w1_days_on_hand: The w1_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w1_days_on_hand = w1_days_on_hand

    @property
    def w1_stock_status(self):
        """Gets the w1_stock_status of this Item.  # noqa: E501


        :return: The w1_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w1_stock_status

    @w1_stock_status.setter
    def w1_stock_status(self, w1_stock_status):
        """Sets the w1_stock_status of this Item.


        :param w1_stock_status: The w1_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w1_stock_status = w1_stock_status

    @property
    def w1_estimated_pallets(self):
        """Gets the w1_estimated_pallets of this Item.  # noqa: E501


        :return: The w1_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_estimated_pallets

    @w1_estimated_pallets.setter
    def w1_estimated_pallets(self, w1_estimated_pallets):
        """Sets the w1_estimated_pallets of this Item.


        :param w1_estimated_pallets: The w1_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w1_estimated_pallets = w1_estimated_pallets

    @property
    def w1_estimated_cases(self):
        """Gets the w1_estimated_cases of this Item.  # noqa: E501


        :return: The w1_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_estimated_cases

    @w1_estimated_cases.setter
    def w1_estimated_cases(self, w1_estimated_cases):
        """Sets the w1_estimated_cases of this Item.


        :param w1_estimated_cases: The w1_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w1_estimated_cases = w1_estimated_cases

    @property
    def w1_estimated_inner_packs(self):
        """Gets the w1_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w1_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w1_estimated_inner_packs

    @w1_estimated_inner_packs.setter
    def w1_estimated_inner_packs(self, w1_estimated_inner_packs):
        """Sets the w1_estimated_inner_packs of this Item.


        :param w1_estimated_inner_packs: The w1_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w1_estimated_inner_packs = w1_estimated_inner_packs

    @property
    def w1_next_requested_delivery_date(self):
        """Gets the w1_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w1_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w1_next_requested_delivery_date

    @w1_next_requested_delivery_date.setter
    def w1_next_requested_delivery_date(self, w1_next_requested_delivery_date):
        """Sets the w1_next_requested_delivery_date of this Item.


        :param w1_next_requested_delivery_date: The w1_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w1_next_requested_delivery_date = w1_next_requested_delivery_date

    @property
    def warehouse2_id(self):
        """Gets the warehouse2_id of this Item.  # noqa: E501


        :return: The warehouse2_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse2_id

    @warehouse2_id.setter
    def warehouse2_id(self, warehouse2_id):
        """Sets the warehouse2_id of this Item.


        :param warehouse2_id: The warehouse2_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse2_id = warehouse2_id

    @property
    def w2_available_quantity(self):
        """Gets the w2_available_quantity of this Item.  # noqa: E501


        :return: The w2_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_available_quantity

    @w2_available_quantity.setter
    def w2_available_quantity(self, w2_available_quantity):
        """Sets the w2_available_quantity of this Item.


        :param w2_available_quantity: The w2_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_available_quantity = w2_available_quantity

    @property
    def w2_damaged_quantity(self):
        """Gets the w2_damaged_quantity of this Item.  # noqa: E501


        :return: The w2_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_damaged_quantity

    @w2_damaged_quantity.setter
    def w2_damaged_quantity(self, w2_damaged_quantity):
        """Sets the w2_damaged_quantity of this Item.


        :param w2_damaged_quantity: The w2_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_damaged_quantity = w2_damaged_quantity

    @property
    def w2_in_fulfillment_process_quantity(self):
        """Gets the w2_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w2_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_in_fulfillment_process_quantity

    @w2_in_fulfillment_process_quantity.setter
    def w2_in_fulfillment_process_quantity(self, w2_in_fulfillment_process_quantity):
        """Sets the w2_in_fulfillment_process_quantity of this Item.


        :param w2_in_fulfillment_process_quantity: The w2_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_in_fulfillment_process_quantity = w2_in_fulfillment_process_quantity

    @property
    def w2_on_hand_quantity(self):
        """Gets the w2_on_hand_quantity of this Item.  # noqa: E501


        :return: The w2_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_on_hand_quantity

    @w2_on_hand_quantity.setter
    def w2_on_hand_quantity(self, w2_on_hand_quantity):
        """Sets the w2_on_hand_quantity of this Item.


        :param w2_on_hand_quantity: The w2_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_on_hand_quantity = w2_on_hand_quantity

    @property
    def w2_open_order_quantity(self):
        """Gets the w2_open_order_quantity of this Item.  # noqa: E501


        :return: The w2_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_open_order_quantity

    @w2_open_order_quantity.setter
    def w2_open_order_quantity(self, w2_open_order_quantity):
        """Sets the w2_open_order_quantity of this Item.


        :param w2_open_order_quantity: The w2_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_open_order_quantity = w2_open_order_quantity

    @property
    def w2_open_po_quantity(self):
        """Gets the w2_open_po_quantity of this Item.  # noqa: E501


        :return: The w2_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_open_po_quantity

    @w2_open_po_quantity.setter
    def w2_open_po_quantity(self, w2_open_po_quantity):
        """Sets the w2_open_po_quantity of this Item.


        :param w2_open_po_quantity: The w2_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_open_po_quantity = w2_open_po_quantity

    @property
    def w2_orderable_quantity(self):
        """Gets the w2_orderable_quantity of this Item.  # noqa: E501


        :return: The w2_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_orderable_quantity

    @w2_orderable_quantity.setter
    def w2_orderable_quantity(self, w2_orderable_quantity):
        """Sets the w2_orderable_quantity of this Item.


        :param w2_orderable_quantity: The w2_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_orderable_quantity = w2_orderable_quantity

    @property
    def w2_unallocatable_quantity(self):
        """Gets the w2_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w2_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_unallocatable_quantity

    @w2_unallocatable_quantity.setter
    def w2_unallocatable_quantity(self, w2_unallocatable_quantity):
        """Sets the w2_unallocatable_quantity of this Item.


        :param w2_unallocatable_quantity: The w2_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_unallocatable_quantity = w2_unallocatable_quantity

    @property
    def w2_unavailable_quantity(self):
        """Gets the w2_unavailable_quantity of this Item.  # noqa: E501


        :return: The w2_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_unavailable_quantity

    @w2_unavailable_quantity.setter
    def w2_unavailable_quantity(self, w2_unavailable_quantity):
        """Sets the w2_unavailable_quantity of this Item.


        :param w2_unavailable_quantity: The w2_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w2_unavailable_quantity = w2_unavailable_quantity

    @property
    def w2_days_on_hand(self):
        """Gets the w2_days_on_hand of this Item.  # noqa: E501


        :return: The w2_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_days_on_hand

    @w2_days_on_hand.setter
    def w2_days_on_hand(self, w2_days_on_hand):
        """Sets the w2_days_on_hand of this Item.


        :param w2_days_on_hand: The w2_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w2_days_on_hand = w2_days_on_hand

    @property
    def w2_stock_status(self):
        """Gets the w2_stock_status of this Item.  # noqa: E501


        :return: The w2_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w2_stock_status

    @w2_stock_status.setter
    def w2_stock_status(self, w2_stock_status):
        """Sets the w2_stock_status of this Item.


        :param w2_stock_status: The w2_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w2_stock_status = w2_stock_status

    @property
    def w2_estimated_pallets(self):
        """Gets the w2_estimated_pallets of this Item.  # noqa: E501


        :return: The w2_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_estimated_pallets

    @w2_estimated_pallets.setter
    def w2_estimated_pallets(self, w2_estimated_pallets):
        """Sets the w2_estimated_pallets of this Item.


        :param w2_estimated_pallets: The w2_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w2_estimated_pallets = w2_estimated_pallets

    @property
    def w2_estimated_cases(self):
        """Gets the w2_estimated_cases of this Item.  # noqa: E501


        :return: The w2_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_estimated_cases

    @w2_estimated_cases.setter
    def w2_estimated_cases(self, w2_estimated_cases):
        """Sets the w2_estimated_cases of this Item.


        :param w2_estimated_cases: The w2_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w2_estimated_cases = w2_estimated_cases

    @property
    def w2_estimated_inner_packs(self):
        """Gets the w2_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w2_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w2_estimated_inner_packs

    @w2_estimated_inner_packs.setter
    def w2_estimated_inner_packs(self, w2_estimated_inner_packs):
        """Sets the w2_estimated_inner_packs of this Item.


        :param w2_estimated_inner_packs: The w2_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w2_estimated_inner_packs = w2_estimated_inner_packs

    @property
    def w2_next_requested_delivery_date(self):
        """Gets the w2_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w2_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w2_next_requested_delivery_date

    @w2_next_requested_delivery_date.setter
    def w2_next_requested_delivery_date(self, w2_next_requested_delivery_date):
        """Sets the w2_next_requested_delivery_date of this Item.


        :param w2_next_requested_delivery_date: The w2_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w2_next_requested_delivery_date = w2_next_requested_delivery_date

    @property
    def warehouse3_id(self):
        """Gets the warehouse3_id of this Item.  # noqa: E501


        :return: The warehouse3_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse3_id

    @warehouse3_id.setter
    def warehouse3_id(self, warehouse3_id):
        """Sets the warehouse3_id of this Item.


        :param warehouse3_id: The warehouse3_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse3_id = warehouse3_id

    @property
    def w3_available_quantity(self):
        """Gets the w3_available_quantity of this Item.  # noqa: E501


        :return: The w3_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_available_quantity

    @w3_available_quantity.setter
    def w3_available_quantity(self, w3_available_quantity):
        """Sets the w3_available_quantity of this Item.


        :param w3_available_quantity: The w3_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_available_quantity = w3_available_quantity

    @property
    def w3_damaged_quantity(self):
        """Gets the w3_damaged_quantity of this Item.  # noqa: E501


        :return: The w3_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_damaged_quantity

    @w3_damaged_quantity.setter
    def w3_damaged_quantity(self, w3_damaged_quantity):
        """Sets the w3_damaged_quantity of this Item.


        :param w3_damaged_quantity: The w3_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_damaged_quantity = w3_damaged_quantity

    @property
    def w3_in_fulfillment_process_quantity(self):
        """Gets the w3_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w3_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_in_fulfillment_process_quantity

    @w3_in_fulfillment_process_quantity.setter
    def w3_in_fulfillment_process_quantity(self, w3_in_fulfillment_process_quantity):
        """Sets the w3_in_fulfillment_process_quantity of this Item.


        :param w3_in_fulfillment_process_quantity: The w3_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_in_fulfillment_process_quantity = w3_in_fulfillment_process_quantity

    @property
    def w3_on_hand_quantity(self):
        """Gets the w3_on_hand_quantity of this Item.  # noqa: E501


        :return: The w3_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_on_hand_quantity

    @w3_on_hand_quantity.setter
    def w3_on_hand_quantity(self, w3_on_hand_quantity):
        """Sets the w3_on_hand_quantity of this Item.


        :param w3_on_hand_quantity: The w3_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_on_hand_quantity = w3_on_hand_quantity

    @property
    def w3_open_order_quantity(self):
        """Gets the w3_open_order_quantity of this Item.  # noqa: E501


        :return: The w3_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_open_order_quantity

    @w3_open_order_quantity.setter
    def w3_open_order_quantity(self, w3_open_order_quantity):
        """Sets the w3_open_order_quantity of this Item.


        :param w3_open_order_quantity: The w3_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_open_order_quantity = w3_open_order_quantity

    @property
    def w3_open_po_quantity(self):
        """Gets the w3_open_po_quantity of this Item.  # noqa: E501


        :return: The w3_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_open_po_quantity

    @w3_open_po_quantity.setter
    def w3_open_po_quantity(self, w3_open_po_quantity):
        """Sets the w3_open_po_quantity of this Item.


        :param w3_open_po_quantity: The w3_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_open_po_quantity = w3_open_po_quantity

    @property
    def w3_orderable_quantity(self):
        """Gets the w3_orderable_quantity of this Item.  # noqa: E501


        :return: The w3_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_orderable_quantity

    @w3_orderable_quantity.setter
    def w3_orderable_quantity(self, w3_orderable_quantity):
        """Sets the w3_orderable_quantity of this Item.


        :param w3_orderable_quantity: The w3_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_orderable_quantity = w3_orderable_quantity

    @property
    def w3_unallocatable_quantity(self):
        """Gets the w3_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w3_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_unallocatable_quantity

    @w3_unallocatable_quantity.setter
    def w3_unallocatable_quantity(self, w3_unallocatable_quantity):
        """Sets the w3_unallocatable_quantity of this Item.


        :param w3_unallocatable_quantity: The w3_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_unallocatable_quantity = w3_unallocatable_quantity

    @property
    def w3_unavailable_quantity(self):
        """Gets the w3_unavailable_quantity of this Item.  # noqa: E501


        :return: The w3_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_unavailable_quantity

    @w3_unavailable_quantity.setter
    def w3_unavailable_quantity(self, w3_unavailable_quantity):
        """Sets the w3_unavailable_quantity of this Item.


        :param w3_unavailable_quantity: The w3_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w3_unavailable_quantity = w3_unavailable_quantity

    @property
    def w3_days_on_hand(self):
        """Gets the w3_days_on_hand of this Item.  # noqa: E501


        :return: The w3_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_days_on_hand

    @w3_days_on_hand.setter
    def w3_days_on_hand(self, w3_days_on_hand):
        """Sets the w3_days_on_hand of this Item.


        :param w3_days_on_hand: The w3_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w3_days_on_hand = w3_days_on_hand

    @property
    def w3_stock_status(self):
        """Gets the w3_stock_status of this Item.  # noqa: E501


        :return: The w3_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w3_stock_status

    @w3_stock_status.setter
    def w3_stock_status(self, w3_stock_status):
        """Sets the w3_stock_status of this Item.


        :param w3_stock_status: The w3_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w3_stock_status = w3_stock_status

    @property
    def w3_estimated_pallets(self):
        """Gets the w3_estimated_pallets of this Item.  # noqa: E501


        :return: The w3_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_estimated_pallets

    @w3_estimated_pallets.setter
    def w3_estimated_pallets(self, w3_estimated_pallets):
        """Sets the w3_estimated_pallets of this Item.


        :param w3_estimated_pallets: The w3_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w3_estimated_pallets = w3_estimated_pallets

    @property
    def w3_estimated_cases(self):
        """Gets the w3_estimated_cases of this Item.  # noqa: E501


        :return: The w3_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_estimated_cases

    @w3_estimated_cases.setter
    def w3_estimated_cases(self, w3_estimated_cases):
        """Sets the w3_estimated_cases of this Item.


        :param w3_estimated_cases: The w3_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w3_estimated_cases = w3_estimated_cases

    @property
    def w3_estimated_inner_packs(self):
        """Gets the w3_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w3_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w3_estimated_inner_packs

    @w3_estimated_inner_packs.setter
    def w3_estimated_inner_packs(self, w3_estimated_inner_packs):
        """Sets the w3_estimated_inner_packs of this Item.


        :param w3_estimated_inner_packs: The w3_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w3_estimated_inner_packs = w3_estimated_inner_packs

    @property
    def w3_next_requested_delivery_date(self):
        """Gets the w3_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w3_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w3_next_requested_delivery_date

    @w3_next_requested_delivery_date.setter
    def w3_next_requested_delivery_date(self, w3_next_requested_delivery_date):
        """Sets the w3_next_requested_delivery_date of this Item.


        :param w3_next_requested_delivery_date: The w3_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w3_next_requested_delivery_date = w3_next_requested_delivery_date

    @property
    def warehouse4_id(self):
        """Gets the warehouse4_id of this Item.  # noqa: E501


        :return: The warehouse4_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse4_id

    @warehouse4_id.setter
    def warehouse4_id(self, warehouse4_id):
        """Sets the warehouse4_id of this Item.


        :param warehouse4_id: The warehouse4_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse4_id = warehouse4_id

    @property
    def w4_available_quantity(self):
        """Gets the w4_available_quantity of this Item.  # noqa: E501


        :return: The w4_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_available_quantity

    @w4_available_quantity.setter
    def w4_available_quantity(self, w4_available_quantity):
        """Sets the w4_available_quantity of this Item.


        :param w4_available_quantity: The w4_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_available_quantity = w4_available_quantity

    @property
    def w4_damaged_quantity(self):
        """Gets the w4_damaged_quantity of this Item.  # noqa: E501


        :return: The w4_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_damaged_quantity

    @w4_damaged_quantity.setter
    def w4_damaged_quantity(self, w4_damaged_quantity):
        """Sets the w4_damaged_quantity of this Item.


        :param w4_damaged_quantity: The w4_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_damaged_quantity = w4_damaged_quantity

    @property
    def w4_in_fulfillment_process_quantity(self):
        """Gets the w4_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w4_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_in_fulfillment_process_quantity

    @w4_in_fulfillment_process_quantity.setter
    def w4_in_fulfillment_process_quantity(self, w4_in_fulfillment_process_quantity):
        """Sets the w4_in_fulfillment_process_quantity of this Item.


        :param w4_in_fulfillment_process_quantity: The w4_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_in_fulfillment_process_quantity = w4_in_fulfillment_process_quantity

    @property
    def w4_on_hand_quantity(self):
        """Gets the w4_on_hand_quantity of this Item.  # noqa: E501


        :return: The w4_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_on_hand_quantity

    @w4_on_hand_quantity.setter
    def w4_on_hand_quantity(self, w4_on_hand_quantity):
        """Sets the w4_on_hand_quantity of this Item.


        :param w4_on_hand_quantity: The w4_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_on_hand_quantity = w4_on_hand_quantity

    @property
    def w4_open_order_quantity(self):
        """Gets the w4_open_order_quantity of this Item.  # noqa: E501


        :return: The w4_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_open_order_quantity

    @w4_open_order_quantity.setter
    def w4_open_order_quantity(self, w4_open_order_quantity):
        """Sets the w4_open_order_quantity of this Item.


        :param w4_open_order_quantity: The w4_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_open_order_quantity = w4_open_order_quantity

    @property
    def w4_open_po_quantity(self):
        """Gets the w4_open_po_quantity of this Item.  # noqa: E501


        :return: The w4_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_open_po_quantity

    @w4_open_po_quantity.setter
    def w4_open_po_quantity(self, w4_open_po_quantity):
        """Sets the w4_open_po_quantity of this Item.


        :param w4_open_po_quantity: The w4_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_open_po_quantity = w4_open_po_quantity

    @property
    def w4_orderable_quantity(self):
        """Gets the w4_orderable_quantity of this Item.  # noqa: E501


        :return: The w4_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_orderable_quantity

    @w4_orderable_quantity.setter
    def w4_orderable_quantity(self, w4_orderable_quantity):
        """Sets the w4_orderable_quantity of this Item.


        :param w4_orderable_quantity: The w4_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_orderable_quantity = w4_orderable_quantity

    @property
    def w4_unallocatable_quantity(self):
        """Gets the w4_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w4_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_unallocatable_quantity

    @w4_unallocatable_quantity.setter
    def w4_unallocatable_quantity(self, w4_unallocatable_quantity):
        """Sets the w4_unallocatable_quantity of this Item.


        :param w4_unallocatable_quantity: The w4_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_unallocatable_quantity = w4_unallocatable_quantity

    @property
    def w4_unavailable_quantity(self):
        """Gets the w4_unavailable_quantity of this Item.  # noqa: E501


        :return: The w4_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_unavailable_quantity

    @w4_unavailable_quantity.setter
    def w4_unavailable_quantity(self, w4_unavailable_quantity):
        """Sets the w4_unavailable_quantity of this Item.


        :param w4_unavailable_quantity: The w4_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w4_unavailable_quantity = w4_unavailable_quantity

    @property
    def w4_days_on_hand(self):
        """Gets the w4_days_on_hand of this Item.  # noqa: E501


        :return: The w4_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_days_on_hand

    @w4_days_on_hand.setter
    def w4_days_on_hand(self, w4_days_on_hand):
        """Sets the w4_days_on_hand of this Item.


        :param w4_days_on_hand: The w4_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w4_days_on_hand = w4_days_on_hand

    @property
    def w4_stock_status(self):
        """Gets the w4_stock_status of this Item.  # noqa: E501


        :return: The w4_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w4_stock_status

    @w4_stock_status.setter
    def w4_stock_status(self, w4_stock_status):
        """Sets the w4_stock_status of this Item.


        :param w4_stock_status: The w4_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w4_stock_status = w4_stock_status

    @property
    def w4_estimated_pallets(self):
        """Gets the w4_estimated_pallets of this Item.  # noqa: E501


        :return: The w4_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_estimated_pallets

    @w4_estimated_pallets.setter
    def w4_estimated_pallets(self, w4_estimated_pallets):
        """Sets the w4_estimated_pallets of this Item.


        :param w4_estimated_pallets: The w4_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w4_estimated_pallets = w4_estimated_pallets

    @property
    def w4_estimated_cases(self):
        """Gets the w4_estimated_cases of this Item.  # noqa: E501


        :return: The w4_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_estimated_cases

    @w4_estimated_cases.setter
    def w4_estimated_cases(self, w4_estimated_cases):
        """Sets the w4_estimated_cases of this Item.


        :param w4_estimated_cases: The w4_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w4_estimated_cases = w4_estimated_cases

    @property
    def w4_estimated_inner_packs(self):
        """Gets the w4_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w4_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w4_estimated_inner_packs

    @w4_estimated_inner_packs.setter
    def w4_estimated_inner_packs(self, w4_estimated_inner_packs):
        """Sets the w4_estimated_inner_packs of this Item.


        :param w4_estimated_inner_packs: The w4_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w4_estimated_inner_packs = w4_estimated_inner_packs

    @property
    def w4_next_requested_delivery_date(self):
        """Gets the w4_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w4_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w4_next_requested_delivery_date

    @w4_next_requested_delivery_date.setter
    def w4_next_requested_delivery_date(self, w4_next_requested_delivery_date):
        """Sets the w4_next_requested_delivery_date of this Item.


        :param w4_next_requested_delivery_date: The w4_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w4_next_requested_delivery_date = w4_next_requested_delivery_date

    @property
    def warehouse5_id(self):
        """Gets the warehouse5_id of this Item.  # noqa: E501


        :return: The warehouse5_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse5_id

    @warehouse5_id.setter
    def warehouse5_id(self, warehouse5_id):
        """Sets the warehouse5_id of this Item.


        :param warehouse5_id: The warehouse5_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse5_id = warehouse5_id

    @property
    def w5_available_quantity(self):
        """Gets the w5_available_quantity of this Item.  # noqa: E501


        :return: The w5_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_available_quantity

    @w5_available_quantity.setter
    def w5_available_quantity(self, w5_available_quantity):
        """Sets the w5_available_quantity of this Item.


        :param w5_available_quantity: The w5_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_available_quantity = w5_available_quantity

    @property
    def w5_damaged_quantity(self):
        """Gets the w5_damaged_quantity of this Item.  # noqa: E501


        :return: The w5_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_damaged_quantity

    @w5_damaged_quantity.setter
    def w5_damaged_quantity(self, w5_damaged_quantity):
        """Sets the w5_damaged_quantity of this Item.


        :param w5_damaged_quantity: The w5_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_damaged_quantity = w5_damaged_quantity

    @property
    def w5_in_fulfillment_process_quantity(self):
        """Gets the w5_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w5_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_in_fulfillment_process_quantity

    @w5_in_fulfillment_process_quantity.setter
    def w5_in_fulfillment_process_quantity(self, w5_in_fulfillment_process_quantity):
        """Sets the w5_in_fulfillment_process_quantity of this Item.


        :param w5_in_fulfillment_process_quantity: The w5_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_in_fulfillment_process_quantity = w5_in_fulfillment_process_quantity

    @property
    def w5_on_hand_quantity(self):
        """Gets the w5_on_hand_quantity of this Item.  # noqa: E501


        :return: The w5_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_on_hand_quantity

    @w5_on_hand_quantity.setter
    def w5_on_hand_quantity(self, w5_on_hand_quantity):
        """Sets the w5_on_hand_quantity of this Item.


        :param w5_on_hand_quantity: The w5_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_on_hand_quantity = w5_on_hand_quantity

    @property
    def w5_open_order_quantity(self):
        """Gets the w5_open_order_quantity of this Item.  # noqa: E501


        :return: The w5_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_open_order_quantity

    @w5_open_order_quantity.setter
    def w5_open_order_quantity(self, w5_open_order_quantity):
        """Sets the w5_open_order_quantity of this Item.


        :param w5_open_order_quantity: The w5_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_open_order_quantity = w5_open_order_quantity

    @property
    def w5_open_po_quantity(self):
        """Gets the w5_open_po_quantity of this Item.  # noqa: E501


        :return: The w5_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_open_po_quantity

    @w5_open_po_quantity.setter
    def w5_open_po_quantity(self, w5_open_po_quantity):
        """Sets the w5_open_po_quantity of this Item.


        :param w5_open_po_quantity: The w5_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_open_po_quantity = w5_open_po_quantity

    @property
    def w5_orderable_quantity(self):
        """Gets the w5_orderable_quantity of this Item.  # noqa: E501


        :return: The w5_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_orderable_quantity

    @w5_orderable_quantity.setter
    def w5_orderable_quantity(self, w5_orderable_quantity):
        """Sets the w5_orderable_quantity of this Item.


        :param w5_orderable_quantity: The w5_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_orderable_quantity = w5_orderable_quantity

    @property
    def w5_unallocatable_quantity(self):
        """Gets the w5_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w5_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_unallocatable_quantity

    @w5_unallocatable_quantity.setter
    def w5_unallocatable_quantity(self, w5_unallocatable_quantity):
        """Sets the w5_unallocatable_quantity of this Item.


        :param w5_unallocatable_quantity: The w5_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_unallocatable_quantity = w5_unallocatable_quantity

    @property
    def w5_unavailable_quantity(self):
        """Gets the w5_unavailable_quantity of this Item.  # noqa: E501


        :return: The w5_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_unavailable_quantity

    @w5_unavailable_quantity.setter
    def w5_unavailable_quantity(self, w5_unavailable_quantity):
        """Sets the w5_unavailable_quantity of this Item.


        :param w5_unavailable_quantity: The w5_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w5_unavailable_quantity = w5_unavailable_quantity

    @property
    def w5_days_on_hand(self):
        """Gets the w5_days_on_hand of this Item.  # noqa: E501


        :return: The w5_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_days_on_hand

    @w5_days_on_hand.setter
    def w5_days_on_hand(self, w5_days_on_hand):
        """Sets the w5_days_on_hand of this Item.


        :param w5_days_on_hand: The w5_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w5_days_on_hand = w5_days_on_hand

    @property
    def w5_stock_status(self):
        """Gets the w5_stock_status of this Item.  # noqa: E501


        :return: The w5_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w5_stock_status

    @w5_stock_status.setter
    def w5_stock_status(self, w5_stock_status):
        """Sets the w5_stock_status of this Item.


        :param w5_stock_status: The w5_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w5_stock_status = w5_stock_status

    @property
    def w5_estimated_pallets(self):
        """Gets the w5_estimated_pallets of this Item.  # noqa: E501


        :return: The w5_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_estimated_pallets

    @w5_estimated_pallets.setter
    def w5_estimated_pallets(self, w5_estimated_pallets):
        """Sets the w5_estimated_pallets of this Item.


        :param w5_estimated_pallets: The w5_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w5_estimated_pallets = w5_estimated_pallets

    @property
    def w5_estimated_cases(self):
        """Gets the w5_estimated_cases of this Item.  # noqa: E501


        :return: The w5_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_estimated_cases

    @w5_estimated_cases.setter
    def w5_estimated_cases(self, w5_estimated_cases):
        """Sets the w5_estimated_cases of this Item.


        :param w5_estimated_cases: The w5_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w5_estimated_cases = w5_estimated_cases

    @property
    def w5_estimated_inner_packs(self):
        """Gets the w5_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w5_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w5_estimated_inner_packs

    @w5_estimated_inner_packs.setter
    def w5_estimated_inner_packs(self, w5_estimated_inner_packs):
        """Sets the w5_estimated_inner_packs of this Item.


        :param w5_estimated_inner_packs: The w5_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w5_estimated_inner_packs = w5_estimated_inner_packs

    @property
    def w5_next_requested_delivery_date(self):
        """Gets the w5_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w5_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w5_next_requested_delivery_date

    @w5_next_requested_delivery_date.setter
    def w5_next_requested_delivery_date(self, w5_next_requested_delivery_date):
        """Sets the w5_next_requested_delivery_date of this Item.


        :param w5_next_requested_delivery_date: The w5_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w5_next_requested_delivery_date = w5_next_requested_delivery_date

    @property
    def warehouse6_id(self):
        """Gets the warehouse6_id of this Item.  # noqa: E501


        :return: The warehouse6_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse6_id

    @warehouse6_id.setter
    def warehouse6_id(self, warehouse6_id):
        """Sets the warehouse6_id of this Item.


        :param warehouse6_id: The warehouse6_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse6_id = warehouse6_id

    @property
    def w6_available_quantity(self):
        """Gets the w6_available_quantity of this Item.  # noqa: E501


        :return: The w6_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_available_quantity

    @w6_available_quantity.setter
    def w6_available_quantity(self, w6_available_quantity):
        """Sets the w6_available_quantity of this Item.


        :param w6_available_quantity: The w6_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_available_quantity = w6_available_quantity

    @property
    def w6_damaged_quantity(self):
        """Gets the w6_damaged_quantity of this Item.  # noqa: E501


        :return: The w6_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_damaged_quantity

    @w6_damaged_quantity.setter
    def w6_damaged_quantity(self, w6_damaged_quantity):
        """Sets the w6_damaged_quantity of this Item.


        :param w6_damaged_quantity: The w6_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_damaged_quantity = w6_damaged_quantity

    @property
    def w6_in_fulfillment_process_quantity(self):
        """Gets the w6_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w6_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_in_fulfillment_process_quantity

    @w6_in_fulfillment_process_quantity.setter
    def w6_in_fulfillment_process_quantity(self, w6_in_fulfillment_process_quantity):
        """Sets the w6_in_fulfillment_process_quantity of this Item.


        :param w6_in_fulfillment_process_quantity: The w6_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_in_fulfillment_process_quantity = w6_in_fulfillment_process_quantity

    @property
    def w6_on_hand_quantity(self):
        """Gets the w6_on_hand_quantity of this Item.  # noqa: E501


        :return: The w6_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_on_hand_quantity

    @w6_on_hand_quantity.setter
    def w6_on_hand_quantity(self, w6_on_hand_quantity):
        """Sets the w6_on_hand_quantity of this Item.


        :param w6_on_hand_quantity: The w6_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_on_hand_quantity = w6_on_hand_quantity

    @property
    def w6_open_order_quantity(self):
        """Gets the w6_open_order_quantity of this Item.  # noqa: E501


        :return: The w6_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_open_order_quantity

    @w6_open_order_quantity.setter
    def w6_open_order_quantity(self, w6_open_order_quantity):
        """Sets the w6_open_order_quantity of this Item.


        :param w6_open_order_quantity: The w6_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_open_order_quantity = w6_open_order_quantity

    @property
    def w6_open_po_quantity(self):
        """Gets the w6_open_po_quantity of this Item.  # noqa: E501


        :return: The w6_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_open_po_quantity

    @w6_open_po_quantity.setter
    def w6_open_po_quantity(self, w6_open_po_quantity):
        """Sets the w6_open_po_quantity of this Item.


        :param w6_open_po_quantity: The w6_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_open_po_quantity = w6_open_po_quantity

    @property
    def w6_orderable_quantity(self):
        """Gets the w6_orderable_quantity of this Item.  # noqa: E501


        :return: The w6_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_orderable_quantity

    @w6_orderable_quantity.setter
    def w6_orderable_quantity(self, w6_orderable_quantity):
        """Sets the w6_orderable_quantity of this Item.


        :param w6_orderable_quantity: The w6_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_orderable_quantity = w6_orderable_quantity

    @property
    def w6_unallocatable_quantity(self):
        """Gets the w6_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w6_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_unallocatable_quantity

    @w6_unallocatable_quantity.setter
    def w6_unallocatable_quantity(self, w6_unallocatable_quantity):
        """Sets the w6_unallocatable_quantity of this Item.


        :param w6_unallocatable_quantity: The w6_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_unallocatable_quantity = w6_unallocatable_quantity

    @property
    def w6_unavailable_quantity(self):
        """Gets the w6_unavailable_quantity of this Item.  # noqa: E501


        :return: The w6_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_unavailable_quantity

    @w6_unavailable_quantity.setter
    def w6_unavailable_quantity(self, w6_unavailable_quantity):
        """Sets the w6_unavailable_quantity of this Item.


        :param w6_unavailable_quantity: The w6_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w6_unavailable_quantity = w6_unavailable_quantity

    @property
    def w6_days_on_hand(self):
        """Gets the w6_days_on_hand of this Item.  # noqa: E501


        :return: The w6_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_days_on_hand

    @w6_days_on_hand.setter
    def w6_days_on_hand(self, w6_days_on_hand):
        """Sets the w6_days_on_hand of this Item.


        :param w6_days_on_hand: The w6_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w6_days_on_hand = w6_days_on_hand

    @property
    def w6_stock_status(self):
        """Gets the w6_stock_status of this Item.  # noqa: E501


        :return: The w6_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w6_stock_status

    @w6_stock_status.setter
    def w6_stock_status(self, w6_stock_status):
        """Sets the w6_stock_status of this Item.


        :param w6_stock_status: The w6_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w6_stock_status = w6_stock_status

    @property
    def w6_estimated_pallets(self):
        """Gets the w6_estimated_pallets of this Item.  # noqa: E501


        :return: The w6_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_estimated_pallets

    @w6_estimated_pallets.setter
    def w6_estimated_pallets(self, w6_estimated_pallets):
        """Sets the w6_estimated_pallets of this Item.


        :param w6_estimated_pallets: The w6_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w6_estimated_pallets = w6_estimated_pallets

    @property
    def w6_estimated_cases(self):
        """Gets the w6_estimated_cases of this Item.  # noqa: E501


        :return: The w6_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_estimated_cases

    @w6_estimated_cases.setter
    def w6_estimated_cases(self, w6_estimated_cases):
        """Sets the w6_estimated_cases of this Item.


        :param w6_estimated_cases: The w6_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w6_estimated_cases = w6_estimated_cases

    @property
    def w6_estimated_inner_packs(self):
        """Gets the w6_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w6_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w6_estimated_inner_packs

    @w6_estimated_inner_packs.setter
    def w6_estimated_inner_packs(self, w6_estimated_inner_packs):
        """Sets the w6_estimated_inner_packs of this Item.


        :param w6_estimated_inner_packs: The w6_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w6_estimated_inner_packs = w6_estimated_inner_packs

    @property
    def w6_next_requested_delivery_date(self):
        """Gets the w6_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w6_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w6_next_requested_delivery_date

    @w6_next_requested_delivery_date.setter
    def w6_next_requested_delivery_date(self, w6_next_requested_delivery_date):
        """Sets the w6_next_requested_delivery_date of this Item.


        :param w6_next_requested_delivery_date: The w6_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w6_next_requested_delivery_date = w6_next_requested_delivery_date

    @property
    def warehouse7_id(self):
        """Gets the warehouse7_id of this Item.  # noqa: E501


        :return: The warehouse7_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse7_id

    @warehouse7_id.setter
    def warehouse7_id(self, warehouse7_id):
        """Sets the warehouse7_id of this Item.


        :param warehouse7_id: The warehouse7_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse7_id = warehouse7_id

    @property
    def w7_available_quantity(self):
        """Gets the w7_available_quantity of this Item.  # noqa: E501


        :return: The w7_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_available_quantity

    @w7_available_quantity.setter
    def w7_available_quantity(self, w7_available_quantity):
        """Sets the w7_available_quantity of this Item.


        :param w7_available_quantity: The w7_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_available_quantity = w7_available_quantity

    @property
    def w7_damaged_quantity(self):
        """Gets the w7_damaged_quantity of this Item.  # noqa: E501


        :return: The w7_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_damaged_quantity

    @w7_damaged_quantity.setter
    def w7_damaged_quantity(self, w7_damaged_quantity):
        """Sets the w7_damaged_quantity of this Item.


        :param w7_damaged_quantity: The w7_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_damaged_quantity = w7_damaged_quantity

    @property
    def w7_in_fulfillment_process_quantity(self):
        """Gets the w7_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w7_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_in_fulfillment_process_quantity

    @w7_in_fulfillment_process_quantity.setter
    def w7_in_fulfillment_process_quantity(self, w7_in_fulfillment_process_quantity):
        """Sets the w7_in_fulfillment_process_quantity of this Item.


        :param w7_in_fulfillment_process_quantity: The w7_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_in_fulfillment_process_quantity = w7_in_fulfillment_process_quantity

    @property
    def w7_on_hand_quantity(self):
        """Gets the w7_on_hand_quantity of this Item.  # noqa: E501


        :return: The w7_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_on_hand_quantity

    @w7_on_hand_quantity.setter
    def w7_on_hand_quantity(self, w7_on_hand_quantity):
        """Sets the w7_on_hand_quantity of this Item.


        :param w7_on_hand_quantity: The w7_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_on_hand_quantity = w7_on_hand_quantity

    @property
    def w7_open_order_quantity(self):
        """Gets the w7_open_order_quantity of this Item.  # noqa: E501


        :return: The w7_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_open_order_quantity

    @w7_open_order_quantity.setter
    def w7_open_order_quantity(self, w7_open_order_quantity):
        """Sets the w7_open_order_quantity of this Item.


        :param w7_open_order_quantity: The w7_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_open_order_quantity = w7_open_order_quantity

    @property
    def w7_open_po_quantity(self):
        """Gets the w7_open_po_quantity of this Item.  # noqa: E501


        :return: The w7_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_open_po_quantity

    @w7_open_po_quantity.setter
    def w7_open_po_quantity(self, w7_open_po_quantity):
        """Sets the w7_open_po_quantity of this Item.


        :param w7_open_po_quantity: The w7_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_open_po_quantity = w7_open_po_quantity

    @property
    def w7_orderable_quantity(self):
        """Gets the w7_orderable_quantity of this Item.  # noqa: E501


        :return: The w7_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_orderable_quantity

    @w7_orderable_quantity.setter
    def w7_orderable_quantity(self, w7_orderable_quantity):
        """Sets the w7_orderable_quantity of this Item.


        :param w7_orderable_quantity: The w7_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_orderable_quantity = w7_orderable_quantity

    @property
    def w7_unallocatable_quantity(self):
        """Gets the w7_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w7_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_unallocatable_quantity

    @w7_unallocatable_quantity.setter
    def w7_unallocatable_quantity(self, w7_unallocatable_quantity):
        """Sets the w7_unallocatable_quantity of this Item.


        :param w7_unallocatable_quantity: The w7_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_unallocatable_quantity = w7_unallocatable_quantity

    @property
    def w7_unavailable_quantity(self):
        """Gets the w7_unavailable_quantity of this Item.  # noqa: E501


        :return: The w7_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_unavailable_quantity

    @w7_unavailable_quantity.setter
    def w7_unavailable_quantity(self, w7_unavailable_quantity):
        """Sets the w7_unavailable_quantity of this Item.


        :param w7_unavailable_quantity: The w7_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w7_unavailable_quantity = w7_unavailable_quantity

    @property
    def w7_days_on_hand(self):
        """Gets the w7_days_on_hand of this Item.  # noqa: E501


        :return: The w7_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_days_on_hand

    @w7_days_on_hand.setter
    def w7_days_on_hand(self, w7_days_on_hand):
        """Sets the w7_days_on_hand of this Item.


        :param w7_days_on_hand: The w7_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w7_days_on_hand = w7_days_on_hand

    @property
    def w7_stock_status(self):
        """Gets the w7_stock_status of this Item.  # noqa: E501


        :return: The w7_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w7_stock_status

    @w7_stock_status.setter
    def w7_stock_status(self, w7_stock_status):
        """Sets the w7_stock_status of this Item.


        :param w7_stock_status: The w7_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w7_stock_status = w7_stock_status

    @property
    def w7_estimated_pallets(self):
        """Gets the w7_estimated_pallets of this Item.  # noqa: E501


        :return: The w7_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_estimated_pallets

    @w7_estimated_pallets.setter
    def w7_estimated_pallets(self, w7_estimated_pallets):
        """Sets the w7_estimated_pallets of this Item.


        :param w7_estimated_pallets: The w7_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w7_estimated_pallets = w7_estimated_pallets

    @property
    def w7_estimated_cases(self):
        """Gets the w7_estimated_cases of this Item.  # noqa: E501


        :return: The w7_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_estimated_cases

    @w7_estimated_cases.setter
    def w7_estimated_cases(self, w7_estimated_cases):
        """Sets the w7_estimated_cases of this Item.


        :param w7_estimated_cases: The w7_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w7_estimated_cases = w7_estimated_cases

    @property
    def w7_estimated_inner_packs(self):
        """Gets the w7_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w7_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w7_estimated_inner_packs

    @w7_estimated_inner_packs.setter
    def w7_estimated_inner_packs(self, w7_estimated_inner_packs):
        """Sets the w7_estimated_inner_packs of this Item.


        :param w7_estimated_inner_packs: The w7_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w7_estimated_inner_packs = w7_estimated_inner_packs

    @property
    def w7_next_requested_delivery_date(self):
        """Gets the w7_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w7_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w7_next_requested_delivery_date

    @w7_next_requested_delivery_date.setter
    def w7_next_requested_delivery_date(self, w7_next_requested_delivery_date):
        """Sets the w7_next_requested_delivery_date of this Item.


        :param w7_next_requested_delivery_date: The w7_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w7_next_requested_delivery_date = w7_next_requested_delivery_date

    @property
    def warehouse8_id(self):
        """Gets the warehouse8_id of this Item.  # noqa: E501


        :return: The warehouse8_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse8_id

    @warehouse8_id.setter
    def warehouse8_id(self, warehouse8_id):
        """Sets the warehouse8_id of this Item.


        :param warehouse8_id: The warehouse8_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse8_id = warehouse8_id

    @property
    def w8_available_quantity(self):
        """Gets the w8_available_quantity of this Item.  # noqa: E501


        :return: The w8_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_available_quantity

    @w8_available_quantity.setter
    def w8_available_quantity(self, w8_available_quantity):
        """Sets the w8_available_quantity of this Item.


        :param w8_available_quantity: The w8_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_available_quantity = w8_available_quantity

    @property
    def w8_damaged_quantity(self):
        """Gets the w8_damaged_quantity of this Item.  # noqa: E501


        :return: The w8_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_damaged_quantity

    @w8_damaged_quantity.setter
    def w8_damaged_quantity(self, w8_damaged_quantity):
        """Sets the w8_damaged_quantity of this Item.


        :param w8_damaged_quantity: The w8_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_damaged_quantity = w8_damaged_quantity

    @property
    def w8_in_fulfillment_process_quantity(self):
        """Gets the w8_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w8_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_in_fulfillment_process_quantity

    @w8_in_fulfillment_process_quantity.setter
    def w8_in_fulfillment_process_quantity(self, w8_in_fulfillment_process_quantity):
        """Sets the w8_in_fulfillment_process_quantity of this Item.


        :param w8_in_fulfillment_process_quantity: The w8_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_in_fulfillment_process_quantity = w8_in_fulfillment_process_quantity

    @property
    def w8_on_hand_quantity(self):
        """Gets the w8_on_hand_quantity of this Item.  # noqa: E501


        :return: The w8_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_on_hand_quantity

    @w8_on_hand_quantity.setter
    def w8_on_hand_quantity(self, w8_on_hand_quantity):
        """Sets the w8_on_hand_quantity of this Item.


        :param w8_on_hand_quantity: The w8_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_on_hand_quantity = w8_on_hand_quantity

    @property
    def w8_open_order_quantity(self):
        """Gets the w8_open_order_quantity of this Item.  # noqa: E501


        :return: The w8_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_open_order_quantity

    @w8_open_order_quantity.setter
    def w8_open_order_quantity(self, w8_open_order_quantity):
        """Sets the w8_open_order_quantity of this Item.


        :param w8_open_order_quantity: The w8_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_open_order_quantity = w8_open_order_quantity

    @property
    def w8_open_po_quantity(self):
        """Gets the w8_open_po_quantity of this Item.  # noqa: E501


        :return: The w8_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_open_po_quantity

    @w8_open_po_quantity.setter
    def w8_open_po_quantity(self, w8_open_po_quantity):
        """Sets the w8_open_po_quantity of this Item.


        :param w8_open_po_quantity: The w8_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_open_po_quantity = w8_open_po_quantity

    @property
    def w8_orderable_quantity(self):
        """Gets the w8_orderable_quantity of this Item.  # noqa: E501


        :return: The w8_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_orderable_quantity

    @w8_orderable_quantity.setter
    def w8_orderable_quantity(self, w8_orderable_quantity):
        """Sets the w8_orderable_quantity of this Item.


        :param w8_orderable_quantity: The w8_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_orderable_quantity = w8_orderable_quantity

    @property
    def w8_unallocatable_quantity(self):
        """Gets the w8_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w8_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_unallocatable_quantity

    @w8_unallocatable_quantity.setter
    def w8_unallocatable_quantity(self, w8_unallocatable_quantity):
        """Sets the w8_unallocatable_quantity of this Item.


        :param w8_unallocatable_quantity: The w8_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_unallocatable_quantity = w8_unallocatable_quantity

    @property
    def w8_unavailable_quantity(self):
        """Gets the w8_unavailable_quantity of this Item.  # noqa: E501


        :return: The w8_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_unavailable_quantity

    @w8_unavailable_quantity.setter
    def w8_unavailable_quantity(self, w8_unavailable_quantity):
        """Sets the w8_unavailable_quantity of this Item.


        :param w8_unavailable_quantity: The w8_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w8_unavailable_quantity = w8_unavailable_quantity

    @property
    def w8_days_on_hand(self):
        """Gets the w8_days_on_hand of this Item.  # noqa: E501


        :return: The w8_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_days_on_hand

    @w8_days_on_hand.setter
    def w8_days_on_hand(self, w8_days_on_hand):
        """Sets the w8_days_on_hand of this Item.


        :param w8_days_on_hand: The w8_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w8_days_on_hand = w8_days_on_hand

    @property
    def w8_stock_status(self):
        """Gets the w8_stock_status of this Item.  # noqa: E501


        :return: The w8_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w8_stock_status

    @w8_stock_status.setter
    def w8_stock_status(self, w8_stock_status):
        """Sets the w8_stock_status of this Item.


        :param w8_stock_status: The w8_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w8_stock_status = w8_stock_status

    @property
    def w8_estimated_pallets(self):
        """Gets the w8_estimated_pallets of this Item.  # noqa: E501


        :return: The w8_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_estimated_pallets

    @w8_estimated_pallets.setter
    def w8_estimated_pallets(self, w8_estimated_pallets):
        """Sets the w8_estimated_pallets of this Item.


        :param w8_estimated_pallets: The w8_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w8_estimated_pallets = w8_estimated_pallets

    @property
    def w8_estimated_cases(self):
        """Gets the w8_estimated_cases of this Item.  # noqa: E501


        :return: The w8_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_estimated_cases

    @w8_estimated_cases.setter
    def w8_estimated_cases(self, w8_estimated_cases):
        """Sets the w8_estimated_cases of this Item.


        :param w8_estimated_cases: The w8_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w8_estimated_cases = w8_estimated_cases

    @property
    def w8_estimated_inner_packs(self):
        """Gets the w8_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w8_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w8_estimated_inner_packs

    @w8_estimated_inner_packs.setter
    def w8_estimated_inner_packs(self, w8_estimated_inner_packs):
        """Sets the w8_estimated_inner_packs of this Item.


        :param w8_estimated_inner_packs: The w8_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w8_estimated_inner_packs = w8_estimated_inner_packs

    @property
    def w8_next_requested_delivery_date(self):
        """Gets the w8_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w8_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w8_next_requested_delivery_date

    @w8_next_requested_delivery_date.setter
    def w8_next_requested_delivery_date(self, w8_next_requested_delivery_date):
        """Sets the w8_next_requested_delivery_date of this Item.


        :param w8_next_requested_delivery_date: The w8_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w8_next_requested_delivery_date = w8_next_requested_delivery_date

    @property
    def warehouse9_id(self):
        """Gets the warehouse9_id of this Item.  # noqa: E501


        :return: The warehouse9_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse9_id

    @warehouse9_id.setter
    def warehouse9_id(self, warehouse9_id):
        """Sets the warehouse9_id of this Item.


        :param warehouse9_id: The warehouse9_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse9_id = warehouse9_id

    @property
    def w9_available_quantity(self):
        """Gets the w9_available_quantity of this Item.  # noqa: E501


        :return: The w9_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_available_quantity

    @w9_available_quantity.setter
    def w9_available_quantity(self, w9_available_quantity):
        """Sets the w9_available_quantity of this Item.


        :param w9_available_quantity: The w9_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_available_quantity = w9_available_quantity

    @property
    def w9_damaged_quantity(self):
        """Gets the w9_damaged_quantity of this Item.  # noqa: E501


        :return: The w9_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_damaged_quantity

    @w9_damaged_quantity.setter
    def w9_damaged_quantity(self, w9_damaged_quantity):
        """Sets the w9_damaged_quantity of this Item.


        :param w9_damaged_quantity: The w9_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_damaged_quantity = w9_damaged_quantity

    @property
    def w9_in_fulfillment_process_quantity(self):
        """Gets the w9_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w9_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_in_fulfillment_process_quantity

    @w9_in_fulfillment_process_quantity.setter
    def w9_in_fulfillment_process_quantity(self, w9_in_fulfillment_process_quantity):
        """Sets the w9_in_fulfillment_process_quantity of this Item.


        :param w9_in_fulfillment_process_quantity: The w9_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_in_fulfillment_process_quantity = w9_in_fulfillment_process_quantity

    @property
    def w9_on_hand_quantity(self):
        """Gets the w9_on_hand_quantity of this Item.  # noqa: E501


        :return: The w9_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_on_hand_quantity

    @w9_on_hand_quantity.setter
    def w9_on_hand_quantity(self, w9_on_hand_quantity):
        """Sets the w9_on_hand_quantity of this Item.


        :param w9_on_hand_quantity: The w9_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_on_hand_quantity = w9_on_hand_quantity

    @property
    def w9_open_order_quantity(self):
        """Gets the w9_open_order_quantity of this Item.  # noqa: E501


        :return: The w9_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_open_order_quantity

    @w9_open_order_quantity.setter
    def w9_open_order_quantity(self, w9_open_order_quantity):
        """Sets the w9_open_order_quantity of this Item.


        :param w9_open_order_quantity: The w9_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_open_order_quantity = w9_open_order_quantity

    @property
    def w9_open_po_quantity(self):
        """Gets the w9_open_po_quantity of this Item.  # noqa: E501


        :return: The w9_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_open_po_quantity

    @w9_open_po_quantity.setter
    def w9_open_po_quantity(self, w9_open_po_quantity):
        """Sets the w9_open_po_quantity of this Item.


        :param w9_open_po_quantity: The w9_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_open_po_quantity = w9_open_po_quantity

    @property
    def w9_orderable_quantity(self):
        """Gets the w9_orderable_quantity of this Item.  # noqa: E501


        :return: The w9_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_orderable_quantity

    @w9_orderable_quantity.setter
    def w9_orderable_quantity(self, w9_orderable_quantity):
        """Sets the w9_orderable_quantity of this Item.


        :param w9_orderable_quantity: The w9_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_orderable_quantity = w9_orderable_quantity

    @property
    def w9_unallocatable_quantity(self):
        """Gets the w9_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w9_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_unallocatable_quantity

    @w9_unallocatable_quantity.setter
    def w9_unallocatable_quantity(self, w9_unallocatable_quantity):
        """Sets the w9_unallocatable_quantity of this Item.


        :param w9_unallocatable_quantity: The w9_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_unallocatable_quantity = w9_unallocatable_quantity

    @property
    def w9_unavailable_quantity(self):
        """Gets the w9_unavailable_quantity of this Item.  # noqa: E501


        :return: The w9_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_unavailable_quantity

    @w9_unavailable_quantity.setter
    def w9_unavailable_quantity(self, w9_unavailable_quantity):
        """Sets the w9_unavailable_quantity of this Item.


        :param w9_unavailable_quantity: The w9_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w9_unavailable_quantity = w9_unavailable_quantity

    @property
    def w9_days_on_hand(self):
        """Gets the w9_days_on_hand of this Item.  # noqa: E501


        :return: The w9_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_days_on_hand

    @w9_days_on_hand.setter
    def w9_days_on_hand(self, w9_days_on_hand):
        """Sets the w9_days_on_hand of this Item.


        :param w9_days_on_hand: The w9_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w9_days_on_hand = w9_days_on_hand

    @property
    def w9_stock_status(self):
        """Gets the w9_stock_status of this Item.  # noqa: E501


        :return: The w9_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w9_stock_status

    @w9_stock_status.setter
    def w9_stock_status(self, w9_stock_status):
        """Sets the w9_stock_status of this Item.


        :param w9_stock_status: The w9_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w9_stock_status = w9_stock_status

    @property
    def w9_estimated_pallets(self):
        """Gets the w9_estimated_pallets of this Item.  # noqa: E501


        :return: The w9_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_estimated_pallets

    @w9_estimated_pallets.setter
    def w9_estimated_pallets(self, w9_estimated_pallets):
        """Sets the w9_estimated_pallets of this Item.


        :param w9_estimated_pallets: The w9_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w9_estimated_pallets = w9_estimated_pallets

    @property
    def w9_estimated_cases(self):
        """Gets the w9_estimated_cases of this Item.  # noqa: E501


        :return: The w9_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_estimated_cases

    @w9_estimated_cases.setter
    def w9_estimated_cases(self, w9_estimated_cases):
        """Sets the w9_estimated_cases of this Item.


        :param w9_estimated_cases: The w9_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w9_estimated_cases = w9_estimated_cases

    @property
    def w9_estimated_inner_packs(self):
        """Gets the w9_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w9_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w9_estimated_inner_packs

    @w9_estimated_inner_packs.setter
    def w9_estimated_inner_packs(self, w9_estimated_inner_packs):
        """Sets the w9_estimated_inner_packs of this Item.


        :param w9_estimated_inner_packs: The w9_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w9_estimated_inner_packs = w9_estimated_inner_packs

    @property
    def w9_next_requested_delivery_date(self):
        """Gets the w9_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w9_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w9_next_requested_delivery_date

    @w9_next_requested_delivery_date.setter
    def w9_next_requested_delivery_date(self, w9_next_requested_delivery_date):
        """Sets the w9_next_requested_delivery_date of this Item.


        :param w9_next_requested_delivery_date: The w9_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w9_next_requested_delivery_date = w9_next_requested_delivery_date

    @property
    def warehouse10_id(self):
        """Gets the warehouse10_id of this Item.  # noqa: E501


        :return: The warehouse10_id of this Item.  # noqa: E501
        :rtype: int
        """
        return self._warehouse10_id

    @warehouse10_id.setter
    def warehouse10_id(self, warehouse10_id):
        """Sets the warehouse10_id of this Item.


        :param warehouse10_id: The warehouse10_id of this Item.  # noqa: E501
        :type: int
        """

        self._warehouse10_id = warehouse10_id

    @property
    def w10_available_quantity(self):
        """Gets the w10_available_quantity of this Item.  # noqa: E501


        :return: The w10_available_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_available_quantity

    @w10_available_quantity.setter
    def w10_available_quantity(self, w10_available_quantity):
        """Sets the w10_available_quantity of this Item.


        :param w10_available_quantity: The w10_available_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_available_quantity = w10_available_quantity

    @property
    def w10_damaged_quantity(self):
        """Gets the w10_damaged_quantity of this Item.  # noqa: E501


        :return: The w10_damaged_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_damaged_quantity

    @w10_damaged_quantity.setter
    def w10_damaged_quantity(self, w10_damaged_quantity):
        """Sets the w10_damaged_quantity of this Item.


        :param w10_damaged_quantity: The w10_damaged_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_damaged_quantity = w10_damaged_quantity

    @property
    def w10_in_fulfillment_process_quantity(self):
        """Gets the w10_in_fulfillment_process_quantity of this Item.  # noqa: E501


        :return: The w10_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_in_fulfillment_process_quantity

    @w10_in_fulfillment_process_quantity.setter
    def w10_in_fulfillment_process_quantity(self, w10_in_fulfillment_process_quantity):
        """Sets the w10_in_fulfillment_process_quantity of this Item.


        :param w10_in_fulfillment_process_quantity: The w10_in_fulfillment_process_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_in_fulfillment_process_quantity = w10_in_fulfillment_process_quantity

    @property
    def w10_on_hand_quantity(self):
        """Gets the w10_on_hand_quantity of this Item.  # noqa: E501


        :return: The w10_on_hand_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_on_hand_quantity

    @w10_on_hand_quantity.setter
    def w10_on_hand_quantity(self, w10_on_hand_quantity):
        """Sets the w10_on_hand_quantity of this Item.


        :param w10_on_hand_quantity: The w10_on_hand_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_on_hand_quantity = w10_on_hand_quantity

    @property
    def w10_open_order_quantity(self):
        """Gets the w10_open_order_quantity of this Item.  # noqa: E501


        :return: The w10_open_order_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_open_order_quantity

    @w10_open_order_quantity.setter
    def w10_open_order_quantity(self, w10_open_order_quantity):
        """Sets the w10_open_order_quantity of this Item.


        :param w10_open_order_quantity: The w10_open_order_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_open_order_quantity = w10_open_order_quantity

    @property
    def w10_open_po_quantity(self):
        """Gets the w10_open_po_quantity of this Item.  # noqa: E501


        :return: The w10_open_po_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_open_po_quantity

    @w10_open_po_quantity.setter
    def w10_open_po_quantity(self, w10_open_po_quantity):
        """Sets the w10_open_po_quantity of this Item.


        :param w10_open_po_quantity: The w10_open_po_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_open_po_quantity = w10_open_po_quantity

    @property
    def w10_orderable_quantity(self):
        """Gets the w10_orderable_quantity of this Item.  # noqa: E501


        :return: The w10_orderable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_orderable_quantity

    @w10_orderable_quantity.setter
    def w10_orderable_quantity(self, w10_orderable_quantity):
        """Sets the w10_orderable_quantity of this Item.


        :param w10_orderable_quantity: The w10_orderable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_orderable_quantity = w10_orderable_quantity

    @property
    def w10_unallocatable_quantity(self):
        """Gets the w10_unallocatable_quantity of this Item.  # noqa: E501


        :return: The w10_unallocatable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_unallocatable_quantity

    @w10_unallocatable_quantity.setter
    def w10_unallocatable_quantity(self, w10_unallocatable_quantity):
        """Sets the w10_unallocatable_quantity of this Item.


        :param w10_unallocatable_quantity: The w10_unallocatable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_unallocatable_quantity = w10_unallocatable_quantity

    @property
    def w10_unavailable_quantity(self):
        """Gets the w10_unavailable_quantity of this Item.  # noqa: E501


        :return: The w10_unavailable_quantity of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_unavailable_quantity

    @w10_unavailable_quantity.setter
    def w10_unavailable_quantity(self, w10_unavailable_quantity):
        """Sets the w10_unavailable_quantity of this Item.


        :param w10_unavailable_quantity: The w10_unavailable_quantity of this Item.  # noqa: E501
        :type: int
        """

        self._w10_unavailable_quantity = w10_unavailable_quantity

    @property
    def w10_days_on_hand(self):
        """Gets the w10_days_on_hand of this Item.  # noqa: E501


        :return: The w10_days_on_hand of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_days_on_hand

    @w10_days_on_hand.setter
    def w10_days_on_hand(self, w10_days_on_hand):
        """Sets the w10_days_on_hand of this Item.


        :param w10_days_on_hand: The w10_days_on_hand of this Item.  # noqa: E501
        :type: int
        """

        self._w10_days_on_hand = w10_days_on_hand

    @property
    def w10_stock_status(self):
        """Gets the w10_stock_status of this Item.  # noqa: E501


        :return: The w10_stock_status of this Item.  # noqa: E501
        :rtype: str
        """
        return self._w10_stock_status

    @w10_stock_status.setter
    def w10_stock_status(self, w10_stock_status):
        """Sets the w10_stock_status of this Item.


        :param w10_stock_status: The w10_stock_status of this Item.  # noqa: E501
        :type: str
        """

        self._w10_stock_status = w10_stock_status

    @property
    def w10_estimated_pallets(self):
        """Gets the w10_estimated_pallets of this Item.  # noqa: E501


        :return: The w10_estimated_pallets of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_estimated_pallets

    @w10_estimated_pallets.setter
    def w10_estimated_pallets(self, w10_estimated_pallets):
        """Sets the w10_estimated_pallets of this Item.


        :param w10_estimated_pallets: The w10_estimated_pallets of this Item.  # noqa: E501
        :type: int
        """

        self._w10_estimated_pallets = w10_estimated_pallets

    @property
    def w10_estimated_cases(self):
        """Gets the w10_estimated_cases of this Item.  # noqa: E501


        :return: The w10_estimated_cases of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_estimated_cases

    @w10_estimated_cases.setter
    def w10_estimated_cases(self, w10_estimated_cases):
        """Sets the w10_estimated_cases of this Item.


        :param w10_estimated_cases: The w10_estimated_cases of this Item.  # noqa: E501
        :type: int
        """

        self._w10_estimated_cases = w10_estimated_cases

    @property
    def w10_estimated_inner_packs(self):
        """Gets the w10_estimated_inner_packs of this Item.  # noqa: E501


        :return: The w10_estimated_inner_packs of this Item.  # noqa: E501
        :rtype: int
        """
        return self._w10_estimated_inner_packs

    @w10_estimated_inner_packs.setter
    def w10_estimated_inner_packs(self, w10_estimated_inner_packs):
        """Sets the w10_estimated_inner_packs of this Item.


        :param w10_estimated_inner_packs: The w10_estimated_inner_packs of this Item.  # noqa: E501
        :type: int
        """

        self._w10_estimated_inner_packs = w10_estimated_inner_packs

    @property
    def w10_next_requested_delivery_date(self):
        """Gets the w10_next_requested_delivery_date of this Item.  # noqa: E501


        :return: The w10_next_requested_delivery_date of this Item.  # noqa: E501
        :rtype: datetime
        """
        return self._w10_next_requested_delivery_date

    @w10_next_requested_delivery_date.setter
    def w10_next_requested_delivery_date(self, w10_next_requested_delivery_date):
        """Sets the w10_next_requested_delivery_date of this Item.


        :param w10_next_requested_delivery_date: The w10_next_requested_delivery_date of this Item.  # noqa: E501
        :type: datetime
        """

        self._w10_next_requested_delivery_date = w10_next_requested_delivery_date

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Item.  # noqa: E501


        :return: The custom_fields of this Item.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Item.


        :param custom_fields: The custom_fields of this Item.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Item):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
