# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class BillingCodeType(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        BillingCodeType - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'client_id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'name': 'str',
            'description': 'str',
            'billing_code': 'str',
            'is_active': 'bool',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'client_id': 'clientId',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'name': 'name',
            'description': 'description',
            'billing_code': 'billingCode',
            'is_active': 'isActive',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._client_id = None
        self._create_date = None
        self._modify_date = None
        self._name = None
        self._description = None
        self._billing_code = None
        self._is_active = False
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this BillingCodeType.


        :return: The id of this BillingCodeType.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this BillingCodeType.


        :param id: The id of this BillingCodeType.
        :type: int
        """
        self._id = id

    @property
    def client_id(self):
        """
        Gets the client_id of this BillingCodeType.


        :return: The client_id of this BillingCodeType.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """
        Sets the client_id of this BillingCodeType.


        :param client_id: The client_id of this BillingCodeType.
        :type: int
        """
        self._client_id = client_id

    @property
    def create_date(self):
        """
        Gets the create_date of this BillingCodeType.


        :return: The create_date of this BillingCodeType.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this BillingCodeType.


        :param create_date: The create_date of this BillingCodeType.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this BillingCodeType.


        :return: The modify_date of this BillingCodeType.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this BillingCodeType.


        :param modify_date: The modify_date of this BillingCodeType.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def name(self):
        """
        Gets the name of this BillingCodeType.


        :return: The name of this BillingCodeType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this BillingCodeType.


        :param name: The name of this BillingCodeType.
        :type: str
        """
        self._name = name

    @property
    def description(self):
        """
        Gets the description of this BillingCodeType.


        :return: The description of this BillingCodeType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this BillingCodeType.


        :param description: The description of this BillingCodeType.
        :type: str
        """
        self._description = description

    @property
    def billing_code(self):
        """
        Gets the billing_code of this BillingCodeType.


        :return: The billing_code of this BillingCodeType.
        :rtype: str
        """
        return self._billing_code

    @billing_code.setter
    def billing_code(self, billing_code):
        """
        Sets the billing_code of this BillingCodeType.


        :param billing_code: The billing_code of this BillingCodeType.
        :type: str
        """
        self._billing_code = billing_code

    @property
    def is_active(self):
        """
        Gets the is_active of this BillingCodeType.


        :return: The is_active of this BillingCodeType.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """
        Sets the is_active of this BillingCodeType.


        :param is_active: The is_active of this BillingCodeType.
        :type: bool
        """
        self._is_active = is_active

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this BillingCodeType.


        :return: The custom_fields of this BillingCodeType.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this BillingCodeType.


        :param custom_fields: The custom_fields of this BillingCodeType.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

