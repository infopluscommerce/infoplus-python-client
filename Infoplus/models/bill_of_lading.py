# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from Infoplus.models.bill_of_lading_carrier_info_line import BillOfLadingCarrierInfoLine  # noqa: F401,E501
from Infoplus.models.bill_of_lading_order_info_line import BillOfLadingOrderInfoLine  # noqa: F401,E501


class BillOfLading(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'lob_id': 'int',
        'order_no': 'float',
        'bol_no': 'str',
        'bol_date': 'datetime',
        'ship_from_name': 'str',
        'ship_from_attention': 'str',
        'ship_from_address': 'str',
        'ship_from_city': 'str',
        'ship_from_state': 'str',
        'ship_from_zip': 'str',
        'ship_from_country': 'str',
        'sid': 'str',
        'is_ship_from_fob': 'bool',
        'ship_to_name': 'str',
        'ship_to_attention': 'str',
        'ship_to_address': 'str',
        'ship_to_city': 'str',
        'ship_to_state': 'str',
        'ship_to_zip': 'str',
        'ship_to_country': 'str',
        'ship_to_location_no': 'str',
        'cid': 'str',
        'is_ship_to_fob': 'bool',
        'bill_to_name': 'str',
        'bill_to_attention': 'str',
        'bill_to_address': 'str',
        'bill_to_city': 'str',
        'bill_to_state': 'str',
        'bill_to_zip': 'str',
        'bill_to_country': 'str',
        'is_trailer_loaded_by_shipper': 'bool',
        'by_driver': 'bool',
        'cod_amount': 'float',
        'fee_terms_collect': 'bool',
        'fee_terms_prepaid': 'bool',
        'customer_check_acceptable': 'bool',
        'carrier_name': 'str',
        'trailer_no': 'str',
        'seal_no': 'str',
        'scac': 'str',
        'pro_no': 'str',
        'prepaid': 'bool',
        'collect': 'bool',
        'third_party': 'bool',
        'is_this_a_master_bol': 'bool',
        'master_bol_id': 'int',
        'is_freight_counted_by_shipper': 'bool',
        'by_driver_pallets': 'bool',
        'by_driver_pieces': 'bool',
        'special_instructions': 'str',
        'order_info_lines': 'list[BillOfLadingOrderInfoLine]',
        'carrier_info_lines': 'list[BillOfLadingCarrierInfoLine]',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'lob_id': 'lobId',
        'order_no': 'orderNo',
        'bol_no': 'bolNo',
        'bol_date': 'bolDate',
        'ship_from_name': 'shipFromName',
        'ship_from_attention': 'shipFromAttention',
        'ship_from_address': 'shipFromAddress',
        'ship_from_city': 'shipFromCity',
        'ship_from_state': 'shipFromState',
        'ship_from_zip': 'shipFromZip',
        'ship_from_country': 'shipFromCountry',
        'sid': 'sid',
        'is_ship_from_fob': 'isShipFromFOB',
        'ship_to_name': 'shipToName',
        'ship_to_attention': 'shipToAttention',
        'ship_to_address': 'shipToAddress',
        'ship_to_city': 'shipToCity',
        'ship_to_state': 'shipToState',
        'ship_to_zip': 'shipToZip',
        'ship_to_country': 'shipToCountry',
        'ship_to_location_no': 'shipToLocationNo',
        'cid': 'cid',
        'is_ship_to_fob': 'isShipToFOB',
        'bill_to_name': 'billToName',
        'bill_to_attention': 'billToAttention',
        'bill_to_address': 'billToAddress',
        'bill_to_city': 'billToCity',
        'bill_to_state': 'billToState',
        'bill_to_zip': 'billToZip',
        'bill_to_country': 'billToCountry',
        'is_trailer_loaded_by_shipper': 'isTrailerLoadedByShipper',
        'by_driver': 'byDriver',
        'cod_amount': 'codAmount',
        'fee_terms_collect': 'feeTermsCollect',
        'fee_terms_prepaid': 'feeTermsPrepaid',
        'customer_check_acceptable': 'customerCheckAcceptable',
        'carrier_name': 'carrierName',
        'trailer_no': 'trailerNo',
        'seal_no': 'sealNo',
        'scac': 'scac',
        'pro_no': 'proNo',
        'prepaid': 'prepaid',
        'collect': 'collect',
        'third_party': 'thirdParty',
        'is_this_a_master_bol': 'isThisAMasterBOL',
        'master_bol_id': 'masterBOLId',
        'is_freight_counted_by_shipper': 'isFreightCountedByShipper',
        'by_driver_pallets': 'byDriverPallets',
        'by_driver_pieces': 'byDriverPieces',
        'special_instructions': 'specialInstructions',
        'order_info_lines': 'orderInfoLines',
        'carrier_info_lines': 'carrierInfoLines',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, create_date=None, modify_date=None, lob_id=None, order_no=None, bol_no=None, bol_date=None, ship_from_name=None, ship_from_attention=None, ship_from_address=None, ship_from_city=None, ship_from_state=None, ship_from_zip=None, ship_from_country=None, sid=None, is_ship_from_fob=False, ship_to_name=None, ship_to_attention=None, ship_to_address=None, ship_to_city=None, ship_to_state=None, ship_to_zip=None, ship_to_country=None, ship_to_location_no=None, cid=None, is_ship_to_fob=False, bill_to_name=None, bill_to_attention=None, bill_to_address=None, bill_to_city=None, bill_to_state=None, bill_to_zip=None, bill_to_country=None, is_trailer_loaded_by_shipper=False, by_driver=False, cod_amount=None, fee_terms_collect=False, fee_terms_prepaid=False, customer_check_acceptable=False, carrier_name=None, trailer_no=None, seal_no=None, scac=None, pro_no=None, prepaid=False, collect=False, third_party=False, is_this_a_master_bol=False, master_bol_id=None, is_freight_counted_by_shipper=False, by_driver_pallets=False, by_driver_pieces=False, special_instructions=None, order_info_lines=None, carrier_info_lines=None, custom_fields=None):  # noqa: E501
        """BillOfLading - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._lob_id = None
        self._order_no = None
        self._bol_no = None
        self._bol_date = None
        self._ship_from_name = None
        self._ship_from_attention = None
        self._ship_from_address = None
        self._ship_from_city = None
        self._ship_from_state = None
        self._ship_from_zip = None
        self._ship_from_country = None
        self._sid = None
        self._is_ship_from_fob = None
        self._ship_to_name = None
        self._ship_to_attention = None
        self._ship_to_address = None
        self._ship_to_city = None
        self._ship_to_state = None
        self._ship_to_zip = None
        self._ship_to_country = None
        self._ship_to_location_no = None
        self._cid = None
        self._is_ship_to_fob = None
        self._bill_to_name = None
        self._bill_to_attention = None
        self._bill_to_address = None
        self._bill_to_city = None
        self._bill_to_state = None
        self._bill_to_zip = None
        self._bill_to_country = None
        self._is_trailer_loaded_by_shipper = None
        self._by_driver = None
        self._cod_amount = None
        self._fee_terms_collect = None
        self._fee_terms_prepaid = None
        self._customer_check_acceptable = None
        self._carrier_name = None
        self._trailer_no = None
        self._seal_no = None
        self._scac = None
        self._pro_no = None
        self._prepaid = None
        self._collect = None
        self._third_party = None
        self._is_this_a_master_bol = None
        self._master_bol_id = None
        self._is_freight_counted_by_shipper = None
        self._by_driver_pallets = None
        self._by_driver_pieces = None
        self._special_instructions = None
        self._order_info_lines = None
        self._carrier_info_lines = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        self.lob_id = lob_id
        if order_no is not None:
            self.order_no = order_no
        self.bol_no = bol_no
        if bol_date is not None:
            self.bol_date = bol_date
        if ship_from_name is not None:
            self.ship_from_name = ship_from_name
        if ship_from_attention is not None:
            self.ship_from_attention = ship_from_attention
        if ship_from_address is not None:
            self.ship_from_address = ship_from_address
        if ship_from_city is not None:
            self.ship_from_city = ship_from_city
        if ship_from_state is not None:
            self.ship_from_state = ship_from_state
        if ship_from_zip is not None:
            self.ship_from_zip = ship_from_zip
        if ship_from_country is not None:
            self.ship_from_country = ship_from_country
        if sid is not None:
            self.sid = sid
        if is_ship_from_fob is not None:
            self.is_ship_from_fob = is_ship_from_fob
        if ship_to_name is not None:
            self.ship_to_name = ship_to_name
        if ship_to_attention is not None:
            self.ship_to_attention = ship_to_attention
        if ship_to_address is not None:
            self.ship_to_address = ship_to_address
        if ship_to_city is not None:
            self.ship_to_city = ship_to_city
        if ship_to_state is not None:
            self.ship_to_state = ship_to_state
        if ship_to_zip is not None:
            self.ship_to_zip = ship_to_zip
        if ship_to_country is not None:
            self.ship_to_country = ship_to_country
        if ship_to_location_no is not None:
            self.ship_to_location_no = ship_to_location_no
        if cid is not None:
            self.cid = cid
        if is_ship_to_fob is not None:
            self.is_ship_to_fob = is_ship_to_fob
        if bill_to_name is not None:
            self.bill_to_name = bill_to_name
        if bill_to_attention is not None:
            self.bill_to_attention = bill_to_attention
        if bill_to_address is not None:
            self.bill_to_address = bill_to_address
        if bill_to_city is not None:
            self.bill_to_city = bill_to_city
        if bill_to_state is not None:
            self.bill_to_state = bill_to_state
        if bill_to_zip is not None:
            self.bill_to_zip = bill_to_zip
        if bill_to_country is not None:
            self.bill_to_country = bill_to_country
        if is_trailer_loaded_by_shipper is not None:
            self.is_trailer_loaded_by_shipper = is_trailer_loaded_by_shipper
        if by_driver is not None:
            self.by_driver = by_driver
        if cod_amount is not None:
            self.cod_amount = cod_amount
        if fee_terms_collect is not None:
            self.fee_terms_collect = fee_terms_collect
        if fee_terms_prepaid is not None:
            self.fee_terms_prepaid = fee_terms_prepaid
        if customer_check_acceptable is not None:
            self.customer_check_acceptable = customer_check_acceptable
        if carrier_name is not None:
            self.carrier_name = carrier_name
        if trailer_no is not None:
            self.trailer_no = trailer_no
        if seal_no is not None:
            self.seal_no = seal_no
        if scac is not None:
            self.scac = scac
        if pro_no is not None:
            self.pro_no = pro_no
        if prepaid is not None:
            self.prepaid = prepaid
        if collect is not None:
            self.collect = collect
        if third_party is not None:
            self.third_party = third_party
        if is_this_a_master_bol is not None:
            self.is_this_a_master_bol = is_this_a_master_bol
        if master_bol_id is not None:
            self.master_bol_id = master_bol_id
        if is_freight_counted_by_shipper is not None:
            self.is_freight_counted_by_shipper = is_freight_counted_by_shipper
        if by_driver_pallets is not None:
            self.by_driver_pallets = by_driver_pallets
        if by_driver_pieces is not None:
            self.by_driver_pieces = by_driver_pieces
        if special_instructions is not None:
            self.special_instructions = special_instructions
        if order_info_lines is not None:
            self.order_info_lines = order_info_lines
        if carrier_info_lines is not None:
            self.carrier_info_lines = carrier_info_lines
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this BillOfLading.  # noqa: E501


        :return: The id of this BillOfLading.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BillOfLading.


        :param id: The id of this BillOfLading.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def create_date(self):
        """Gets the create_date of this BillOfLading.  # noqa: E501


        :return: The create_date of this BillOfLading.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this BillOfLading.


        :param create_date: The create_date of this BillOfLading.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this BillOfLading.  # noqa: E501


        :return: The modify_date of this BillOfLading.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this BillOfLading.


        :param modify_date: The modify_date of this BillOfLading.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def lob_id(self):
        """Gets the lob_id of this BillOfLading.  # noqa: E501


        :return: The lob_id of this BillOfLading.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this BillOfLading.


        :param lob_id: The lob_id of this BillOfLading.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def order_no(self):
        """Gets the order_no of this BillOfLading.  # noqa: E501


        :return: The order_no of this BillOfLading.  # noqa: E501
        :rtype: float
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """Sets the order_no of this BillOfLading.


        :param order_no: The order_no of this BillOfLading.  # noqa: E501
        :type: float
        """

        self._order_no = order_no

    @property
    def bol_no(self):
        """Gets the bol_no of this BillOfLading.  # noqa: E501


        :return: The bol_no of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bol_no

    @bol_no.setter
    def bol_no(self, bol_no):
        """Sets the bol_no of this BillOfLading.


        :param bol_no: The bol_no of this BillOfLading.  # noqa: E501
        :type: str
        """
        if bol_no is None:
            raise ValueError("Invalid value for `bol_no`, must not be `None`")  # noqa: E501

        self._bol_no = bol_no

    @property
    def bol_date(self):
        """Gets the bol_date of this BillOfLading.  # noqa: E501


        :return: The bol_date of this BillOfLading.  # noqa: E501
        :rtype: datetime
        """
        return self._bol_date

    @bol_date.setter
    def bol_date(self, bol_date):
        """Sets the bol_date of this BillOfLading.


        :param bol_date: The bol_date of this BillOfLading.  # noqa: E501
        :type: datetime
        """

        self._bol_date = bol_date

    @property
    def ship_from_name(self):
        """Gets the ship_from_name of this BillOfLading.  # noqa: E501


        :return: The ship_from_name of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_name

    @ship_from_name.setter
    def ship_from_name(self, ship_from_name):
        """Sets the ship_from_name of this BillOfLading.


        :param ship_from_name: The ship_from_name of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_name = ship_from_name

    @property
    def ship_from_attention(self):
        """Gets the ship_from_attention of this BillOfLading.  # noqa: E501


        :return: The ship_from_attention of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_attention

    @ship_from_attention.setter
    def ship_from_attention(self, ship_from_attention):
        """Sets the ship_from_attention of this BillOfLading.


        :param ship_from_attention: The ship_from_attention of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_attention = ship_from_attention

    @property
    def ship_from_address(self):
        """Gets the ship_from_address of this BillOfLading.  # noqa: E501


        :return: The ship_from_address of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_address

    @ship_from_address.setter
    def ship_from_address(self, ship_from_address):
        """Sets the ship_from_address of this BillOfLading.


        :param ship_from_address: The ship_from_address of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_address = ship_from_address

    @property
    def ship_from_city(self):
        """Gets the ship_from_city of this BillOfLading.  # noqa: E501


        :return: The ship_from_city of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_city

    @ship_from_city.setter
    def ship_from_city(self, ship_from_city):
        """Sets the ship_from_city of this BillOfLading.


        :param ship_from_city: The ship_from_city of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_city = ship_from_city

    @property
    def ship_from_state(self):
        """Gets the ship_from_state of this BillOfLading.  # noqa: E501


        :return: The ship_from_state of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_state

    @ship_from_state.setter
    def ship_from_state(self, ship_from_state):
        """Sets the ship_from_state of this BillOfLading.


        :param ship_from_state: The ship_from_state of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_state = ship_from_state

    @property
    def ship_from_zip(self):
        """Gets the ship_from_zip of this BillOfLading.  # noqa: E501


        :return: The ship_from_zip of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_zip

    @ship_from_zip.setter
    def ship_from_zip(self, ship_from_zip):
        """Sets the ship_from_zip of this BillOfLading.


        :param ship_from_zip: The ship_from_zip of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_zip = ship_from_zip

    @property
    def ship_from_country(self):
        """Gets the ship_from_country of this BillOfLading.  # noqa: E501


        :return: The ship_from_country of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_country

    @ship_from_country.setter
    def ship_from_country(self, ship_from_country):
        """Sets the ship_from_country of this BillOfLading.


        :param ship_from_country: The ship_from_country of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_from_country = ship_from_country

    @property
    def sid(self):
        """Gets the sid of this BillOfLading.  # noqa: E501


        :return: The sid of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this BillOfLading.


        :param sid: The sid of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._sid = sid

    @property
    def is_ship_from_fob(self):
        """Gets the is_ship_from_fob of this BillOfLading.  # noqa: E501


        :return: The is_ship_from_fob of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._is_ship_from_fob

    @is_ship_from_fob.setter
    def is_ship_from_fob(self, is_ship_from_fob):
        """Sets the is_ship_from_fob of this BillOfLading.


        :param is_ship_from_fob: The is_ship_from_fob of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._is_ship_from_fob = is_ship_from_fob

    @property
    def ship_to_name(self):
        """Gets the ship_to_name of this BillOfLading.  # noqa: E501


        :return: The ship_to_name of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_name

    @ship_to_name.setter
    def ship_to_name(self, ship_to_name):
        """Sets the ship_to_name of this BillOfLading.


        :param ship_to_name: The ship_to_name of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_name = ship_to_name

    @property
    def ship_to_attention(self):
        """Gets the ship_to_attention of this BillOfLading.  # noqa: E501


        :return: The ship_to_attention of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_attention

    @ship_to_attention.setter
    def ship_to_attention(self, ship_to_attention):
        """Sets the ship_to_attention of this BillOfLading.


        :param ship_to_attention: The ship_to_attention of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_attention = ship_to_attention

    @property
    def ship_to_address(self):
        """Gets the ship_to_address of this BillOfLading.  # noqa: E501


        :return: The ship_to_address of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_address

    @ship_to_address.setter
    def ship_to_address(self, ship_to_address):
        """Sets the ship_to_address of this BillOfLading.


        :param ship_to_address: The ship_to_address of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_address = ship_to_address

    @property
    def ship_to_city(self):
        """Gets the ship_to_city of this BillOfLading.  # noqa: E501


        :return: The ship_to_city of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_city

    @ship_to_city.setter
    def ship_to_city(self, ship_to_city):
        """Sets the ship_to_city of this BillOfLading.


        :param ship_to_city: The ship_to_city of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_city = ship_to_city

    @property
    def ship_to_state(self):
        """Gets the ship_to_state of this BillOfLading.  # noqa: E501


        :return: The ship_to_state of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_state

    @ship_to_state.setter
    def ship_to_state(self, ship_to_state):
        """Sets the ship_to_state of this BillOfLading.


        :param ship_to_state: The ship_to_state of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_state = ship_to_state

    @property
    def ship_to_zip(self):
        """Gets the ship_to_zip of this BillOfLading.  # noqa: E501


        :return: The ship_to_zip of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_zip

    @ship_to_zip.setter
    def ship_to_zip(self, ship_to_zip):
        """Sets the ship_to_zip of this BillOfLading.


        :param ship_to_zip: The ship_to_zip of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_zip = ship_to_zip

    @property
    def ship_to_country(self):
        """Gets the ship_to_country of this BillOfLading.  # noqa: E501


        :return: The ship_to_country of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_country

    @ship_to_country.setter
    def ship_to_country(self, ship_to_country):
        """Sets the ship_to_country of this BillOfLading.


        :param ship_to_country: The ship_to_country of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_country = ship_to_country

    @property
    def ship_to_location_no(self):
        """Gets the ship_to_location_no of this BillOfLading.  # noqa: E501


        :return: The ship_to_location_no of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_location_no

    @ship_to_location_no.setter
    def ship_to_location_no(self, ship_to_location_no):
        """Sets the ship_to_location_no of this BillOfLading.


        :param ship_to_location_no: The ship_to_location_no of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._ship_to_location_no = ship_to_location_no

    @property
    def cid(self):
        """Gets the cid of this BillOfLading.  # noqa: E501


        :return: The cid of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid):
        """Sets the cid of this BillOfLading.


        :param cid: The cid of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._cid = cid

    @property
    def is_ship_to_fob(self):
        """Gets the is_ship_to_fob of this BillOfLading.  # noqa: E501


        :return: The is_ship_to_fob of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._is_ship_to_fob

    @is_ship_to_fob.setter
    def is_ship_to_fob(self, is_ship_to_fob):
        """Sets the is_ship_to_fob of this BillOfLading.


        :param is_ship_to_fob: The is_ship_to_fob of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._is_ship_to_fob = is_ship_to_fob

    @property
    def bill_to_name(self):
        """Gets the bill_to_name of this BillOfLading.  # noqa: E501


        :return: The bill_to_name of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_name

    @bill_to_name.setter
    def bill_to_name(self, bill_to_name):
        """Sets the bill_to_name of this BillOfLading.


        :param bill_to_name: The bill_to_name of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_name = bill_to_name

    @property
    def bill_to_attention(self):
        """Gets the bill_to_attention of this BillOfLading.  # noqa: E501


        :return: The bill_to_attention of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_attention

    @bill_to_attention.setter
    def bill_to_attention(self, bill_to_attention):
        """Sets the bill_to_attention of this BillOfLading.


        :param bill_to_attention: The bill_to_attention of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_attention = bill_to_attention

    @property
    def bill_to_address(self):
        """Gets the bill_to_address of this BillOfLading.  # noqa: E501


        :return: The bill_to_address of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_address

    @bill_to_address.setter
    def bill_to_address(self, bill_to_address):
        """Sets the bill_to_address of this BillOfLading.


        :param bill_to_address: The bill_to_address of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_address = bill_to_address

    @property
    def bill_to_city(self):
        """Gets the bill_to_city of this BillOfLading.  # noqa: E501


        :return: The bill_to_city of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_city

    @bill_to_city.setter
    def bill_to_city(self, bill_to_city):
        """Sets the bill_to_city of this BillOfLading.


        :param bill_to_city: The bill_to_city of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_city = bill_to_city

    @property
    def bill_to_state(self):
        """Gets the bill_to_state of this BillOfLading.  # noqa: E501


        :return: The bill_to_state of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_state

    @bill_to_state.setter
    def bill_to_state(self, bill_to_state):
        """Sets the bill_to_state of this BillOfLading.


        :param bill_to_state: The bill_to_state of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_state = bill_to_state

    @property
    def bill_to_zip(self):
        """Gets the bill_to_zip of this BillOfLading.  # noqa: E501


        :return: The bill_to_zip of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_zip

    @bill_to_zip.setter
    def bill_to_zip(self, bill_to_zip):
        """Sets the bill_to_zip of this BillOfLading.


        :param bill_to_zip: The bill_to_zip of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_zip = bill_to_zip

    @property
    def bill_to_country(self):
        """Gets the bill_to_country of this BillOfLading.  # noqa: E501


        :return: The bill_to_country of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_country

    @bill_to_country.setter
    def bill_to_country(self, bill_to_country):
        """Sets the bill_to_country of this BillOfLading.


        :param bill_to_country: The bill_to_country of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._bill_to_country = bill_to_country

    @property
    def is_trailer_loaded_by_shipper(self):
        """Gets the is_trailer_loaded_by_shipper of this BillOfLading.  # noqa: E501


        :return: The is_trailer_loaded_by_shipper of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._is_trailer_loaded_by_shipper

    @is_trailer_loaded_by_shipper.setter
    def is_trailer_loaded_by_shipper(self, is_trailer_loaded_by_shipper):
        """Sets the is_trailer_loaded_by_shipper of this BillOfLading.


        :param is_trailer_loaded_by_shipper: The is_trailer_loaded_by_shipper of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._is_trailer_loaded_by_shipper = is_trailer_loaded_by_shipper

    @property
    def by_driver(self):
        """Gets the by_driver of this BillOfLading.  # noqa: E501


        :return: The by_driver of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._by_driver

    @by_driver.setter
    def by_driver(self, by_driver):
        """Sets the by_driver of this BillOfLading.


        :param by_driver: The by_driver of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._by_driver = by_driver

    @property
    def cod_amount(self):
        """Gets the cod_amount of this BillOfLading.  # noqa: E501


        :return: The cod_amount of this BillOfLading.  # noqa: E501
        :rtype: float
        """
        return self._cod_amount

    @cod_amount.setter
    def cod_amount(self, cod_amount):
        """Sets the cod_amount of this BillOfLading.


        :param cod_amount: The cod_amount of this BillOfLading.  # noqa: E501
        :type: float
        """

        self._cod_amount = cod_amount

    @property
    def fee_terms_collect(self):
        """Gets the fee_terms_collect of this BillOfLading.  # noqa: E501


        :return: The fee_terms_collect of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._fee_terms_collect

    @fee_terms_collect.setter
    def fee_terms_collect(self, fee_terms_collect):
        """Sets the fee_terms_collect of this BillOfLading.


        :param fee_terms_collect: The fee_terms_collect of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._fee_terms_collect = fee_terms_collect

    @property
    def fee_terms_prepaid(self):
        """Gets the fee_terms_prepaid of this BillOfLading.  # noqa: E501


        :return: The fee_terms_prepaid of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._fee_terms_prepaid

    @fee_terms_prepaid.setter
    def fee_terms_prepaid(self, fee_terms_prepaid):
        """Sets the fee_terms_prepaid of this BillOfLading.


        :param fee_terms_prepaid: The fee_terms_prepaid of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._fee_terms_prepaid = fee_terms_prepaid

    @property
    def customer_check_acceptable(self):
        """Gets the customer_check_acceptable of this BillOfLading.  # noqa: E501


        :return: The customer_check_acceptable of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._customer_check_acceptable

    @customer_check_acceptable.setter
    def customer_check_acceptable(self, customer_check_acceptable):
        """Sets the customer_check_acceptable of this BillOfLading.


        :param customer_check_acceptable: The customer_check_acceptable of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._customer_check_acceptable = customer_check_acceptable

    @property
    def carrier_name(self):
        """Gets the carrier_name of this BillOfLading.  # noqa: E501


        :return: The carrier_name of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._carrier_name

    @carrier_name.setter
    def carrier_name(self, carrier_name):
        """Sets the carrier_name of this BillOfLading.


        :param carrier_name: The carrier_name of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._carrier_name = carrier_name

    @property
    def trailer_no(self):
        """Gets the trailer_no of this BillOfLading.  # noqa: E501


        :return: The trailer_no of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._trailer_no

    @trailer_no.setter
    def trailer_no(self, trailer_no):
        """Sets the trailer_no of this BillOfLading.


        :param trailer_no: The trailer_no of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._trailer_no = trailer_no

    @property
    def seal_no(self):
        """Gets the seal_no of this BillOfLading.  # noqa: E501


        :return: The seal_no of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._seal_no

    @seal_no.setter
    def seal_no(self, seal_no):
        """Sets the seal_no of this BillOfLading.


        :param seal_no: The seal_no of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._seal_no = seal_no

    @property
    def scac(self):
        """Gets the scac of this BillOfLading.  # noqa: E501


        :return: The scac of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._scac

    @scac.setter
    def scac(self, scac):
        """Sets the scac of this BillOfLading.


        :param scac: The scac of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._scac = scac

    @property
    def pro_no(self):
        """Gets the pro_no of this BillOfLading.  # noqa: E501


        :return: The pro_no of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._pro_no

    @pro_no.setter
    def pro_no(self, pro_no):
        """Sets the pro_no of this BillOfLading.


        :param pro_no: The pro_no of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._pro_no = pro_no

    @property
    def prepaid(self):
        """Gets the prepaid of this BillOfLading.  # noqa: E501


        :return: The prepaid of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._prepaid

    @prepaid.setter
    def prepaid(self, prepaid):
        """Sets the prepaid of this BillOfLading.


        :param prepaid: The prepaid of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._prepaid = prepaid

    @property
    def collect(self):
        """Gets the collect of this BillOfLading.  # noqa: E501


        :return: The collect of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._collect

    @collect.setter
    def collect(self, collect):
        """Sets the collect of this BillOfLading.


        :param collect: The collect of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._collect = collect

    @property
    def third_party(self):
        """Gets the third_party of this BillOfLading.  # noqa: E501


        :return: The third_party of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._third_party

    @third_party.setter
    def third_party(self, third_party):
        """Sets the third_party of this BillOfLading.


        :param third_party: The third_party of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._third_party = third_party

    @property
    def is_this_a_master_bol(self):
        """Gets the is_this_a_master_bol of this BillOfLading.  # noqa: E501


        :return: The is_this_a_master_bol of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._is_this_a_master_bol

    @is_this_a_master_bol.setter
    def is_this_a_master_bol(self, is_this_a_master_bol):
        """Sets the is_this_a_master_bol of this BillOfLading.


        :param is_this_a_master_bol: The is_this_a_master_bol of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._is_this_a_master_bol = is_this_a_master_bol

    @property
    def master_bol_id(self):
        """Gets the master_bol_id of this BillOfLading.  # noqa: E501


        :return: The master_bol_id of this BillOfLading.  # noqa: E501
        :rtype: int
        """
        return self._master_bol_id

    @master_bol_id.setter
    def master_bol_id(self, master_bol_id):
        """Sets the master_bol_id of this BillOfLading.


        :param master_bol_id: The master_bol_id of this BillOfLading.  # noqa: E501
        :type: int
        """

        self._master_bol_id = master_bol_id

    @property
    def is_freight_counted_by_shipper(self):
        """Gets the is_freight_counted_by_shipper of this BillOfLading.  # noqa: E501


        :return: The is_freight_counted_by_shipper of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._is_freight_counted_by_shipper

    @is_freight_counted_by_shipper.setter
    def is_freight_counted_by_shipper(self, is_freight_counted_by_shipper):
        """Sets the is_freight_counted_by_shipper of this BillOfLading.


        :param is_freight_counted_by_shipper: The is_freight_counted_by_shipper of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._is_freight_counted_by_shipper = is_freight_counted_by_shipper

    @property
    def by_driver_pallets(self):
        """Gets the by_driver_pallets of this BillOfLading.  # noqa: E501


        :return: The by_driver_pallets of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._by_driver_pallets

    @by_driver_pallets.setter
    def by_driver_pallets(self, by_driver_pallets):
        """Sets the by_driver_pallets of this BillOfLading.


        :param by_driver_pallets: The by_driver_pallets of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._by_driver_pallets = by_driver_pallets

    @property
    def by_driver_pieces(self):
        """Gets the by_driver_pieces of this BillOfLading.  # noqa: E501


        :return: The by_driver_pieces of this BillOfLading.  # noqa: E501
        :rtype: bool
        """
        return self._by_driver_pieces

    @by_driver_pieces.setter
    def by_driver_pieces(self, by_driver_pieces):
        """Sets the by_driver_pieces of this BillOfLading.


        :param by_driver_pieces: The by_driver_pieces of this BillOfLading.  # noqa: E501
        :type: bool
        """

        self._by_driver_pieces = by_driver_pieces

    @property
    def special_instructions(self):
        """Gets the special_instructions of this BillOfLading.  # noqa: E501


        :return: The special_instructions of this BillOfLading.  # noqa: E501
        :rtype: str
        """
        return self._special_instructions

    @special_instructions.setter
    def special_instructions(self, special_instructions):
        """Sets the special_instructions of this BillOfLading.


        :param special_instructions: The special_instructions of this BillOfLading.  # noqa: E501
        :type: str
        """

        self._special_instructions = special_instructions

    @property
    def order_info_lines(self):
        """Gets the order_info_lines of this BillOfLading.  # noqa: E501


        :return: The order_info_lines of this BillOfLading.  # noqa: E501
        :rtype: list[BillOfLadingOrderInfoLine]
        """
        return self._order_info_lines

    @order_info_lines.setter
    def order_info_lines(self, order_info_lines):
        """Sets the order_info_lines of this BillOfLading.


        :param order_info_lines: The order_info_lines of this BillOfLading.  # noqa: E501
        :type: list[BillOfLadingOrderInfoLine]
        """

        self._order_info_lines = order_info_lines

    @property
    def carrier_info_lines(self):
        """Gets the carrier_info_lines of this BillOfLading.  # noqa: E501


        :return: The carrier_info_lines of this BillOfLading.  # noqa: E501
        :rtype: list[BillOfLadingCarrierInfoLine]
        """
        return self._carrier_info_lines

    @carrier_info_lines.setter
    def carrier_info_lines(self, carrier_info_lines):
        """Sets the carrier_info_lines of this BillOfLading.


        :param carrier_info_lines: The carrier_info_lines of this BillOfLading.  # noqa: E501
        :type: list[BillOfLadingCarrierInfoLine]
        """

        self._carrier_info_lines = carrier_info_lines

    @property
    def custom_fields(self):
        """Gets the custom_fields of this BillOfLading.  # noqa: E501


        :return: The custom_fields of this BillOfLading.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this BillOfLading.


        :param custom_fields: The custom_fields of this BillOfLading.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BillOfLading):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
