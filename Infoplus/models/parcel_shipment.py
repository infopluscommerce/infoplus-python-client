# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ParcelShipment(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ParcelShipment - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'ship_date': 'datetime',
            'delivered_date': 'datetime',
            'tracking_no': 'str',
            'warehouse_id': 'int',
            'lob_id': 'int',
            'order_no': 'float',
            'carton_no': 'int',
            'number_of_cartons': 'int',
            'status': 'str',
            'shipped': 'bool',
            'carrier_service_id': 'int',
            'dim1_in': 'float',
            'dim2_in': 'float',
            'dim3_in': 'float',
            'estimated_zone': 'str',
            'parcel_account_no': 'str',
            'third_party_parcel_account_no': 'str',
            'manifest_id': 'int',
            'residential': 'bool',
            'billing_option': 'str',
            'weight_lbs': 'float',
            'dim_weight': 'float',
            'license_plate_number': 'str',
            'charged_freight_amount': 'float',
            'published_freight_amount': 'float',
            'retail_freight_amount': 'float',
            'external_shipping_system_id': 'int',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'ship_date': 'shipDate',
            'delivered_date': 'deliveredDate',
            'tracking_no': 'trackingNo',
            'warehouse_id': 'warehouseId',
            'lob_id': 'lobId',
            'order_no': 'orderNo',
            'carton_no': 'cartonNo',
            'number_of_cartons': 'numberOfCartons',
            'status': 'status',
            'shipped': 'shipped',
            'carrier_service_id': 'carrierServiceId',
            'dim1_in': 'dim1In',
            'dim2_in': 'dim2In',
            'dim3_in': 'dim3In',
            'estimated_zone': 'estimatedZone',
            'parcel_account_no': 'parcelAccountNo',
            'third_party_parcel_account_no': 'thirdPartyParcelAccountNo',
            'manifest_id': 'manifestId',
            'residential': 'residential',
            'billing_option': 'billingOption',
            'weight_lbs': 'weightLbs',
            'dim_weight': 'dimWeight',
            'license_plate_number': 'licensePlateNumber',
            'charged_freight_amount': 'chargedFreightAmount',
            'published_freight_amount': 'publishedFreightAmount',
            'retail_freight_amount': 'retailFreightAmount',
            'external_shipping_system_id': 'externalShippingSystemId',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._ship_date = None
        self._delivered_date = None
        self._tracking_no = None
        self._warehouse_id = None
        self._lob_id = None
        self._order_no = None
        self._carton_no = None
        self._number_of_cartons = None
        self._status = None
        self._shipped = False
        self._carrier_service_id = None
        self._dim1_in = None
        self._dim2_in = None
        self._dim3_in = None
        self._estimated_zone = None
        self._parcel_account_no = None
        self._third_party_parcel_account_no = None
        self._manifest_id = None
        self._residential = False
        self._billing_option = None
        self._weight_lbs = None
        self._dim_weight = None
        self._license_plate_number = None
        self._charged_freight_amount = None
        self._published_freight_amount = None
        self._retail_freight_amount = None
        self._external_shipping_system_id = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this ParcelShipment.


        :return: The id of this ParcelShipment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ParcelShipment.


        :param id: The id of this ParcelShipment.
        :type: int
        """
        self._id = id

    @property
    def create_date(self):
        """
        Gets the create_date of this ParcelShipment.


        :return: The create_date of this ParcelShipment.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this ParcelShipment.


        :param create_date: The create_date of this ParcelShipment.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this ParcelShipment.


        :return: The modify_date of this ParcelShipment.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this ParcelShipment.


        :param modify_date: The modify_date of this ParcelShipment.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def ship_date(self):
        """
        Gets the ship_date of this ParcelShipment.


        :return: The ship_date of this ParcelShipment.
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """
        Sets the ship_date of this ParcelShipment.


        :param ship_date: The ship_date of this ParcelShipment.
        :type: datetime
        """
        self._ship_date = ship_date

    @property
    def delivered_date(self):
        """
        Gets the delivered_date of this ParcelShipment.


        :return: The delivered_date of this ParcelShipment.
        :rtype: datetime
        """
        return self._delivered_date

    @delivered_date.setter
    def delivered_date(self, delivered_date):
        """
        Sets the delivered_date of this ParcelShipment.


        :param delivered_date: The delivered_date of this ParcelShipment.
        :type: datetime
        """
        self._delivered_date = delivered_date

    @property
    def tracking_no(self):
        """
        Gets the tracking_no of this ParcelShipment.


        :return: The tracking_no of this ParcelShipment.
        :rtype: str
        """
        return self._tracking_no

    @tracking_no.setter
    def tracking_no(self, tracking_no):
        """
        Sets the tracking_no of this ParcelShipment.


        :param tracking_no: The tracking_no of this ParcelShipment.
        :type: str
        """
        self._tracking_no = tracking_no

    @property
    def warehouse_id(self):
        """
        Gets the warehouse_id of this ParcelShipment.


        :return: The warehouse_id of this ParcelShipment.
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """
        Sets the warehouse_id of this ParcelShipment.


        :param warehouse_id: The warehouse_id of this ParcelShipment.
        :type: int
        """
        self._warehouse_id = warehouse_id

    @property
    def lob_id(self):
        """
        Gets the lob_id of this ParcelShipment.


        :return: The lob_id of this ParcelShipment.
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """
        Sets the lob_id of this ParcelShipment.


        :param lob_id: The lob_id of this ParcelShipment.
        :type: int
        """
        self._lob_id = lob_id

    @property
    def order_no(self):
        """
        Gets the order_no of this ParcelShipment.


        :return: The order_no of this ParcelShipment.
        :rtype: float
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """
        Sets the order_no of this ParcelShipment.


        :param order_no: The order_no of this ParcelShipment.
        :type: float
        """
        self._order_no = order_no

    @property
    def carton_no(self):
        """
        Gets the carton_no of this ParcelShipment.


        :return: The carton_no of this ParcelShipment.
        :rtype: int
        """
        return self._carton_no

    @carton_no.setter
    def carton_no(self, carton_no):
        """
        Sets the carton_no of this ParcelShipment.


        :param carton_no: The carton_no of this ParcelShipment.
        :type: int
        """
        self._carton_no = carton_no

    @property
    def number_of_cartons(self):
        """
        Gets the number_of_cartons of this ParcelShipment.


        :return: The number_of_cartons of this ParcelShipment.
        :rtype: int
        """
        return self._number_of_cartons

    @number_of_cartons.setter
    def number_of_cartons(self, number_of_cartons):
        """
        Sets the number_of_cartons of this ParcelShipment.


        :param number_of_cartons: The number_of_cartons of this ParcelShipment.
        :type: int
        """
        self._number_of_cartons = number_of_cartons

    @property
    def status(self):
        """
        Gets the status of this ParcelShipment.


        :return: The status of this ParcelShipment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this ParcelShipment.


        :param status: The status of this ParcelShipment.
        :type: str
        """
        self._status = status

    @property
    def shipped(self):
        """
        Gets the shipped of this ParcelShipment.


        :return: The shipped of this ParcelShipment.
        :rtype: bool
        """
        return self._shipped

    @shipped.setter
    def shipped(self, shipped):
        """
        Sets the shipped of this ParcelShipment.


        :param shipped: The shipped of this ParcelShipment.
        :type: bool
        """
        self._shipped = shipped

    @property
    def carrier_service_id(self):
        """
        Gets the carrier_service_id of this ParcelShipment.


        :return: The carrier_service_id of this ParcelShipment.
        :rtype: int
        """
        return self._carrier_service_id

    @carrier_service_id.setter
    def carrier_service_id(self, carrier_service_id):
        """
        Sets the carrier_service_id of this ParcelShipment.


        :param carrier_service_id: The carrier_service_id of this ParcelShipment.
        :type: int
        """
        self._carrier_service_id = carrier_service_id

    @property
    def dim1_in(self):
        """
        Gets the dim1_in of this ParcelShipment.


        :return: The dim1_in of this ParcelShipment.
        :rtype: float
        """
        return self._dim1_in

    @dim1_in.setter
    def dim1_in(self, dim1_in):
        """
        Sets the dim1_in of this ParcelShipment.


        :param dim1_in: The dim1_in of this ParcelShipment.
        :type: float
        """
        self._dim1_in = dim1_in

    @property
    def dim2_in(self):
        """
        Gets the dim2_in of this ParcelShipment.


        :return: The dim2_in of this ParcelShipment.
        :rtype: float
        """
        return self._dim2_in

    @dim2_in.setter
    def dim2_in(self, dim2_in):
        """
        Sets the dim2_in of this ParcelShipment.


        :param dim2_in: The dim2_in of this ParcelShipment.
        :type: float
        """
        self._dim2_in = dim2_in

    @property
    def dim3_in(self):
        """
        Gets the dim3_in of this ParcelShipment.


        :return: The dim3_in of this ParcelShipment.
        :rtype: float
        """
        return self._dim3_in

    @dim3_in.setter
    def dim3_in(self, dim3_in):
        """
        Sets the dim3_in of this ParcelShipment.


        :param dim3_in: The dim3_in of this ParcelShipment.
        :type: float
        """
        self._dim3_in = dim3_in

    @property
    def estimated_zone(self):
        """
        Gets the estimated_zone of this ParcelShipment.


        :return: The estimated_zone of this ParcelShipment.
        :rtype: str
        """
        return self._estimated_zone

    @estimated_zone.setter
    def estimated_zone(self, estimated_zone):
        """
        Sets the estimated_zone of this ParcelShipment.


        :param estimated_zone: The estimated_zone of this ParcelShipment.
        :type: str
        """
        self._estimated_zone = estimated_zone

    @property
    def parcel_account_no(self):
        """
        Gets the parcel_account_no of this ParcelShipment.


        :return: The parcel_account_no of this ParcelShipment.
        :rtype: str
        """
        return self._parcel_account_no

    @parcel_account_no.setter
    def parcel_account_no(self, parcel_account_no):
        """
        Sets the parcel_account_no of this ParcelShipment.


        :param parcel_account_no: The parcel_account_no of this ParcelShipment.
        :type: str
        """
        self._parcel_account_no = parcel_account_no

    @property
    def third_party_parcel_account_no(self):
        """
        Gets the third_party_parcel_account_no of this ParcelShipment.


        :return: The third_party_parcel_account_no of this ParcelShipment.
        :rtype: str
        """
        return self._third_party_parcel_account_no

    @third_party_parcel_account_no.setter
    def third_party_parcel_account_no(self, third_party_parcel_account_no):
        """
        Sets the third_party_parcel_account_no of this ParcelShipment.


        :param third_party_parcel_account_no: The third_party_parcel_account_no of this ParcelShipment.
        :type: str
        """
        self._third_party_parcel_account_no = third_party_parcel_account_no

    @property
    def manifest_id(self):
        """
        Gets the manifest_id of this ParcelShipment.


        :return: The manifest_id of this ParcelShipment.
        :rtype: int
        """
        return self._manifest_id

    @manifest_id.setter
    def manifest_id(self, manifest_id):
        """
        Sets the manifest_id of this ParcelShipment.


        :param manifest_id: The manifest_id of this ParcelShipment.
        :type: int
        """
        self._manifest_id = manifest_id

    @property
    def residential(self):
        """
        Gets the residential of this ParcelShipment.


        :return: The residential of this ParcelShipment.
        :rtype: bool
        """
        return self._residential

    @residential.setter
    def residential(self, residential):
        """
        Sets the residential of this ParcelShipment.


        :param residential: The residential of this ParcelShipment.
        :type: bool
        """
        self._residential = residential

    @property
    def billing_option(self):
        """
        Gets the billing_option of this ParcelShipment.


        :return: The billing_option of this ParcelShipment.
        :rtype: str
        """
        return self._billing_option

    @billing_option.setter
    def billing_option(self, billing_option):
        """
        Sets the billing_option of this ParcelShipment.


        :param billing_option: The billing_option of this ParcelShipment.
        :type: str
        """
        self._billing_option = billing_option

    @property
    def weight_lbs(self):
        """
        Gets the weight_lbs of this ParcelShipment.


        :return: The weight_lbs of this ParcelShipment.
        :rtype: float
        """
        return self._weight_lbs

    @weight_lbs.setter
    def weight_lbs(self, weight_lbs):
        """
        Sets the weight_lbs of this ParcelShipment.


        :param weight_lbs: The weight_lbs of this ParcelShipment.
        :type: float
        """
        self._weight_lbs = weight_lbs

    @property
    def dim_weight(self):
        """
        Gets the dim_weight of this ParcelShipment.


        :return: The dim_weight of this ParcelShipment.
        :rtype: float
        """
        return self._dim_weight

    @dim_weight.setter
    def dim_weight(self, dim_weight):
        """
        Sets the dim_weight of this ParcelShipment.


        :param dim_weight: The dim_weight of this ParcelShipment.
        :type: float
        """
        self._dim_weight = dim_weight

    @property
    def license_plate_number(self):
        """
        Gets the license_plate_number of this ParcelShipment.


        :return: The license_plate_number of this ParcelShipment.
        :rtype: str
        """
        return self._license_plate_number

    @license_plate_number.setter
    def license_plate_number(self, license_plate_number):
        """
        Sets the license_plate_number of this ParcelShipment.


        :param license_plate_number: The license_plate_number of this ParcelShipment.
        :type: str
        """
        self._license_plate_number = license_plate_number

    @property
    def charged_freight_amount(self):
        """
        Gets the charged_freight_amount of this ParcelShipment.


        :return: The charged_freight_amount of this ParcelShipment.
        :rtype: float
        """
        return self._charged_freight_amount

    @charged_freight_amount.setter
    def charged_freight_amount(self, charged_freight_amount):
        """
        Sets the charged_freight_amount of this ParcelShipment.


        :param charged_freight_amount: The charged_freight_amount of this ParcelShipment.
        :type: float
        """
        self._charged_freight_amount = charged_freight_amount

    @property
    def published_freight_amount(self):
        """
        Gets the published_freight_amount of this ParcelShipment.


        :return: The published_freight_amount of this ParcelShipment.
        :rtype: float
        """
        return self._published_freight_amount

    @published_freight_amount.setter
    def published_freight_amount(self, published_freight_amount):
        """
        Sets the published_freight_amount of this ParcelShipment.


        :param published_freight_amount: The published_freight_amount of this ParcelShipment.
        :type: float
        """
        self._published_freight_amount = published_freight_amount

    @property
    def retail_freight_amount(self):
        """
        Gets the retail_freight_amount of this ParcelShipment.


        :return: The retail_freight_amount of this ParcelShipment.
        :rtype: float
        """
        return self._retail_freight_amount

    @retail_freight_amount.setter
    def retail_freight_amount(self, retail_freight_amount):
        """
        Sets the retail_freight_amount of this ParcelShipment.


        :param retail_freight_amount: The retail_freight_amount of this ParcelShipment.
        :type: float
        """
        self._retail_freight_amount = retail_freight_amount

    @property
    def external_shipping_system_id(self):
        """
        Gets the external_shipping_system_id of this ParcelShipment.


        :return: The external_shipping_system_id of this ParcelShipment.
        :rtype: int
        """
        return self._external_shipping_system_id

    @external_shipping_system_id.setter
    def external_shipping_system_id(self, external_shipping_system_id):
        """
        Sets the external_shipping_system_id of this ParcelShipment.


        :param external_shipping_system_id: The external_shipping_system_id of this ParcelShipment.
        :type: int
        """
        self._external_shipping_system_id = external_shipping_system_id

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this ParcelShipment.


        :return: The custom_fields of this ParcelShipment.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this ParcelShipment.


        :param custom_fields: The custom_fields of this ParcelShipment.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

