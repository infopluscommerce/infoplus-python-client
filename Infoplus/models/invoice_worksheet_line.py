# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InvoiceWorksheetLine(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'lob_id': 'int',
        'seq_no': 'int',
        'description': 'str',
        'account_code': 'str',
        'department': 'str',
        'item_code': 'str',
        'quantity': 'float',
        'charge_rate': 'float',
        'extended_charge': 'float',
        'backup_file': 'int',
        'backup_document': 'str',
        'invoice_worksheet_id': 'int',
        'invoice_template_line_id': 'int',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'lob_id': 'lobId',
        'seq_no': 'seqNo',
        'description': 'description',
        'account_code': 'accountCode',
        'department': 'department',
        'item_code': 'itemCode',
        'quantity': 'quantity',
        'charge_rate': 'chargeRate',
        'extended_charge': 'extendedCharge',
        'backup_file': 'backupFile',
        'backup_document': 'backupDocument',
        'invoice_worksheet_id': 'invoiceWorksheetId',
        'invoice_template_line_id': 'invoiceTemplateLineId',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, create_date=None, modify_date=None, lob_id=None, seq_no=None, description=None, account_code=None, department=None, item_code=None, quantity=None, charge_rate=None, extended_charge=None, backup_file=None, backup_document=None, invoice_worksheet_id=None, invoice_template_line_id=None, custom_fields=None):  # noqa: E501
        """InvoiceWorksheetLine - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._lob_id = None
        self._seq_no = None
        self._description = None
        self._account_code = None
        self._department = None
        self._item_code = None
        self._quantity = None
        self._charge_rate = None
        self._extended_charge = None
        self._backup_file = None
        self._backup_document = None
        self._invoice_worksheet_id = None
        self._invoice_template_line_id = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        self.lob_id = lob_id
        if seq_no is not None:
            self.seq_no = seq_no
        if description is not None:
            self.description = description
        if account_code is not None:
            self.account_code = account_code
        if department is not None:
            self.department = department
        if item_code is not None:
            self.item_code = item_code
        if quantity is not None:
            self.quantity = quantity
        if charge_rate is not None:
            self.charge_rate = charge_rate
        if extended_charge is not None:
            self.extended_charge = extended_charge
        if backup_file is not None:
            self.backup_file = backup_file
        if backup_document is not None:
            self.backup_document = backup_document
        self.invoice_worksheet_id = invoice_worksheet_id
        if invoice_template_line_id is not None:
            self.invoice_template_line_id = invoice_template_line_id
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this InvoiceWorksheetLine.  # noqa: E501


        :return: The id of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceWorksheetLine.


        :param id: The id of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def create_date(self):
        """Gets the create_date of this InvoiceWorksheetLine.  # noqa: E501


        :return: The create_date of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this InvoiceWorksheetLine.


        :param create_date: The create_date of this InvoiceWorksheetLine.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this InvoiceWorksheetLine.  # noqa: E501


        :return: The modify_date of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this InvoiceWorksheetLine.


        :param modify_date: The modify_date of this InvoiceWorksheetLine.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def lob_id(self):
        """Gets the lob_id of this InvoiceWorksheetLine.  # noqa: E501


        :return: The lob_id of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this InvoiceWorksheetLine.


        :param lob_id: The lob_id of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def seq_no(self):
        """Gets the seq_no of this InvoiceWorksheetLine.  # noqa: E501


        :return: The seq_no of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._seq_no

    @seq_no.setter
    def seq_no(self, seq_no):
        """Sets the seq_no of this InvoiceWorksheetLine.


        :param seq_no: The seq_no of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """

        self._seq_no = seq_no

    @property
    def description(self):
        """Gets the description of this InvoiceWorksheetLine.  # noqa: E501


        :return: The description of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InvoiceWorksheetLine.


        :param description: The description of this InvoiceWorksheetLine.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def account_code(self):
        """Gets the account_code of this InvoiceWorksheetLine.  # noqa: E501


        :return: The account_code of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this InvoiceWorksheetLine.


        :param account_code: The account_code of this InvoiceWorksheetLine.  # noqa: E501
        :type: str
        """

        self._account_code = account_code

    @property
    def department(self):
        """Gets the department of this InvoiceWorksheetLine.  # noqa: E501


        :return: The department of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this InvoiceWorksheetLine.


        :param department: The department of this InvoiceWorksheetLine.  # noqa: E501
        :type: str
        """

        self._department = department

    @property
    def item_code(self):
        """Gets the item_code of this InvoiceWorksheetLine.  # noqa: E501


        :return: The item_code of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: str
        """
        return self._item_code

    @item_code.setter
    def item_code(self, item_code):
        """Sets the item_code of this InvoiceWorksheetLine.


        :param item_code: The item_code of this InvoiceWorksheetLine.  # noqa: E501
        :type: str
        """

        self._item_code = item_code

    @property
    def quantity(self):
        """Gets the quantity of this InvoiceWorksheetLine.  # noqa: E501


        :return: The quantity of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this InvoiceWorksheetLine.


        :param quantity: The quantity of this InvoiceWorksheetLine.  # noqa: E501
        :type: float
        """

        self._quantity = quantity

    @property
    def charge_rate(self):
        """Gets the charge_rate of this InvoiceWorksheetLine.  # noqa: E501


        :return: The charge_rate of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: float
        """
        return self._charge_rate

    @charge_rate.setter
    def charge_rate(self, charge_rate):
        """Sets the charge_rate of this InvoiceWorksheetLine.


        :param charge_rate: The charge_rate of this InvoiceWorksheetLine.  # noqa: E501
        :type: float
        """

        self._charge_rate = charge_rate

    @property
    def extended_charge(self):
        """Gets the extended_charge of this InvoiceWorksheetLine.  # noqa: E501


        :return: The extended_charge of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: float
        """
        return self._extended_charge

    @extended_charge.setter
    def extended_charge(self, extended_charge):
        """Sets the extended_charge of this InvoiceWorksheetLine.


        :param extended_charge: The extended_charge of this InvoiceWorksheetLine.  # noqa: E501
        :type: float
        """

        self._extended_charge = extended_charge

    @property
    def backup_file(self):
        """Gets the backup_file of this InvoiceWorksheetLine.  # noqa: E501


        :return: The backup_file of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._backup_file

    @backup_file.setter
    def backup_file(self, backup_file):
        """Sets the backup_file of this InvoiceWorksheetLine.


        :param backup_file: The backup_file of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """

        self._backup_file = backup_file

    @property
    def backup_document(self):
        """Gets the backup_document of this InvoiceWorksheetLine.  # noqa: E501


        :return: The backup_document of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: str
        """
        return self._backup_document

    @backup_document.setter
    def backup_document(self, backup_document):
        """Sets the backup_document of this InvoiceWorksheetLine.


        :param backup_document: The backup_document of this InvoiceWorksheetLine.  # noqa: E501
        :type: str
        """

        self._backup_document = backup_document

    @property
    def invoice_worksheet_id(self):
        """Gets the invoice_worksheet_id of this InvoiceWorksheetLine.  # noqa: E501


        :return: The invoice_worksheet_id of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._invoice_worksheet_id

    @invoice_worksheet_id.setter
    def invoice_worksheet_id(self, invoice_worksheet_id):
        """Sets the invoice_worksheet_id of this InvoiceWorksheetLine.


        :param invoice_worksheet_id: The invoice_worksheet_id of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """
        if invoice_worksheet_id is None:
            raise ValueError("Invalid value for `invoice_worksheet_id`, must not be `None`")  # noqa: E501

        self._invoice_worksheet_id = invoice_worksheet_id

    @property
    def invoice_template_line_id(self):
        """Gets the invoice_template_line_id of this InvoiceWorksheetLine.  # noqa: E501


        :return: The invoice_template_line_id of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: int
        """
        return self._invoice_template_line_id

    @invoice_template_line_id.setter
    def invoice_template_line_id(self, invoice_template_line_id):
        """Sets the invoice_template_line_id of this InvoiceWorksheetLine.


        :param invoice_template_line_id: The invoice_template_line_id of this InvoiceWorksheetLine.  # noqa: E501
        :type: int
        """

        self._invoice_template_line_id = invoice_template_line_id

    @property
    def custom_fields(self):
        """Gets the custom_fields of this InvoiceWorksheetLine.  # noqa: E501


        :return: The custom_fields of this InvoiceWorksheetLine.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this InvoiceWorksheetLine.


        :param custom_fields: The custom_fields of this InvoiceWorksheetLine.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoiceWorksheetLine):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
