# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: v3.0
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class BillOfLadingOrderInfoLine(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'customer_order_no': 'str',
        'no_packages': 'int',
        'weight': 'int',
        'palletslip': 'bool',
        'additional_shipper_info': 'str',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'customer_order_no': 'customerOrderNo',
        'no_packages': 'noPackages',
        'weight': 'weight',
        'palletslip': 'palletslip',
        'additional_shipper_info': 'additionalShipperInfo',
        'custom_fields': 'customFields'
    }

    def __init__(self, customer_order_no=None, no_packages=None, weight=None, palletslip=False, additional_shipper_info=None, custom_fields=None):  # noqa: E501
        """BillOfLadingOrderInfoLine - a model defined in Swagger"""  # noqa: E501

        self._customer_order_no = None
        self._no_packages = None
        self._weight = None
        self._palletslip = None
        self._additional_shipper_info = None
        self._custom_fields = None
        self.discriminator = None

        if customer_order_no is not None:
            self.customer_order_no = customer_order_no
        if no_packages is not None:
            self.no_packages = no_packages
        if weight is not None:
            self.weight = weight
        if palletslip is not None:
            self.palletslip = palletslip
        self.additional_shipper_info = additional_shipper_info
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def customer_order_no(self):
        """Gets the customer_order_no of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The customer_order_no of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: str
        """
        return self._customer_order_no

    @customer_order_no.setter
    def customer_order_no(self, customer_order_no):
        """Sets the customer_order_no of this BillOfLadingOrderInfoLine.


        :param customer_order_no: The customer_order_no of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: str
        """

        self._customer_order_no = customer_order_no

    @property
    def no_packages(self):
        """Gets the no_packages of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The no_packages of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: int
        """
        return self._no_packages

    @no_packages.setter
    def no_packages(self, no_packages):
        """Sets the no_packages of this BillOfLadingOrderInfoLine.


        :param no_packages: The no_packages of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: int
        """

        self._no_packages = no_packages

    @property
    def weight(self):
        """Gets the weight of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The weight of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this BillOfLadingOrderInfoLine.


        :param weight: The weight of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def palletslip(self):
        """Gets the palletslip of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The palletslip of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: bool
        """
        return self._palletslip

    @palletslip.setter
    def palletslip(self, palletslip):
        """Sets the palletslip of this BillOfLadingOrderInfoLine.


        :param palletslip: The palletslip of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: bool
        """

        self._palletslip = palletslip

    @property
    def additional_shipper_info(self):
        """Gets the additional_shipper_info of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The additional_shipper_info of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: str
        """
        return self._additional_shipper_info

    @additional_shipper_info.setter
    def additional_shipper_info(self, additional_shipper_info):
        """Sets the additional_shipper_info of this BillOfLadingOrderInfoLine.


        :param additional_shipper_info: The additional_shipper_info of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: str
        """
        if additional_shipper_info is None:
            raise ValueError("Invalid value for `additional_shipper_info`, must not be `None`")  # noqa: E501

        self._additional_shipper_info = additional_shipper_info

    @property
    def custom_fields(self):
        """Gets the custom_fields of this BillOfLadingOrderInfoLine.  # noqa: E501


        :return: The custom_fields of this BillOfLadingOrderInfoLine.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this BillOfLadingOrderInfoLine.


        :param custom_fields: The custom_fields of this BillOfLadingOrderInfoLine.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BillOfLadingOrderInfoLine):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
