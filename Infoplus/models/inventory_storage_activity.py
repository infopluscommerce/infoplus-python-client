# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InventoryStorageActivity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'imported_record_id': 'int',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'warehouse_location_id': 'int',
        'item_id': 'int',
        'lob_id': 'int',
        'snapshot_date': 'datetime',
        'is_mixed_receipts': 'bool',
        'quantity': 'int',
        'address': 'str',
        'estimated_inner_packs': 'int',
        'estimated_cases': 'int',
        'estimated_pallets': 'int',
        'inventory_value': 'float',
        'inventory_age_days': 'int',
        'warehouse_id': 'int',
        'warehouse_name': 'str',
        'warehouse_zone_id': 'int',
        'warehouse_zone_name': 'str',
        'warehouse_zone_address': 'str',
        'warehouse_building_id': 'int',
        'warehouse_building_name': 'str',
        'warehouse_aisle_id': 'int',
        'warehouse_aisle_address': 'str',
        'warehouse_location_origin_id': 'int',
        'warehouse_location_origin_name': 'str',
        'warehouse_location_billing_type_id': 'int',
        'warehouse_location_billing_type_name': 'str',
        'warehouse_location_behavior_type_id': 'int',
        'warehouse_location_behavior_type_name': 'str',
        'warehouse_location_footprint_id': 'int',
        'warehouse_location_footprint_name': 'str',
        'warehouse_location_footprint_width': 'int',
        'warehouse_location_footprint_height': 'int',
        'warehouse_location_footprint_depth': 'int',
        'warehouse_location_cubic_feet': 'float',
        'warehouse_location_level': 'int',
        'warehouse_location_bay': 'int',
        'warehouse_location_number': 'int',
        'warehouse_location_online': 'bool',
        'warehouse_location_priority_code': 'int',
        'warehouse_location_allow_item_mixing': 'bool',
        'warehouse_location_cost': 'int',
        'sku': 'str',
        'item_vendor_sku': 'str',
        'item_upc': 'str',
        'item_major_group': 'int',
        'item_major_group_name': 'str',
        'item_sub_group': 'int',
        'item_sub_group_name': 'str',
        'item_product_code': 'int',
        'item_product_code_name': 'str',
        'item_account_code': 'str',
        'item_account_code_name': 'str',
        'item_summary_code': 'int',
        'item_summary_code_name': 'str',
        'item_sector': 'str',
        'item_cubic_feet': 'float',
        'po_no': 'str',
        'receipt_distribution_date': 'datetime',
        'receipt_units_per_wrap': 'int',
        'receipt_quantity_per_inner_pack': 'int',
        'receipt_quantity_per_case': 'int',
        'receipt_quantity_per_pallet': 'int',
        'receipt_revision_date': 'str',
        'receipt_production_lot': 'str',
        'receipt_receive_date': 'datetime',
        'receipt_status': 'str',
        'receipt_status_name': 'str',
        'receipt_unit_code': 'int',
        'receipt_unit_code_text': 'str',
        'receipt_wrap_code': 'int',
        'receipt_wrap_code_text': 'str',
        'receipt_case_weight': 'float',
        'receipt_product_id_tag': 'str',
        'alcohol_type_id': 'int',
        'alcohol_type_name': 'str',
        'alcohol_content': 'float',
        'alcohol_container_id': 'int',
        'alcohol_container_name': 'str',
        'alcohol_container_volume': 'int',
        'alcohol_vintage_year': 'str',
        'alcohol_country_id': 'int',
        'alcohol_country_name': 'str',
        'alcohol_state': 'str',
        'alcohol_region': 'str',
        'alcohol_brand': 'str',
        'alcohol_upc_code': 'str',
        'alcohol_nabca_code': 'str',
        'alcohol_unimerc_code': 'str',
        'alcohol_scc_code': 'str',
        'billing_quantity': 'float',
        'charge_rate': 'float',
        'extended_charge': 'float',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'imported_record_id': 'importedRecordId',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'warehouse_location_id': 'warehouseLocationId',
        'item_id': 'itemId',
        'lob_id': 'lobId',
        'snapshot_date': 'snapshotDate',
        'is_mixed_receipts': 'isMixedReceipts',
        'quantity': 'quantity',
        'address': 'address',
        'estimated_inner_packs': 'estimatedInnerPacks',
        'estimated_cases': 'estimatedCases',
        'estimated_pallets': 'estimatedPallets',
        'inventory_value': 'inventoryValue',
        'inventory_age_days': 'inventoryAgeDays',
        'warehouse_id': 'warehouseId',
        'warehouse_name': 'warehouseName',
        'warehouse_zone_id': 'warehouseZoneId',
        'warehouse_zone_name': 'warehouseZoneName',
        'warehouse_zone_address': 'warehouseZoneAddress',
        'warehouse_building_id': 'warehouseBuildingId',
        'warehouse_building_name': 'warehouseBuildingName',
        'warehouse_aisle_id': 'warehouseAisleId',
        'warehouse_aisle_address': 'warehouseAisleAddress',
        'warehouse_location_origin_id': 'warehouseLocationOriginId',
        'warehouse_location_origin_name': 'warehouseLocationOriginName',
        'warehouse_location_billing_type_id': 'warehouseLocationBillingTypeId',
        'warehouse_location_billing_type_name': 'warehouseLocationBillingTypeName',
        'warehouse_location_behavior_type_id': 'warehouseLocationBehaviorTypeId',
        'warehouse_location_behavior_type_name': 'warehouseLocationBehaviorTypeName',
        'warehouse_location_footprint_id': 'warehouseLocationFootprintId',
        'warehouse_location_footprint_name': 'warehouseLocationFootprintName',
        'warehouse_location_footprint_width': 'warehouseLocationFootprintWidth',
        'warehouse_location_footprint_height': 'warehouseLocationFootprintHeight',
        'warehouse_location_footprint_depth': 'warehouseLocationFootprintDepth',
        'warehouse_location_cubic_feet': 'warehouseLocationCubicFeet',
        'warehouse_location_level': 'warehouseLocationLevel',
        'warehouse_location_bay': 'warehouseLocationBay',
        'warehouse_location_number': 'warehouseLocationNumber',
        'warehouse_location_online': 'warehouseLocationOnline',
        'warehouse_location_priority_code': 'warehouseLocationPriorityCode',
        'warehouse_location_allow_item_mixing': 'warehouseLocationAllowItemMixing',
        'warehouse_location_cost': 'warehouseLocationCost',
        'sku': 'sku',
        'item_vendor_sku': 'itemVendorSku',
        'item_upc': 'itemUpc',
        'item_major_group': 'itemMajorGroup',
        'item_major_group_name': 'itemMajorGroupName',
        'item_sub_group': 'itemSubGroup',
        'item_sub_group_name': 'itemSubGroupName',
        'item_product_code': 'itemProductCode',
        'item_product_code_name': 'itemProductCodeName',
        'item_account_code': 'itemAccountCode',
        'item_account_code_name': 'itemAccountCodeName',
        'item_summary_code': 'itemSummaryCode',
        'item_summary_code_name': 'itemSummaryCodeName',
        'item_sector': 'itemSector',
        'item_cubic_feet': 'itemCubicFeet',
        'po_no': 'poNo',
        'receipt_distribution_date': 'receiptDistributionDate',
        'receipt_units_per_wrap': 'receiptUnitsPerWrap',
        'receipt_quantity_per_inner_pack': 'receiptQuantityPerInnerPack',
        'receipt_quantity_per_case': 'receiptQuantityPerCase',
        'receipt_quantity_per_pallet': 'receiptQuantityPerPallet',
        'receipt_revision_date': 'receiptRevisionDate',
        'receipt_production_lot': 'receiptProductionLot',
        'receipt_receive_date': 'receiptReceiveDate',
        'receipt_status': 'receiptStatus',
        'receipt_status_name': 'receiptStatusName',
        'receipt_unit_code': 'receiptUnitCode',
        'receipt_unit_code_text': 'receiptUnitCodeText',
        'receipt_wrap_code': 'receiptWrapCode',
        'receipt_wrap_code_text': 'receiptWrapCodeText',
        'receipt_case_weight': 'receiptCaseWeight',
        'receipt_product_id_tag': 'receiptProductIdTag',
        'alcohol_type_id': 'alcoholTypeId',
        'alcohol_type_name': 'alcoholTypeName',
        'alcohol_content': 'alcoholContent',
        'alcohol_container_id': 'alcoholContainerId',
        'alcohol_container_name': 'alcoholContainerName',
        'alcohol_container_volume': 'alcoholContainerVolume',
        'alcohol_vintage_year': 'alcoholVintageYear',
        'alcohol_country_id': 'alcoholCountryId',
        'alcohol_country_name': 'alcoholCountryName',
        'alcohol_state': 'alcoholState',
        'alcohol_region': 'alcoholRegion',
        'alcohol_brand': 'alcoholBrand',
        'alcohol_upc_code': 'alcoholUPCCode',
        'alcohol_nabca_code': 'alcoholNABCACode',
        'alcohol_unimerc_code': 'alcoholUNIMERCCode',
        'alcohol_scc_code': 'alcoholSCCCode',
        'billing_quantity': 'billingQuantity',
        'charge_rate': 'chargeRate',
        'extended_charge': 'extendedCharge',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, imported_record_id=None, create_date=None, modify_date=None, warehouse_location_id=None, item_id=None, lob_id=None, snapshot_date=None, is_mixed_receipts=False, quantity=None, address=None, estimated_inner_packs=None, estimated_cases=None, estimated_pallets=None, inventory_value=None, inventory_age_days=None, warehouse_id=None, warehouse_name=None, warehouse_zone_id=None, warehouse_zone_name=None, warehouse_zone_address=None, warehouse_building_id=None, warehouse_building_name=None, warehouse_aisle_id=None, warehouse_aisle_address=None, warehouse_location_origin_id=None, warehouse_location_origin_name=None, warehouse_location_billing_type_id=None, warehouse_location_billing_type_name=None, warehouse_location_behavior_type_id=None, warehouse_location_behavior_type_name=None, warehouse_location_footprint_id=None, warehouse_location_footprint_name=None, warehouse_location_footprint_width=None, warehouse_location_footprint_height=None, warehouse_location_footprint_depth=None, warehouse_location_cubic_feet=None, warehouse_location_level=None, warehouse_location_bay=None, warehouse_location_number=None, warehouse_location_online=False, warehouse_location_priority_code=None, warehouse_location_allow_item_mixing=False, warehouse_location_cost=None, sku=None, item_vendor_sku=None, item_upc=None, item_major_group=None, item_major_group_name=None, item_sub_group=None, item_sub_group_name=None, item_product_code=None, item_product_code_name=None, item_account_code=None, item_account_code_name=None, item_summary_code=None, item_summary_code_name=None, item_sector=None, item_cubic_feet=None, po_no=None, receipt_distribution_date=None, receipt_units_per_wrap=None, receipt_quantity_per_inner_pack=None, receipt_quantity_per_case=None, receipt_quantity_per_pallet=None, receipt_revision_date=None, receipt_production_lot=None, receipt_receive_date=None, receipt_status=None, receipt_status_name=None, receipt_unit_code=None, receipt_unit_code_text=None, receipt_wrap_code=None, receipt_wrap_code_text=None, receipt_case_weight=None, receipt_product_id_tag=None, alcohol_type_id=None, alcohol_type_name=None, alcohol_content=None, alcohol_container_id=None, alcohol_container_name=None, alcohol_container_volume=None, alcohol_vintage_year=None, alcohol_country_id=None, alcohol_country_name=None, alcohol_state=None, alcohol_region=None, alcohol_brand=None, alcohol_upc_code=None, alcohol_nabca_code=None, alcohol_unimerc_code=None, alcohol_scc_code=None, billing_quantity=None, charge_rate=None, extended_charge=None, custom_fields=None):  # noqa: E501
        """InventoryStorageActivity - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._imported_record_id = None
        self._create_date = None
        self._modify_date = None
        self._warehouse_location_id = None
        self._item_id = None
        self._lob_id = None
        self._snapshot_date = None
        self._is_mixed_receipts = None
        self._quantity = None
        self._address = None
        self._estimated_inner_packs = None
        self._estimated_cases = None
        self._estimated_pallets = None
        self._inventory_value = None
        self._inventory_age_days = None
        self._warehouse_id = None
        self._warehouse_name = None
        self._warehouse_zone_id = None
        self._warehouse_zone_name = None
        self._warehouse_zone_address = None
        self._warehouse_building_id = None
        self._warehouse_building_name = None
        self._warehouse_aisle_id = None
        self._warehouse_aisle_address = None
        self._warehouse_location_origin_id = None
        self._warehouse_location_origin_name = None
        self._warehouse_location_billing_type_id = None
        self._warehouse_location_billing_type_name = None
        self._warehouse_location_behavior_type_id = None
        self._warehouse_location_behavior_type_name = None
        self._warehouse_location_footprint_id = None
        self._warehouse_location_footprint_name = None
        self._warehouse_location_footprint_width = None
        self._warehouse_location_footprint_height = None
        self._warehouse_location_footprint_depth = None
        self._warehouse_location_cubic_feet = None
        self._warehouse_location_level = None
        self._warehouse_location_bay = None
        self._warehouse_location_number = None
        self._warehouse_location_online = None
        self._warehouse_location_priority_code = None
        self._warehouse_location_allow_item_mixing = None
        self._warehouse_location_cost = None
        self._sku = None
        self._item_vendor_sku = None
        self._item_upc = None
        self._item_major_group = None
        self._item_major_group_name = None
        self._item_sub_group = None
        self._item_sub_group_name = None
        self._item_product_code = None
        self._item_product_code_name = None
        self._item_account_code = None
        self._item_account_code_name = None
        self._item_summary_code = None
        self._item_summary_code_name = None
        self._item_sector = None
        self._item_cubic_feet = None
        self._po_no = None
        self._receipt_distribution_date = None
        self._receipt_units_per_wrap = None
        self._receipt_quantity_per_inner_pack = None
        self._receipt_quantity_per_case = None
        self._receipt_quantity_per_pallet = None
        self._receipt_revision_date = None
        self._receipt_production_lot = None
        self._receipt_receive_date = None
        self._receipt_status = None
        self._receipt_status_name = None
        self._receipt_unit_code = None
        self._receipt_unit_code_text = None
        self._receipt_wrap_code = None
        self._receipt_wrap_code_text = None
        self._receipt_case_weight = None
        self._receipt_product_id_tag = None
        self._alcohol_type_id = None
        self._alcohol_type_name = None
        self._alcohol_content = None
        self._alcohol_container_id = None
        self._alcohol_container_name = None
        self._alcohol_container_volume = None
        self._alcohol_vintage_year = None
        self._alcohol_country_id = None
        self._alcohol_country_name = None
        self._alcohol_state = None
        self._alcohol_region = None
        self._alcohol_brand = None
        self._alcohol_upc_code = None
        self._alcohol_nabca_code = None
        self._alcohol_unimerc_code = None
        self._alcohol_scc_code = None
        self._billing_quantity = None
        self._charge_rate = None
        self._extended_charge = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if imported_record_id is not None:
            self.imported_record_id = imported_record_id
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        if warehouse_location_id is not None:
            self.warehouse_location_id = warehouse_location_id
        if item_id is not None:
            self.item_id = item_id
        self.lob_id = lob_id
        if snapshot_date is not None:
            self.snapshot_date = snapshot_date
        if is_mixed_receipts is not None:
            self.is_mixed_receipts = is_mixed_receipts
        if quantity is not None:
            self.quantity = quantity
        if address is not None:
            self.address = address
        if estimated_inner_packs is not None:
            self.estimated_inner_packs = estimated_inner_packs
        if estimated_cases is not None:
            self.estimated_cases = estimated_cases
        if estimated_pallets is not None:
            self.estimated_pallets = estimated_pallets
        if inventory_value is not None:
            self.inventory_value = inventory_value
        if inventory_age_days is not None:
            self.inventory_age_days = inventory_age_days
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id
        if warehouse_name is not None:
            self.warehouse_name = warehouse_name
        if warehouse_zone_id is not None:
            self.warehouse_zone_id = warehouse_zone_id
        if warehouse_zone_name is not None:
            self.warehouse_zone_name = warehouse_zone_name
        if warehouse_zone_address is not None:
            self.warehouse_zone_address = warehouse_zone_address
        if warehouse_building_id is not None:
            self.warehouse_building_id = warehouse_building_id
        if warehouse_building_name is not None:
            self.warehouse_building_name = warehouse_building_name
        if warehouse_aisle_id is not None:
            self.warehouse_aisle_id = warehouse_aisle_id
        if warehouse_aisle_address is not None:
            self.warehouse_aisle_address = warehouse_aisle_address
        if warehouse_location_origin_id is not None:
            self.warehouse_location_origin_id = warehouse_location_origin_id
        if warehouse_location_origin_name is not None:
            self.warehouse_location_origin_name = warehouse_location_origin_name
        if warehouse_location_billing_type_id is not None:
            self.warehouse_location_billing_type_id = warehouse_location_billing_type_id
        if warehouse_location_billing_type_name is not None:
            self.warehouse_location_billing_type_name = warehouse_location_billing_type_name
        if warehouse_location_behavior_type_id is not None:
            self.warehouse_location_behavior_type_id = warehouse_location_behavior_type_id
        if warehouse_location_behavior_type_name is not None:
            self.warehouse_location_behavior_type_name = warehouse_location_behavior_type_name
        if warehouse_location_footprint_id is not None:
            self.warehouse_location_footprint_id = warehouse_location_footprint_id
        if warehouse_location_footprint_name is not None:
            self.warehouse_location_footprint_name = warehouse_location_footprint_name
        if warehouse_location_footprint_width is not None:
            self.warehouse_location_footprint_width = warehouse_location_footprint_width
        if warehouse_location_footprint_height is not None:
            self.warehouse_location_footprint_height = warehouse_location_footprint_height
        if warehouse_location_footprint_depth is not None:
            self.warehouse_location_footprint_depth = warehouse_location_footprint_depth
        if warehouse_location_cubic_feet is not None:
            self.warehouse_location_cubic_feet = warehouse_location_cubic_feet
        if warehouse_location_level is not None:
            self.warehouse_location_level = warehouse_location_level
        if warehouse_location_bay is not None:
            self.warehouse_location_bay = warehouse_location_bay
        if warehouse_location_number is not None:
            self.warehouse_location_number = warehouse_location_number
        if warehouse_location_online is not None:
            self.warehouse_location_online = warehouse_location_online
        if warehouse_location_priority_code is not None:
            self.warehouse_location_priority_code = warehouse_location_priority_code
        if warehouse_location_allow_item_mixing is not None:
            self.warehouse_location_allow_item_mixing = warehouse_location_allow_item_mixing
        if warehouse_location_cost is not None:
            self.warehouse_location_cost = warehouse_location_cost
        if sku is not None:
            self.sku = sku
        if item_vendor_sku is not None:
            self.item_vendor_sku = item_vendor_sku
        if item_upc is not None:
            self.item_upc = item_upc
        if item_major_group is not None:
            self.item_major_group = item_major_group
        if item_major_group_name is not None:
            self.item_major_group_name = item_major_group_name
        if item_sub_group is not None:
            self.item_sub_group = item_sub_group
        if item_sub_group_name is not None:
            self.item_sub_group_name = item_sub_group_name
        if item_product_code is not None:
            self.item_product_code = item_product_code
        if item_product_code_name is not None:
            self.item_product_code_name = item_product_code_name
        if item_account_code is not None:
            self.item_account_code = item_account_code
        if item_account_code_name is not None:
            self.item_account_code_name = item_account_code_name
        if item_summary_code is not None:
            self.item_summary_code = item_summary_code
        if item_summary_code_name is not None:
            self.item_summary_code_name = item_summary_code_name
        if item_sector is not None:
            self.item_sector = item_sector
        if item_cubic_feet is not None:
            self.item_cubic_feet = item_cubic_feet
        if po_no is not None:
            self.po_no = po_no
        if receipt_distribution_date is not None:
            self.receipt_distribution_date = receipt_distribution_date
        if receipt_units_per_wrap is not None:
            self.receipt_units_per_wrap = receipt_units_per_wrap
        if receipt_quantity_per_inner_pack is not None:
            self.receipt_quantity_per_inner_pack = receipt_quantity_per_inner_pack
        if receipt_quantity_per_case is not None:
            self.receipt_quantity_per_case = receipt_quantity_per_case
        if receipt_quantity_per_pallet is not None:
            self.receipt_quantity_per_pallet = receipt_quantity_per_pallet
        if receipt_revision_date is not None:
            self.receipt_revision_date = receipt_revision_date
        if receipt_production_lot is not None:
            self.receipt_production_lot = receipt_production_lot
        if receipt_receive_date is not None:
            self.receipt_receive_date = receipt_receive_date
        if receipt_status is not None:
            self.receipt_status = receipt_status
        if receipt_status_name is not None:
            self.receipt_status_name = receipt_status_name
        if receipt_unit_code is not None:
            self.receipt_unit_code = receipt_unit_code
        if receipt_unit_code_text is not None:
            self.receipt_unit_code_text = receipt_unit_code_text
        if receipt_wrap_code is not None:
            self.receipt_wrap_code = receipt_wrap_code
        if receipt_wrap_code_text is not None:
            self.receipt_wrap_code_text = receipt_wrap_code_text
        if receipt_case_weight is not None:
            self.receipt_case_weight = receipt_case_weight
        if receipt_product_id_tag is not None:
            self.receipt_product_id_tag = receipt_product_id_tag
        if alcohol_type_id is not None:
            self.alcohol_type_id = alcohol_type_id
        if alcohol_type_name is not None:
            self.alcohol_type_name = alcohol_type_name
        if alcohol_content is not None:
            self.alcohol_content = alcohol_content
        if alcohol_container_id is not None:
            self.alcohol_container_id = alcohol_container_id
        if alcohol_container_name is not None:
            self.alcohol_container_name = alcohol_container_name
        if alcohol_container_volume is not None:
            self.alcohol_container_volume = alcohol_container_volume
        if alcohol_vintage_year is not None:
            self.alcohol_vintage_year = alcohol_vintage_year
        if alcohol_country_id is not None:
            self.alcohol_country_id = alcohol_country_id
        if alcohol_country_name is not None:
            self.alcohol_country_name = alcohol_country_name
        if alcohol_state is not None:
            self.alcohol_state = alcohol_state
        if alcohol_region is not None:
            self.alcohol_region = alcohol_region
        if alcohol_brand is not None:
            self.alcohol_brand = alcohol_brand
        if alcohol_upc_code is not None:
            self.alcohol_upc_code = alcohol_upc_code
        if alcohol_nabca_code is not None:
            self.alcohol_nabca_code = alcohol_nabca_code
        if alcohol_unimerc_code is not None:
            self.alcohol_unimerc_code = alcohol_unimerc_code
        if alcohol_scc_code is not None:
            self.alcohol_scc_code = alcohol_scc_code
        if billing_quantity is not None:
            self.billing_quantity = billing_quantity
        if charge_rate is not None:
            self.charge_rate = charge_rate
        if extended_charge is not None:
            self.extended_charge = extended_charge
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this InventoryStorageActivity.  # noqa: E501


        :return: The id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InventoryStorageActivity.


        :param id: The id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def imported_record_id(self):
        """Gets the imported_record_id of this InventoryStorageActivity.  # noqa: E501


        :return: The imported_record_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._imported_record_id

    @imported_record_id.setter
    def imported_record_id(self, imported_record_id):
        """Sets the imported_record_id of this InventoryStorageActivity.


        :param imported_record_id: The imported_record_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._imported_record_id = imported_record_id

    @property
    def create_date(self):
        """Gets the create_date of this InventoryStorageActivity.  # noqa: E501


        :return: The create_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this InventoryStorageActivity.


        :param create_date: The create_date of this InventoryStorageActivity.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this InventoryStorageActivity.  # noqa: E501


        :return: The modify_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this InventoryStorageActivity.


        :param modify_date: The modify_date of this InventoryStorageActivity.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def warehouse_location_id(self):
        """Gets the warehouse_location_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_id

    @warehouse_location_id.setter
    def warehouse_location_id(self, warehouse_location_id):
        """Sets the warehouse_location_id of this InventoryStorageActivity.


        :param warehouse_location_id: The warehouse_location_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_id = warehouse_location_id

    @property
    def item_id(self):
        """Gets the item_id of this InventoryStorageActivity.  # noqa: E501


        :return: The item_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this InventoryStorageActivity.


        :param item_id: The item_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._item_id = item_id

    @property
    def lob_id(self):
        """Gets the lob_id of this InventoryStorageActivity.  # noqa: E501


        :return: The lob_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this InventoryStorageActivity.


        :param lob_id: The lob_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def snapshot_date(self):
        """Gets the snapshot_date of this InventoryStorageActivity.  # noqa: E501


        :return: The snapshot_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: datetime
        """
        return self._snapshot_date

    @snapshot_date.setter
    def snapshot_date(self, snapshot_date):
        """Sets the snapshot_date of this InventoryStorageActivity.


        :param snapshot_date: The snapshot_date of this InventoryStorageActivity.  # noqa: E501
        :type: datetime
        """

        self._snapshot_date = snapshot_date

    @property
    def is_mixed_receipts(self):
        """Gets the is_mixed_receipts of this InventoryStorageActivity.  # noqa: E501


        :return: The is_mixed_receipts of this InventoryStorageActivity.  # noqa: E501
        :rtype: bool
        """
        return self._is_mixed_receipts

    @is_mixed_receipts.setter
    def is_mixed_receipts(self, is_mixed_receipts):
        """Sets the is_mixed_receipts of this InventoryStorageActivity.


        :param is_mixed_receipts: The is_mixed_receipts of this InventoryStorageActivity.  # noqa: E501
        :type: bool
        """

        self._is_mixed_receipts = is_mixed_receipts

    @property
    def quantity(self):
        """Gets the quantity of this InventoryStorageActivity.  # noqa: E501


        :return: The quantity of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this InventoryStorageActivity.


        :param quantity: The quantity of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def address(self):
        """Gets the address of this InventoryStorageActivity.  # noqa: E501


        :return: The address of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this InventoryStorageActivity.


        :param address: The address of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def estimated_inner_packs(self):
        """Gets the estimated_inner_packs of this InventoryStorageActivity.  # noqa: E501


        :return: The estimated_inner_packs of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._estimated_inner_packs

    @estimated_inner_packs.setter
    def estimated_inner_packs(self, estimated_inner_packs):
        """Sets the estimated_inner_packs of this InventoryStorageActivity.


        :param estimated_inner_packs: The estimated_inner_packs of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._estimated_inner_packs = estimated_inner_packs

    @property
    def estimated_cases(self):
        """Gets the estimated_cases of this InventoryStorageActivity.  # noqa: E501


        :return: The estimated_cases of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._estimated_cases

    @estimated_cases.setter
    def estimated_cases(self, estimated_cases):
        """Sets the estimated_cases of this InventoryStorageActivity.


        :param estimated_cases: The estimated_cases of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._estimated_cases = estimated_cases

    @property
    def estimated_pallets(self):
        """Gets the estimated_pallets of this InventoryStorageActivity.  # noqa: E501


        :return: The estimated_pallets of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._estimated_pallets

    @estimated_pallets.setter
    def estimated_pallets(self, estimated_pallets):
        """Sets the estimated_pallets of this InventoryStorageActivity.


        :param estimated_pallets: The estimated_pallets of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._estimated_pallets = estimated_pallets

    @property
    def inventory_value(self):
        """Gets the inventory_value of this InventoryStorageActivity.  # noqa: E501


        :return: The inventory_value of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._inventory_value

    @inventory_value.setter
    def inventory_value(self, inventory_value):
        """Sets the inventory_value of this InventoryStorageActivity.


        :param inventory_value: The inventory_value of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._inventory_value = inventory_value

    @property
    def inventory_age_days(self):
        """Gets the inventory_age_days of this InventoryStorageActivity.  # noqa: E501


        :return: The inventory_age_days of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._inventory_age_days

    @inventory_age_days.setter
    def inventory_age_days(self, inventory_age_days):
        """Sets the inventory_age_days of this InventoryStorageActivity.


        :param inventory_age_days: The inventory_age_days of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._inventory_age_days = inventory_age_days

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this InventoryStorageActivity.


        :param warehouse_id: The warehouse_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_id = warehouse_id

    @property
    def warehouse_name(self):
        """Gets the warehouse_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_name

    @warehouse_name.setter
    def warehouse_name(self, warehouse_name):
        """Sets the warehouse_name of this InventoryStorageActivity.


        :param warehouse_name: The warehouse_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_name = warehouse_name

    @property
    def warehouse_zone_id(self):
        """Gets the warehouse_zone_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_zone_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_zone_id

    @warehouse_zone_id.setter
    def warehouse_zone_id(self, warehouse_zone_id):
        """Sets the warehouse_zone_id of this InventoryStorageActivity.


        :param warehouse_zone_id: The warehouse_zone_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_zone_id = warehouse_zone_id

    @property
    def warehouse_zone_name(self):
        """Gets the warehouse_zone_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_zone_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_zone_name

    @warehouse_zone_name.setter
    def warehouse_zone_name(self, warehouse_zone_name):
        """Sets the warehouse_zone_name of this InventoryStorageActivity.


        :param warehouse_zone_name: The warehouse_zone_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_zone_name = warehouse_zone_name

    @property
    def warehouse_zone_address(self):
        """Gets the warehouse_zone_address of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_zone_address of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_zone_address

    @warehouse_zone_address.setter
    def warehouse_zone_address(self, warehouse_zone_address):
        """Sets the warehouse_zone_address of this InventoryStorageActivity.


        :param warehouse_zone_address: The warehouse_zone_address of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_zone_address = warehouse_zone_address

    @property
    def warehouse_building_id(self):
        """Gets the warehouse_building_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_building_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_building_id

    @warehouse_building_id.setter
    def warehouse_building_id(self, warehouse_building_id):
        """Sets the warehouse_building_id of this InventoryStorageActivity.


        :param warehouse_building_id: The warehouse_building_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_building_id = warehouse_building_id

    @property
    def warehouse_building_name(self):
        """Gets the warehouse_building_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_building_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_building_name

    @warehouse_building_name.setter
    def warehouse_building_name(self, warehouse_building_name):
        """Sets the warehouse_building_name of this InventoryStorageActivity.


        :param warehouse_building_name: The warehouse_building_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_building_name = warehouse_building_name

    @property
    def warehouse_aisle_id(self):
        """Gets the warehouse_aisle_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_aisle_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_aisle_id

    @warehouse_aisle_id.setter
    def warehouse_aisle_id(self, warehouse_aisle_id):
        """Sets the warehouse_aisle_id of this InventoryStorageActivity.


        :param warehouse_aisle_id: The warehouse_aisle_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_aisle_id = warehouse_aisle_id

    @property
    def warehouse_aisle_address(self):
        """Gets the warehouse_aisle_address of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_aisle_address of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_aisle_address

    @warehouse_aisle_address.setter
    def warehouse_aisle_address(self, warehouse_aisle_address):
        """Sets the warehouse_aisle_address of this InventoryStorageActivity.


        :param warehouse_aisle_address: The warehouse_aisle_address of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_aisle_address = warehouse_aisle_address

    @property
    def warehouse_location_origin_id(self):
        """Gets the warehouse_location_origin_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_origin_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_origin_id

    @warehouse_location_origin_id.setter
    def warehouse_location_origin_id(self, warehouse_location_origin_id):
        """Sets the warehouse_location_origin_id of this InventoryStorageActivity.


        :param warehouse_location_origin_id: The warehouse_location_origin_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_origin_id = warehouse_location_origin_id

    @property
    def warehouse_location_origin_name(self):
        """Gets the warehouse_location_origin_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_origin_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_location_origin_name

    @warehouse_location_origin_name.setter
    def warehouse_location_origin_name(self, warehouse_location_origin_name):
        """Sets the warehouse_location_origin_name of this InventoryStorageActivity.


        :param warehouse_location_origin_name: The warehouse_location_origin_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_location_origin_name = warehouse_location_origin_name

    @property
    def warehouse_location_billing_type_id(self):
        """Gets the warehouse_location_billing_type_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_billing_type_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_billing_type_id

    @warehouse_location_billing_type_id.setter
    def warehouse_location_billing_type_id(self, warehouse_location_billing_type_id):
        """Sets the warehouse_location_billing_type_id of this InventoryStorageActivity.


        :param warehouse_location_billing_type_id: The warehouse_location_billing_type_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_billing_type_id = warehouse_location_billing_type_id

    @property
    def warehouse_location_billing_type_name(self):
        """Gets the warehouse_location_billing_type_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_billing_type_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_location_billing_type_name

    @warehouse_location_billing_type_name.setter
    def warehouse_location_billing_type_name(self, warehouse_location_billing_type_name):
        """Sets the warehouse_location_billing_type_name of this InventoryStorageActivity.


        :param warehouse_location_billing_type_name: The warehouse_location_billing_type_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_location_billing_type_name = warehouse_location_billing_type_name

    @property
    def warehouse_location_behavior_type_id(self):
        """Gets the warehouse_location_behavior_type_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_behavior_type_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_behavior_type_id

    @warehouse_location_behavior_type_id.setter
    def warehouse_location_behavior_type_id(self, warehouse_location_behavior_type_id):
        """Sets the warehouse_location_behavior_type_id of this InventoryStorageActivity.


        :param warehouse_location_behavior_type_id: The warehouse_location_behavior_type_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_behavior_type_id = warehouse_location_behavior_type_id

    @property
    def warehouse_location_behavior_type_name(self):
        """Gets the warehouse_location_behavior_type_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_behavior_type_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_location_behavior_type_name

    @warehouse_location_behavior_type_name.setter
    def warehouse_location_behavior_type_name(self, warehouse_location_behavior_type_name):
        """Sets the warehouse_location_behavior_type_name of this InventoryStorageActivity.


        :param warehouse_location_behavior_type_name: The warehouse_location_behavior_type_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_location_behavior_type_name = warehouse_location_behavior_type_name

    @property
    def warehouse_location_footprint_id(self):
        """Gets the warehouse_location_footprint_id of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_footprint_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_footprint_id

    @warehouse_location_footprint_id.setter
    def warehouse_location_footprint_id(self, warehouse_location_footprint_id):
        """Sets the warehouse_location_footprint_id of this InventoryStorageActivity.


        :param warehouse_location_footprint_id: The warehouse_location_footprint_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_footprint_id = warehouse_location_footprint_id

    @property
    def warehouse_location_footprint_name(self):
        """Gets the warehouse_location_footprint_name of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_footprint_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_location_footprint_name

    @warehouse_location_footprint_name.setter
    def warehouse_location_footprint_name(self, warehouse_location_footprint_name):
        """Sets the warehouse_location_footprint_name of this InventoryStorageActivity.


        :param warehouse_location_footprint_name: The warehouse_location_footprint_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._warehouse_location_footprint_name = warehouse_location_footprint_name

    @property
    def warehouse_location_footprint_width(self):
        """Gets the warehouse_location_footprint_width of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_footprint_width of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_footprint_width

    @warehouse_location_footprint_width.setter
    def warehouse_location_footprint_width(self, warehouse_location_footprint_width):
        """Sets the warehouse_location_footprint_width of this InventoryStorageActivity.


        :param warehouse_location_footprint_width: The warehouse_location_footprint_width of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_footprint_width = warehouse_location_footprint_width

    @property
    def warehouse_location_footprint_height(self):
        """Gets the warehouse_location_footprint_height of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_footprint_height of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_footprint_height

    @warehouse_location_footprint_height.setter
    def warehouse_location_footprint_height(self, warehouse_location_footprint_height):
        """Sets the warehouse_location_footprint_height of this InventoryStorageActivity.


        :param warehouse_location_footprint_height: The warehouse_location_footprint_height of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_footprint_height = warehouse_location_footprint_height

    @property
    def warehouse_location_footprint_depth(self):
        """Gets the warehouse_location_footprint_depth of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_footprint_depth of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_footprint_depth

    @warehouse_location_footprint_depth.setter
    def warehouse_location_footprint_depth(self, warehouse_location_footprint_depth):
        """Sets the warehouse_location_footprint_depth of this InventoryStorageActivity.


        :param warehouse_location_footprint_depth: The warehouse_location_footprint_depth of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_footprint_depth = warehouse_location_footprint_depth

    @property
    def warehouse_location_cubic_feet(self):
        """Gets the warehouse_location_cubic_feet of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_cubic_feet of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._warehouse_location_cubic_feet

    @warehouse_location_cubic_feet.setter
    def warehouse_location_cubic_feet(self, warehouse_location_cubic_feet):
        """Sets the warehouse_location_cubic_feet of this InventoryStorageActivity.


        :param warehouse_location_cubic_feet: The warehouse_location_cubic_feet of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._warehouse_location_cubic_feet = warehouse_location_cubic_feet

    @property
    def warehouse_location_level(self):
        """Gets the warehouse_location_level of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_level of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_level

    @warehouse_location_level.setter
    def warehouse_location_level(self, warehouse_location_level):
        """Sets the warehouse_location_level of this InventoryStorageActivity.


        :param warehouse_location_level: The warehouse_location_level of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_level = warehouse_location_level

    @property
    def warehouse_location_bay(self):
        """Gets the warehouse_location_bay of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_bay of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_bay

    @warehouse_location_bay.setter
    def warehouse_location_bay(self, warehouse_location_bay):
        """Sets the warehouse_location_bay of this InventoryStorageActivity.


        :param warehouse_location_bay: The warehouse_location_bay of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_bay = warehouse_location_bay

    @property
    def warehouse_location_number(self):
        """Gets the warehouse_location_number of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_number of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_number

    @warehouse_location_number.setter
    def warehouse_location_number(self, warehouse_location_number):
        """Sets the warehouse_location_number of this InventoryStorageActivity.


        :param warehouse_location_number: The warehouse_location_number of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_number = warehouse_location_number

    @property
    def warehouse_location_online(self):
        """Gets the warehouse_location_online of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_online of this InventoryStorageActivity.  # noqa: E501
        :rtype: bool
        """
        return self._warehouse_location_online

    @warehouse_location_online.setter
    def warehouse_location_online(self, warehouse_location_online):
        """Sets the warehouse_location_online of this InventoryStorageActivity.


        :param warehouse_location_online: The warehouse_location_online of this InventoryStorageActivity.  # noqa: E501
        :type: bool
        """

        self._warehouse_location_online = warehouse_location_online

    @property
    def warehouse_location_priority_code(self):
        """Gets the warehouse_location_priority_code of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_priority_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_priority_code

    @warehouse_location_priority_code.setter
    def warehouse_location_priority_code(self, warehouse_location_priority_code):
        """Sets the warehouse_location_priority_code of this InventoryStorageActivity.


        :param warehouse_location_priority_code: The warehouse_location_priority_code of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_priority_code = warehouse_location_priority_code

    @property
    def warehouse_location_allow_item_mixing(self):
        """Gets the warehouse_location_allow_item_mixing of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_allow_item_mixing of this InventoryStorageActivity.  # noqa: E501
        :rtype: bool
        """
        return self._warehouse_location_allow_item_mixing

    @warehouse_location_allow_item_mixing.setter
    def warehouse_location_allow_item_mixing(self, warehouse_location_allow_item_mixing):
        """Sets the warehouse_location_allow_item_mixing of this InventoryStorageActivity.


        :param warehouse_location_allow_item_mixing: The warehouse_location_allow_item_mixing of this InventoryStorageActivity.  # noqa: E501
        :type: bool
        """

        self._warehouse_location_allow_item_mixing = warehouse_location_allow_item_mixing

    @property
    def warehouse_location_cost(self):
        """Gets the warehouse_location_cost of this InventoryStorageActivity.  # noqa: E501


        :return: The warehouse_location_cost of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_location_cost

    @warehouse_location_cost.setter
    def warehouse_location_cost(self, warehouse_location_cost):
        """Sets the warehouse_location_cost of this InventoryStorageActivity.


        :param warehouse_location_cost: The warehouse_location_cost of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._warehouse_location_cost = warehouse_location_cost

    @property
    def sku(self):
        """Gets the sku of this InventoryStorageActivity.  # noqa: E501


        :return: The sku of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this InventoryStorageActivity.


        :param sku: The sku of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._sku = sku

    @property
    def item_vendor_sku(self):
        """Gets the item_vendor_sku of this InventoryStorageActivity.  # noqa: E501


        :return: The item_vendor_sku of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_vendor_sku

    @item_vendor_sku.setter
    def item_vendor_sku(self, item_vendor_sku):
        """Sets the item_vendor_sku of this InventoryStorageActivity.


        :param item_vendor_sku: The item_vendor_sku of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_vendor_sku = item_vendor_sku

    @property
    def item_upc(self):
        """Gets the item_upc of this InventoryStorageActivity.  # noqa: E501


        :return: The item_upc of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_upc

    @item_upc.setter
    def item_upc(self, item_upc):
        """Sets the item_upc of this InventoryStorageActivity.


        :param item_upc: The item_upc of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_upc = item_upc

    @property
    def item_major_group(self):
        """Gets the item_major_group of this InventoryStorageActivity.  # noqa: E501


        :return: The item_major_group of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._item_major_group

    @item_major_group.setter
    def item_major_group(self, item_major_group):
        """Sets the item_major_group of this InventoryStorageActivity.


        :param item_major_group: The item_major_group of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._item_major_group = item_major_group

    @property
    def item_major_group_name(self):
        """Gets the item_major_group_name of this InventoryStorageActivity.  # noqa: E501


        :return: The item_major_group_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_major_group_name

    @item_major_group_name.setter
    def item_major_group_name(self, item_major_group_name):
        """Sets the item_major_group_name of this InventoryStorageActivity.


        :param item_major_group_name: The item_major_group_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_major_group_name = item_major_group_name

    @property
    def item_sub_group(self):
        """Gets the item_sub_group of this InventoryStorageActivity.  # noqa: E501


        :return: The item_sub_group of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._item_sub_group

    @item_sub_group.setter
    def item_sub_group(self, item_sub_group):
        """Sets the item_sub_group of this InventoryStorageActivity.


        :param item_sub_group: The item_sub_group of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._item_sub_group = item_sub_group

    @property
    def item_sub_group_name(self):
        """Gets the item_sub_group_name of this InventoryStorageActivity.  # noqa: E501


        :return: The item_sub_group_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_sub_group_name

    @item_sub_group_name.setter
    def item_sub_group_name(self, item_sub_group_name):
        """Sets the item_sub_group_name of this InventoryStorageActivity.


        :param item_sub_group_name: The item_sub_group_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_sub_group_name = item_sub_group_name

    @property
    def item_product_code(self):
        """Gets the item_product_code of this InventoryStorageActivity.  # noqa: E501


        :return: The item_product_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._item_product_code

    @item_product_code.setter
    def item_product_code(self, item_product_code):
        """Sets the item_product_code of this InventoryStorageActivity.


        :param item_product_code: The item_product_code of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._item_product_code = item_product_code

    @property
    def item_product_code_name(self):
        """Gets the item_product_code_name of this InventoryStorageActivity.  # noqa: E501


        :return: The item_product_code_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_product_code_name

    @item_product_code_name.setter
    def item_product_code_name(self, item_product_code_name):
        """Sets the item_product_code_name of this InventoryStorageActivity.


        :param item_product_code_name: The item_product_code_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_product_code_name = item_product_code_name

    @property
    def item_account_code(self):
        """Gets the item_account_code of this InventoryStorageActivity.  # noqa: E501


        :return: The item_account_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_account_code

    @item_account_code.setter
    def item_account_code(self, item_account_code):
        """Sets the item_account_code of this InventoryStorageActivity.


        :param item_account_code: The item_account_code of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_account_code = item_account_code

    @property
    def item_account_code_name(self):
        """Gets the item_account_code_name of this InventoryStorageActivity.  # noqa: E501


        :return: The item_account_code_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_account_code_name

    @item_account_code_name.setter
    def item_account_code_name(self, item_account_code_name):
        """Sets the item_account_code_name of this InventoryStorageActivity.


        :param item_account_code_name: The item_account_code_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_account_code_name = item_account_code_name

    @property
    def item_summary_code(self):
        """Gets the item_summary_code of this InventoryStorageActivity.  # noqa: E501


        :return: The item_summary_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._item_summary_code

    @item_summary_code.setter
    def item_summary_code(self, item_summary_code):
        """Sets the item_summary_code of this InventoryStorageActivity.


        :param item_summary_code: The item_summary_code of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._item_summary_code = item_summary_code

    @property
    def item_summary_code_name(self):
        """Gets the item_summary_code_name of this InventoryStorageActivity.  # noqa: E501


        :return: The item_summary_code_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_summary_code_name

    @item_summary_code_name.setter
    def item_summary_code_name(self, item_summary_code_name):
        """Sets the item_summary_code_name of this InventoryStorageActivity.


        :param item_summary_code_name: The item_summary_code_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_summary_code_name = item_summary_code_name

    @property
    def item_sector(self):
        """Gets the item_sector of this InventoryStorageActivity.  # noqa: E501


        :return: The item_sector of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._item_sector

    @item_sector.setter
    def item_sector(self, item_sector):
        """Sets the item_sector of this InventoryStorageActivity.


        :param item_sector: The item_sector of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._item_sector = item_sector

    @property
    def item_cubic_feet(self):
        """Gets the item_cubic_feet of this InventoryStorageActivity.  # noqa: E501


        :return: The item_cubic_feet of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._item_cubic_feet

    @item_cubic_feet.setter
    def item_cubic_feet(self, item_cubic_feet):
        """Sets the item_cubic_feet of this InventoryStorageActivity.


        :param item_cubic_feet: The item_cubic_feet of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._item_cubic_feet = item_cubic_feet

    @property
    def po_no(self):
        """Gets the po_no of this InventoryStorageActivity.  # noqa: E501


        :return: The po_no of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._po_no

    @po_no.setter
    def po_no(self, po_no):
        """Sets the po_no of this InventoryStorageActivity.


        :param po_no: The po_no of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._po_no = po_no

    @property
    def receipt_distribution_date(self):
        """Gets the receipt_distribution_date of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_distribution_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: datetime
        """
        return self._receipt_distribution_date

    @receipt_distribution_date.setter
    def receipt_distribution_date(self, receipt_distribution_date):
        """Sets the receipt_distribution_date of this InventoryStorageActivity.


        :param receipt_distribution_date: The receipt_distribution_date of this InventoryStorageActivity.  # noqa: E501
        :type: datetime
        """

        self._receipt_distribution_date = receipt_distribution_date

    @property
    def receipt_units_per_wrap(self):
        """Gets the receipt_units_per_wrap of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_units_per_wrap of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_units_per_wrap

    @receipt_units_per_wrap.setter
    def receipt_units_per_wrap(self, receipt_units_per_wrap):
        """Sets the receipt_units_per_wrap of this InventoryStorageActivity.


        :param receipt_units_per_wrap: The receipt_units_per_wrap of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_units_per_wrap = receipt_units_per_wrap

    @property
    def receipt_quantity_per_inner_pack(self):
        """Gets the receipt_quantity_per_inner_pack of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_quantity_per_inner_pack of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_quantity_per_inner_pack

    @receipt_quantity_per_inner_pack.setter
    def receipt_quantity_per_inner_pack(self, receipt_quantity_per_inner_pack):
        """Sets the receipt_quantity_per_inner_pack of this InventoryStorageActivity.


        :param receipt_quantity_per_inner_pack: The receipt_quantity_per_inner_pack of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_quantity_per_inner_pack = receipt_quantity_per_inner_pack

    @property
    def receipt_quantity_per_case(self):
        """Gets the receipt_quantity_per_case of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_quantity_per_case of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_quantity_per_case

    @receipt_quantity_per_case.setter
    def receipt_quantity_per_case(self, receipt_quantity_per_case):
        """Sets the receipt_quantity_per_case of this InventoryStorageActivity.


        :param receipt_quantity_per_case: The receipt_quantity_per_case of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_quantity_per_case = receipt_quantity_per_case

    @property
    def receipt_quantity_per_pallet(self):
        """Gets the receipt_quantity_per_pallet of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_quantity_per_pallet of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_quantity_per_pallet

    @receipt_quantity_per_pallet.setter
    def receipt_quantity_per_pallet(self, receipt_quantity_per_pallet):
        """Sets the receipt_quantity_per_pallet of this InventoryStorageActivity.


        :param receipt_quantity_per_pallet: The receipt_quantity_per_pallet of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_quantity_per_pallet = receipt_quantity_per_pallet

    @property
    def receipt_revision_date(self):
        """Gets the receipt_revision_date of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_revision_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_revision_date

    @receipt_revision_date.setter
    def receipt_revision_date(self, receipt_revision_date):
        """Sets the receipt_revision_date of this InventoryStorageActivity.


        :param receipt_revision_date: The receipt_revision_date of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_revision_date = receipt_revision_date

    @property
    def receipt_production_lot(self):
        """Gets the receipt_production_lot of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_production_lot of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_production_lot

    @receipt_production_lot.setter
    def receipt_production_lot(self, receipt_production_lot):
        """Sets the receipt_production_lot of this InventoryStorageActivity.


        :param receipt_production_lot: The receipt_production_lot of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_production_lot = receipt_production_lot

    @property
    def receipt_receive_date(self):
        """Gets the receipt_receive_date of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_receive_date of this InventoryStorageActivity.  # noqa: E501
        :rtype: datetime
        """
        return self._receipt_receive_date

    @receipt_receive_date.setter
    def receipt_receive_date(self, receipt_receive_date):
        """Sets the receipt_receive_date of this InventoryStorageActivity.


        :param receipt_receive_date: The receipt_receive_date of this InventoryStorageActivity.  # noqa: E501
        :type: datetime
        """

        self._receipt_receive_date = receipt_receive_date

    @property
    def receipt_status(self):
        """Gets the receipt_status of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_status of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_status

    @receipt_status.setter
    def receipt_status(self, receipt_status):
        """Sets the receipt_status of this InventoryStorageActivity.


        :param receipt_status: The receipt_status of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_status = receipt_status

    @property
    def receipt_status_name(self):
        """Gets the receipt_status_name of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_status_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_status_name

    @receipt_status_name.setter
    def receipt_status_name(self, receipt_status_name):
        """Sets the receipt_status_name of this InventoryStorageActivity.


        :param receipt_status_name: The receipt_status_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_status_name = receipt_status_name

    @property
    def receipt_unit_code(self):
        """Gets the receipt_unit_code of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_unit_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_unit_code

    @receipt_unit_code.setter
    def receipt_unit_code(self, receipt_unit_code):
        """Sets the receipt_unit_code of this InventoryStorageActivity.


        :param receipt_unit_code: The receipt_unit_code of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_unit_code = receipt_unit_code

    @property
    def receipt_unit_code_text(self):
        """Gets the receipt_unit_code_text of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_unit_code_text of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_unit_code_text

    @receipt_unit_code_text.setter
    def receipt_unit_code_text(self, receipt_unit_code_text):
        """Sets the receipt_unit_code_text of this InventoryStorageActivity.


        :param receipt_unit_code_text: The receipt_unit_code_text of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_unit_code_text = receipt_unit_code_text

    @property
    def receipt_wrap_code(self):
        """Gets the receipt_wrap_code of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_wrap_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._receipt_wrap_code

    @receipt_wrap_code.setter
    def receipt_wrap_code(self, receipt_wrap_code):
        """Sets the receipt_wrap_code of this InventoryStorageActivity.


        :param receipt_wrap_code: The receipt_wrap_code of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._receipt_wrap_code = receipt_wrap_code

    @property
    def receipt_wrap_code_text(self):
        """Gets the receipt_wrap_code_text of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_wrap_code_text of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_wrap_code_text

    @receipt_wrap_code_text.setter
    def receipt_wrap_code_text(self, receipt_wrap_code_text):
        """Sets the receipt_wrap_code_text of this InventoryStorageActivity.


        :param receipt_wrap_code_text: The receipt_wrap_code_text of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_wrap_code_text = receipt_wrap_code_text

    @property
    def receipt_case_weight(self):
        """Gets the receipt_case_weight of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_case_weight of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._receipt_case_weight

    @receipt_case_weight.setter
    def receipt_case_weight(self, receipt_case_weight):
        """Sets the receipt_case_weight of this InventoryStorageActivity.


        :param receipt_case_weight: The receipt_case_weight of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._receipt_case_weight = receipt_case_weight

    @property
    def receipt_product_id_tag(self):
        """Gets the receipt_product_id_tag of this InventoryStorageActivity.  # noqa: E501


        :return: The receipt_product_id_tag of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._receipt_product_id_tag

    @receipt_product_id_tag.setter
    def receipt_product_id_tag(self, receipt_product_id_tag):
        """Sets the receipt_product_id_tag of this InventoryStorageActivity.


        :param receipt_product_id_tag: The receipt_product_id_tag of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._receipt_product_id_tag = receipt_product_id_tag

    @property
    def alcohol_type_id(self):
        """Gets the alcohol_type_id of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_type_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._alcohol_type_id

    @alcohol_type_id.setter
    def alcohol_type_id(self, alcohol_type_id):
        """Sets the alcohol_type_id of this InventoryStorageActivity.


        :param alcohol_type_id: The alcohol_type_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._alcohol_type_id = alcohol_type_id

    @property
    def alcohol_type_name(self):
        """Gets the alcohol_type_name of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_type_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_type_name

    @alcohol_type_name.setter
    def alcohol_type_name(self, alcohol_type_name):
        """Sets the alcohol_type_name of this InventoryStorageActivity.


        :param alcohol_type_name: The alcohol_type_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_type_name = alcohol_type_name

    @property
    def alcohol_content(self):
        """Gets the alcohol_content of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_content of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._alcohol_content

    @alcohol_content.setter
    def alcohol_content(self, alcohol_content):
        """Sets the alcohol_content of this InventoryStorageActivity.


        :param alcohol_content: The alcohol_content of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._alcohol_content = alcohol_content

    @property
    def alcohol_container_id(self):
        """Gets the alcohol_container_id of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_container_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._alcohol_container_id

    @alcohol_container_id.setter
    def alcohol_container_id(self, alcohol_container_id):
        """Sets the alcohol_container_id of this InventoryStorageActivity.


        :param alcohol_container_id: The alcohol_container_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._alcohol_container_id = alcohol_container_id

    @property
    def alcohol_container_name(self):
        """Gets the alcohol_container_name of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_container_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_container_name

    @alcohol_container_name.setter
    def alcohol_container_name(self, alcohol_container_name):
        """Sets the alcohol_container_name of this InventoryStorageActivity.


        :param alcohol_container_name: The alcohol_container_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_container_name = alcohol_container_name

    @property
    def alcohol_container_volume(self):
        """Gets the alcohol_container_volume of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_container_volume of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._alcohol_container_volume

    @alcohol_container_volume.setter
    def alcohol_container_volume(self, alcohol_container_volume):
        """Sets the alcohol_container_volume of this InventoryStorageActivity.


        :param alcohol_container_volume: The alcohol_container_volume of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._alcohol_container_volume = alcohol_container_volume

    @property
    def alcohol_vintage_year(self):
        """Gets the alcohol_vintage_year of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_vintage_year of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_vintage_year

    @alcohol_vintage_year.setter
    def alcohol_vintage_year(self, alcohol_vintage_year):
        """Sets the alcohol_vintage_year of this InventoryStorageActivity.


        :param alcohol_vintage_year: The alcohol_vintage_year of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_vintage_year = alcohol_vintage_year

    @property
    def alcohol_country_id(self):
        """Gets the alcohol_country_id of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_country_id of this InventoryStorageActivity.  # noqa: E501
        :rtype: int
        """
        return self._alcohol_country_id

    @alcohol_country_id.setter
    def alcohol_country_id(self, alcohol_country_id):
        """Sets the alcohol_country_id of this InventoryStorageActivity.


        :param alcohol_country_id: The alcohol_country_id of this InventoryStorageActivity.  # noqa: E501
        :type: int
        """

        self._alcohol_country_id = alcohol_country_id

    @property
    def alcohol_country_name(self):
        """Gets the alcohol_country_name of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_country_name of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_country_name

    @alcohol_country_name.setter
    def alcohol_country_name(self, alcohol_country_name):
        """Sets the alcohol_country_name of this InventoryStorageActivity.


        :param alcohol_country_name: The alcohol_country_name of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_country_name = alcohol_country_name

    @property
    def alcohol_state(self):
        """Gets the alcohol_state of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_state of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_state

    @alcohol_state.setter
    def alcohol_state(self, alcohol_state):
        """Sets the alcohol_state of this InventoryStorageActivity.


        :param alcohol_state: The alcohol_state of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_state = alcohol_state

    @property
    def alcohol_region(self):
        """Gets the alcohol_region of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_region of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_region

    @alcohol_region.setter
    def alcohol_region(self, alcohol_region):
        """Sets the alcohol_region of this InventoryStorageActivity.


        :param alcohol_region: The alcohol_region of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_region = alcohol_region

    @property
    def alcohol_brand(self):
        """Gets the alcohol_brand of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_brand of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_brand

    @alcohol_brand.setter
    def alcohol_brand(self, alcohol_brand):
        """Sets the alcohol_brand of this InventoryStorageActivity.


        :param alcohol_brand: The alcohol_brand of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_brand = alcohol_brand

    @property
    def alcohol_upc_code(self):
        """Gets the alcohol_upc_code of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_upc_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_upc_code

    @alcohol_upc_code.setter
    def alcohol_upc_code(self, alcohol_upc_code):
        """Sets the alcohol_upc_code of this InventoryStorageActivity.


        :param alcohol_upc_code: The alcohol_upc_code of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_upc_code = alcohol_upc_code

    @property
    def alcohol_nabca_code(self):
        """Gets the alcohol_nabca_code of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_nabca_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_nabca_code

    @alcohol_nabca_code.setter
    def alcohol_nabca_code(self, alcohol_nabca_code):
        """Sets the alcohol_nabca_code of this InventoryStorageActivity.


        :param alcohol_nabca_code: The alcohol_nabca_code of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_nabca_code = alcohol_nabca_code

    @property
    def alcohol_unimerc_code(self):
        """Gets the alcohol_unimerc_code of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_unimerc_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_unimerc_code

    @alcohol_unimerc_code.setter
    def alcohol_unimerc_code(self, alcohol_unimerc_code):
        """Sets the alcohol_unimerc_code of this InventoryStorageActivity.


        :param alcohol_unimerc_code: The alcohol_unimerc_code of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_unimerc_code = alcohol_unimerc_code

    @property
    def alcohol_scc_code(self):
        """Gets the alcohol_scc_code of this InventoryStorageActivity.  # noqa: E501


        :return: The alcohol_scc_code of this InventoryStorageActivity.  # noqa: E501
        :rtype: str
        """
        return self._alcohol_scc_code

    @alcohol_scc_code.setter
    def alcohol_scc_code(self, alcohol_scc_code):
        """Sets the alcohol_scc_code of this InventoryStorageActivity.


        :param alcohol_scc_code: The alcohol_scc_code of this InventoryStorageActivity.  # noqa: E501
        :type: str
        """

        self._alcohol_scc_code = alcohol_scc_code

    @property
    def billing_quantity(self):
        """Gets the billing_quantity of this InventoryStorageActivity.  # noqa: E501


        :return: The billing_quantity of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._billing_quantity

    @billing_quantity.setter
    def billing_quantity(self, billing_quantity):
        """Sets the billing_quantity of this InventoryStorageActivity.


        :param billing_quantity: The billing_quantity of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._billing_quantity = billing_quantity

    @property
    def charge_rate(self):
        """Gets the charge_rate of this InventoryStorageActivity.  # noqa: E501


        :return: The charge_rate of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._charge_rate

    @charge_rate.setter
    def charge_rate(self, charge_rate):
        """Sets the charge_rate of this InventoryStorageActivity.


        :param charge_rate: The charge_rate of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._charge_rate = charge_rate

    @property
    def extended_charge(self):
        """Gets the extended_charge of this InventoryStorageActivity.  # noqa: E501


        :return: The extended_charge of this InventoryStorageActivity.  # noqa: E501
        :rtype: float
        """
        return self._extended_charge

    @extended_charge.setter
    def extended_charge(self, extended_charge):
        """Sets the extended_charge of this InventoryStorageActivity.


        :param extended_charge: The extended_charge of this InventoryStorageActivity.  # noqa: E501
        :type: float
        """

        self._extended_charge = extended_charge

    @property
    def custom_fields(self):
        """Gets the custom_fields of this InventoryStorageActivity.  # noqa: E501


        :return: The custom_fields of this InventoryStorageActivity.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this InventoryStorageActivity.


        :param custom_fields: The custom_fields of this InventoryStorageActivity.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InventoryStorageActivity):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
