# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from Infoplus.models.order_line_item import OrderLineItem  # noqa: F401,E501


class OmsOrder(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'lob_id': 'int',
        'external_id': 'str',
        'oms_order_no': 'int',
        'total': 'float',
        'order_status': 'str',
        'order_entry_program_id': 'int',
        'legacy_user_id': 'int',
        'id': 'int',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'next_oms_order_id': 'int',
        'customer_id': 'int',
        'tax': 'float',
        'shipping_handling': 'float',
        'sh_override_amount': 'float',
        'integration_partner_id': 'int',
        'order_source_id': 'int',
        'batch_no': 'str',
        'is_gift': 'bool',
        'gift_message_to': 'str',
        'gift_message_from': 'str',
        'gift_message': 'str',
        'email_recipient': 'bool',
        'mail_recipient': 'bool',
        'key_code': 'str',
        'key_code_description': 'str',
        'deliver_on_date': 'datetime',
        'dist_charges': 'float',
        'sub_total': 'float',
        'ship_via': 'str',
        'line_items': 'list[OrderLineItem]',
        'ship_to_first_name': 'str',
        'ship_to_last_name': 'str',
        'ship_to_company': 'str',
        'ship_to_street1': 'str',
        'ship_to_street2': 'str',
        'ship_to_street3': 'str',
        'ship_to_city': 'str',
        'ship_to_state': 'str',
        'ship_to_zip': 'str',
        'ship_to_email': 'str',
        'ship_to_phone': 'str',
        'bill_to_first_name': 'str',
        'bill_to_last_name': 'str',
        'bill_to_company': 'str',
        'bill_to_street1': 'str',
        'bill_to_street2': 'str',
        'bill_to_street3': 'str',
        'bill_to_city': 'str',
        'bill_to_state': 'str',
        'bill_to_zip': 'str',
        'bill_to_email': 'str',
        'bill_to_phone': 'str',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'lob_id': 'lobId',
        'external_id': 'externalId',
        'oms_order_no': 'omsOrderNo',
        'total': 'total',
        'order_status': 'orderStatus',
        'order_entry_program_id': 'orderEntryProgramId',
        'legacy_user_id': 'legacyUserId',
        'id': 'id',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'next_oms_order_id': 'nextOMSOrderId',
        'customer_id': 'customerId',
        'tax': 'tax',
        'shipping_handling': 'shippingHandling',
        'sh_override_amount': 'shOverrideAmount',
        'integration_partner_id': 'integrationPartnerId',
        'order_source_id': 'orderSourceId',
        'batch_no': 'batchNo',
        'is_gift': 'isGift',
        'gift_message_to': 'giftMessageTo',
        'gift_message_from': 'giftMessageFrom',
        'gift_message': 'giftMessage',
        'email_recipient': 'emailRecipient',
        'mail_recipient': 'mailRecipient',
        'key_code': 'keyCode',
        'key_code_description': 'keyCodeDescription',
        'deliver_on_date': 'deliverOnDate',
        'dist_charges': 'distCharges',
        'sub_total': 'subTotal',
        'ship_via': 'shipVia',
        'line_items': 'lineItems',
        'ship_to_first_name': 'shipToFirstName',
        'ship_to_last_name': 'shipToLastName',
        'ship_to_company': 'shipToCompany',
        'ship_to_street1': 'shipToStreet1',
        'ship_to_street2': 'shipToStreet2',
        'ship_to_street3': 'shipToStreet3',
        'ship_to_city': 'shipToCity',
        'ship_to_state': 'shipToState',
        'ship_to_zip': 'shipToZip',
        'ship_to_email': 'shipToEmail',
        'ship_to_phone': 'shipToPhone',
        'bill_to_first_name': 'billToFirstName',
        'bill_to_last_name': 'billToLastName',
        'bill_to_company': 'billToCompany',
        'bill_to_street1': 'billToStreet1',
        'bill_to_street2': 'billToStreet2',
        'bill_to_street3': 'billToStreet3',
        'bill_to_city': 'billToCity',
        'bill_to_state': 'billToState',
        'bill_to_zip': 'billToZip',
        'bill_to_email': 'billToEmail',
        'bill_to_phone': 'billToPhone',
        'custom_fields': 'customFields'
    }

    def __init__(self, lob_id=None, external_id=None, oms_order_no=None, total=None, order_status=None, order_entry_program_id=None, legacy_user_id=None, id=None, create_date=None, modify_date=None, next_oms_order_id=None, customer_id=None, tax=None, shipping_handling=None, sh_override_amount=None, integration_partner_id=None, order_source_id=None, batch_no=None, is_gift=False, gift_message_to=None, gift_message_from=None, gift_message=None, email_recipient=False, mail_recipient=False, key_code=None, key_code_description=None, deliver_on_date=None, dist_charges=None, sub_total=None, ship_via=None, line_items=None, ship_to_first_name=None, ship_to_last_name=None, ship_to_company=None, ship_to_street1=None, ship_to_street2=None, ship_to_street3=None, ship_to_city=None, ship_to_state=None, ship_to_zip=None, ship_to_email=None, ship_to_phone=None, bill_to_first_name=None, bill_to_last_name=None, bill_to_company=None, bill_to_street1=None, bill_to_street2=None, bill_to_street3=None, bill_to_city=None, bill_to_state=None, bill_to_zip=None, bill_to_email=None, bill_to_phone=None, custom_fields=None):  # noqa: E501
        """OmsOrder - a model defined in Swagger"""  # noqa: E501

        self._lob_id = None
        self._external_id = None
        self._oms_order_no = None
        self._total = None
        self._order_status = None
        self._order_entry_program_id = None
        self._legacy_user_id = None
        self._id = None
        self._create_date = None
        self._modify_date = None
        self._next_oms_order_id = None
        self._customer_id = None
        self._tax = None
        self._shipping_handling = None
        self._sh_override_amount = None
        self._integration_partner_id = None
        self._order_source_id = None
        self._batch_no = None
        self._is_gift = None
        self._gift_message_to = None
        self._gift_message_from = None
        self._gift_message = None
        self._email_recipient = None
        self._mail_recipient = None
        self._key_code = None
        self._key_code_description = None
        self._deliver_on_date = None
        self._dist_charges = None
        self._sub_total = None
        self._ship_via = None
        self._line_items = None
        self._ship_to_first_name = None
        self._ship_to_last_name = None
        self._ship_to_company = None
        self._ship_to_street1 = None
        self._ship_to_street2 = None
        self._ship_to_street3 = None
        self._ship_to_city = None
        self._ship_to_state = None
        self._ship_to_zip = None
        self._ship_to_email = None
        self._ship_to_phone = None
        self._bill_to_first_name = None
        self._bill_to_last_name = None
        self._bill_to_company = None
        self._bill_to_street1 = None
        self._bill_to_street2 = None
        self._bill_to_street3 = None
        self._bill_to_city = None
        self._bill_to_state = None
        self._bill_to_zip = None
        self._bill_to_email = None
        self._bill_to_phone = None
        self._custom_fields = None
        self.discriminator = None

        self.lob_id = lob_id
        if external_id is not None:
            self.external_id = external_id
        if oms_order_no is not None:
            self.oms_order_no = oms_order_no
        if total is not None:
            self.total = total
        if order_status is not None:
            self.order_status = order_status
        if order_entry_program_id is not None:
            self.order_entry_program_id = order_entry_program_id
        if legacy_user_id is not None:
            self.legacy_user_id = legacy_user_id
        if id is not None:
            self.id = id
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        if next_oms_order_id is not None:
            self.next_oms_order_id = next_oms_order_id
        if customer_id is not None:
            self.customer_id = customer_id
        if tax is not None:
            self.tax = tax
        if shipping_handling is not None:
            self.shipping_handling = shipping_handling
        if sh_override_amount is not None:
            self.sh_override_amount = sh_override_amount
        if integration_partner_id is not None:
            self.integration_partner_id = integration_partner_id
        if order_source_id is not None:
            self.order_source_id = order_source_id
        if batch_no is not None:
            self.batch_no = batch_no
        if is_gift is not None:
            self.is_gift = is_gift
        if gift_message_to is not None:
            self.gift_message_to = gift_message_to
        if gift_message_from is not None:
            self.gift_message_from = gift_message_from
        if gift_message is not None:
            self.gift_message = gift_message
        if email_recipient is not None:
            self.email_recipient = email_recipient
        if mail_recipient is not None:
            self.mail_recipient = mail_recipient
        if key_code is not None:
            self.key_code = key_code
        if key_code_description is not None:
            self.key_code_description = key_code_description
        self.deliver_on_date = deliver_on_date
        if dist_charges is not None:
            self.dist_charges = dist_charges
        if sub_total is not None:
            self.sub_total = sub_total
        if ship_via is not None:
            self.ship_via = ship_via
        if line_items is not None:
            self.line_items = line_items
        if ship_to_first_name is not None:
            self.ship_to_first_name = ship_to_first_name
        if ship_to_last_name is not None:
            self.ship_to_last_name = ship_to_last_name
        if ship_to_company is not None:
            self.ship_to_company = ship_to_company
        if ship_to_street1 is not None:
            self.ship_to_street1 = ship_to_street1
        if ship_to_street2 is not None:
            self.ship_to_street2 = ship_to_street2
        if ship_to_street3 is not None:
            self.ship_to_street3 = ship_to_street3
        if ship_to_city is not None:
            self.ship_to_city = ship_to_city
        if ship_to_state is not None:
            self.ship_to_state = ship_to_state
        if ship_to_zip is not None:
            self.ship_to_zip = ship_to_zip
        if ship_to_email is not None:
            self.ship_to_email = ship_to_email
        if ship_to_phone is not None:
            self.ship_to_phone = ship_to_phone
        if bill_to_first_name is not None:
            self.bill_to_first_name = bill_to_first_name
        if bill_to_last_name is not None:
            self.bill_to_last_name = bill_to_last_name
        if bill_to_company is not None:
            self.bill_to_company = bill_to_company
        if bill_to_street1 is not None:
            self.bill_to_street1 = bill_to_street1
        if bill_to_street2 is not None:
            self.bill_to_street2 = bill_to_street2
        if bill_to_street3 is not None:
            self.bill_to_street3 = bill_to_street3
        if bill_to_city is not None:
            self.bill_to_city = bill_to_city
        if bill_to_state is not None:
            self.bill_to_state = bill_to_state
        if bill_to_zip is not None:
            self.bill_to_zip = bill_to_zip
        if bill_to_email is not None:
            self.bill_to_email = bill_to_email
        if bill_to_phone is not None:
            self.bill_to_phone = bill_to_phone
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def lob_id(self):
        """Gets the lob_id of this OmsOrder.  # noqa: E501


        :return: The lob_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this OmsOrder.


        :param lob_id: The lob_id of this OmsOrder.  # noqa: E501
        :type: int
        """
        if lob_id is None:
            raise ValueError("Invalid value for `lob_id`, must not be `None`")  # noqa: E501

        self._lob_id = lob_id

    @property
    def external_id(self):
        """Gets the external_id of this OmsOrder.  # noqa: E501


        :return: The external_id of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this OmsOrder.


        :param external_id: The external_id of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def oms_order_no(self):
        """Gets the oms_order_no of this OmsOrder.  # noqa: E501


        :return: The oms_order_no of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._oms_order_no

    @oms_order_no.setter
    def oms_order_no(self, oms_order_no):
        """Sets the oms_order_no of this OmsOrder.


        :param oms_order_no: The oms_order_no of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._oms_order_no = oms_order_no

    @property
    def total(self):
        """Gets the total of this OmsOrder.  # noqa: E501


        :return: The total of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this OmsOrder.


        :param total: The total of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._total = total

    @property
    def order_status(self):
        """Gets the order_status of this OmsOrder.  # noqa: E501


        :return: The order_status of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._order_status

    @order_status.setter
    def order_status(self, order_status):
        """Sets the order_status of this OmsOrder.


        :param order_status: The order_status of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._order_status = order_status

    @property
    def order_entry_program_id(self):
        """Gets the order_entry_program_id of this OmsOrder.  # noqa: E501


        :return: The order_entry_program_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._order_entry_program_id

    @order_entry_program_id.setter
    def order_entry_program_id(self, order_entry_program_id):
        """Sets the order_entry_program_id of this OmsOrder.


        :param order_entry_program_id: The order_entry_program_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._order_entry_program_id = order_entry_program_id

    @property
    def legacy_user_id(self):
        """Gets the legacy_user_id of this OmsOrder.  # noqa: E501


        :return: The legacy_user_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._legacy_user_id

    @legacy_user_id.setter
    def legacy_user_id(self, legacy_user_id):
        """Sets the legacy_user_id of this OmsOrder.


        :param legacy_user_id: The legacy_user_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._legacy_user_id = legacy_user_id

    @property
    def id(self):
        """Gets the id of this OmsOrder.  # noqa: E501


        :return: The id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OmsOrder.


        :param id: The id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def create_date(self):
        """Gets the create_date of this OmsOrder.  # noqa: E501


        :return: The create_date of this OmsOrder.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this OmsOrder.


        :param create_date: The create_date of this OmsOrder.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this OmsOrder.  # noqa: E501


        :return: The modify_date of this OmsOrder.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this OmsOrder.


        :param modify_date: The modify_date of this OmsOrder.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def next_oms_order_id(self):
        """Gets the next_oms_order_id of this OmsOrder.  # noqa: E501


        :return: The next_oms_order_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._next_oms_order_id

    @next_oms_order_id.setter
    def next_oms_order_id(self, next_oms_order_id):
        """Sets the next_oms_order_id of this OmsOrder.


        :param next_oms_order_id: The next_oms_order_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._next_oms_order_id = next_oms_order_id

    @property
    def customer_id(self):
        """Gets the customer_id of this OmsOrder.  # noqa: E501


        :return: The customer_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this OmsOrder.


        :param customer_id: The customer_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._customer_id = customer_id

    @property
    def tax(self):
        """Gets the tax of this OmsOrder.  # noqa: E501


        :return: The tax of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this OmsOrder.


        :param tax: The tax of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._tax = tax

    @property
    def shipping_handling(self):
        """Gets the shipping_handling of this OmsOrder.  # noqa: E501


        :return: The shipping_handling of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._shipping_handling

    @shipping_handling.setter
    def shipping_handling(self, shipping_handling):
        """Sets the shipping_handling of this OmsOrder.


        :param shipping_handling: The shipping_handling of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._shipping_handling = shipping_handling

    @property
    def sh_override_amount(self):
        """Gets the sh_override_amount of this OmsOrder.  # noqa: E501


        :return: The sh_override_amount of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._sh_override_amount

    @sh_override_amount.setter
    def sh_override_amount(self, sh_override_amount):
        """Sets the sh_override_amount of this OmsOrder.


        :param sh_override_amount: The sh_override_amount of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._sh_override_amount = sh_override_amount

    @property
    def integration_partner_id(self):
        """Gets the integration_partner_id of this OmsOrder.  # noqa: E501


        :return: The integration_partner_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._integration_partner_id

    @integration_partner_id.setter
    def integration_partner_id(self, integration_partner_id):
        """Sets the integration_partner_id of this OmsOrder.


        :param integration_partner_id: The integration_partner_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._integration_partner_id = integration_partner_id

    @property
    def order_source_id(self):
        """Gets the order_source_id of this OmsOrder.  # noqa: E501


        :return: The order_source_id of this OmsOrder.  # noqa: E501
        :rtype: int
        """
        return self._order_source_id

    @order_source_id.setter
    def order_source_id(self, order_source_id):
        """Sets the order_source_id of this OmsOrder.


        :param order_source_id: The order_source_id of this OmsOrder.  # noqa: E501
        :type: int
        """

        self._order_source_id = order_source_id

    @property
    def batch_no(self):
        """Gets the batch_no of this OmsOrder.  # noqa: E501


        :return: The batch_no of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._batch_no

    @batch_no.setter
    def batch_no(self, batch_no):
        """Sets the batch_no of this OmsOrder.


        :param batch_no: The batch_no of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._batch_no = batch_no

    @property
    def is_gift(self):
        """Gets the is_gift of this OmsOrder.  # noqa: E501


        :return: The is_gift of this OmsOrder.  # noqa: E501
        :rtype: bool
        """
        return self._is_gift

    @is_gift.setter
    def is_gift(self, is_gift):
        """Sets the is_gift of this OmsOrder.


        :param is_gift: The is_gift of this OmsOrder.  # noqa: E501
        :type: bool
        """

        self._is_gift = is_gift

    @property
    def gift_message_to(self):
        """Gets the gift_message_to of this OmsOrder.  # noqa: E501


        :return: The gift_message_to of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._gift_message_to

    @gift_message_to.setter
    def gift_message_to(self, gift_message_to):
        """Sets the gift_message_to of this OmsOrder.


        :param gift_message_to: The gift_message_to of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._gift_message_to = gift_message_to

    @property
    def gift_message_from(self):
        """Gets the gift_message_from of this OmsOrder.  # noqa: E501


        :return: The gift_message_from of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._gift_message_from

    @gift_message_from.setter
    def gift_message_from(self, gift_message_from):
        """Sets the gift_message_from of this OmsOrder.


        :param gift_message_from: The gift_message_from of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._gift_message_from = gift_message_from

    @property
    def gift_message(self):
        """Gets the gift_message of this OmsOrder.  # noqa: E501


        :return: The gift_message of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._gift_message

    @gift_message.setter
    def gift_message(self, gift_message):
        """Sets the gift_message of this OmsOrder.


        :param gift_message: The gift_message of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._gift_message = gift_message

    @property
    def email_recipient(self):
        """Gets the email_recipient of this OmsOrder.  # noqa: E501


        :return: The email_recipient of this OmsOrder.  # noqa: E501
        :rtype: bool
        """
        return self._email_recipient

    @email_recipient.setter
    def email_recipient(self, email_recipient):
        """Sets the email_recipient of this OmsOrder.


        :param email_recipient: The email_recipient of this OmsOrder.  # noqa: E501
        :type: bool
        """

        self._email_recipient = email_recipient

    @property
    def mail_recipient(self):
        """Gets the mail_recipient of this OmsOrder.  # noqa: E501


        :return: The mail_recipient of this OmsOrder.  # noqa: E501
        :rtype: bool
        """
        return self._mail_recipient

    @mail_recipient.setter
    def mail_recipient(self, mail_recipient):
        """Sets the mail_recipient of this OmsOrder.


        :param mail_recipient: The mail_recipient of this OmsOrder.  # noqa: E501
        :type: bool
        """

        self._mail_recipient = mail_recipient

    @property
    def key_code(self):
        """Gets the key_code of this OmsOrder.  # noqa: E501


        :return: The key_code of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._key_code

    @key_code.setter
    def key_code(self, key_code):
        """Sets the key_code of this OmsOrder.


        :param key_code: The key_code of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._key_code = key_code

    @property
    def key_code_description(self):
        """Gets the key_code_description of this OmsOrder.  # noqa: E501


        :return: The key_code_description of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._key_code_description

    @key_code_description.setter
    def key_code_description(self, key_code_description):
        """Sets the key_code_description of this OmsOrder.


        :param key_code_description: The key_code_description of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._key_code_description = key_code_description

    @property
    def deliver_on_date(self):
        """Gets the deliver_on_date of this OmsOrder.  # noqa: E501


        :return: The deliver_on_date of this OmsOrder.  # noqa: E501
        :rtype: datetime
        """
        return self._deliver_on_date

    @deliver_on_date.setter
    def deliver_on_date(self, deliver_on_date):
        """Sets the deliver_on_date of this OmsOrder.


        :param deliver_on_date: The deliver_on_date of this OmsOrder.  # noqa: E501
        :type: datetime
        """
        if deliver_on_date is None:
            raise ValueError("Invalid value for `deliver_on_date`, must not be `None`")  # noqa: E501

        self._deliver_on_date = deliver_on_date

    @property
    def dist_charges(self):
        """Gets the dist_charges of this OmsOrder.  # noqa: E501


        :return: The dist_charges of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._dist_charges

    @dist_charges.setter
    def dist_charges(self, dist_charges):
        """Sets the dist_charges of this OmsOrder.


        :param dist_charges: The dist_charges of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._dist_charges = dist_charges

    @property
    def sub_total(self):
        """Gets the sub_total of this OmsOrder.  # noqa: E501


        :return: The sub_total of this OmsOrder.  # noqa: E501
        :rtype: float
        """
        return self._sub_total

    @sub_total.setter
    def sub_total(self, sub_total):
        """Sets the sub_total of this OmsOrder.


        :param sub_total: The sub_total of this OmsOrder.  # noqa: E501
        :type: float
        """

        self._sub_total = sub_total

    @property
    def ship_via(self):
        """Gets the ship_via of this OmsOrder.  # noqa: E501


        :return: The ship_via of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_via

    @ship_via.setter
    def ship_via(self, ship_via):
        """Sets the ship_via of this OmsOrder.


        :param ship_via: The ship_via of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_via = ship_via

    @property
    def line_items(self):
        """Gets the line_items of this OmsOrder.  # noqa: E501


        :return: The line_items of this OmsOrder.  # noqa: E501
        :rtype: list[OrderLineItem]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this OmsOrder.


        :param line_items: The line_items of this OmsOrder.  # noqa: E501
        :type: list[OrderLineItem]
        """

        self._line_items = line_items

    @property
    def ship_to_first_name(self):
        """Gets the ship_to_first_name of this OmsOrder.  # noqa: E501


        :return: The ship_to_first_name of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_first_name

    @ship_to_first_name.setter
    def ship_to_first_name(self, ship_to_first_name):
        """Sets the ship_to_first_name of this OmsOrder.


        :param ship_to_first_name: The ship_to_first_name of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_first_name = ship_to_first_name

    @property
    def ship_to_last_name(self):
        """Gets the ship_to_last_name of this OmsOrder.  # noqa: E501


        :return: The ship_to_last_name of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_last_name

    @ship_to_last_name.setter
    def ship_to_last_name(self, ship_to_last_name):
        """Sets the ship_to_last_name of this OmsOrder.


        :param ship_to_last_name: The ship_to_last_name of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_last_name = ship_to_last_name

    @property
    def ship_to_company(self):
        """Gets the ship_to_company of this OmsOrder.  # noqa: E501


        :return: The ship_to_company of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_company

    @ship_to_company.setter
    def ship_to_company(self, ship_to_company):
        """Sets the ship_to_company of this OmsOrder.


        :param ship_to_company: The ship_to_company of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_company = ship_to_company

    @property
    def ship_to_street1(self):
        """Gets the ship_to_street1 of this OmsOrder.  # noqa: E501


        :return: The ship_to_street1 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_street1

    @ship_to_street1.setter
    def ship_to_street1(self, ship_to_street1):
        """Sets the ship_to_street1 of this OmsOrder.


        :param ship_to_street1: The ship_to_street1 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_street1 = ship_to_street1

    @property
    def ship_to_street2(self):
        """Gets the ship_to_street2 of this OmsOrder.  # noqa: E501


        :return: The ship_to_street2 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_street2

    @ship_to_street2.setter
    def ship_to_street2(self, ship_to_street2):
        """Sets the ship_to_street2 of this OmsOrder.


        :param ship_to_street2: The ship_to_street2 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_street2 = ship_to_street2

    @property
    def ship_to_street3(self):
        """Gets the ship_to_street3 of this OmsOrder.  # noqa: E501


        :return: The ship_to_street3 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_street3

    @ship_to_street3.setter
    def ship_to_street3(self, ship_to_street3):
        """Sets the ship_to_street3 of this OmsOrder.


        :param ship_to_street3: The ship_to_street3 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_street3 = ship_to_street3

    @property
    def ship_to_city(self):
        """Gets the ship_to_city of this OmsOrder.  # noqa: E501


        :return: The ship_to_city of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_city

    @ship_to_city.setter
    def ship_to_city(self, ship_to_city):
        """Sets the ship_to_city of this OmsOrder.


        :param ship_to_city: The ship_to_city of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_city = ship_to_city

    @property
    def ship_to_state(self):
        """Gets the ship_to_state of this OmsOrder.  # noqa: E501


        :return: The ship_to_state of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_state

    @ship_to_state.setter
    def ship_to_state(self, ship_to_state):
        """Sets the ship_to_state of this OmsOrder.


        :param ship_to_state: The ship_to_state of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_state = ship_to_state

    @property
    def ship_to_zip(self):
        """Gets the ship_to_zip of this OmsOrder.  # noqa: E501


        :return: The ship_to_zip of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_zip

    @ship_to_zip.setter
    def ship_to_zip(self, ship_to_zip):
        """Sets the ship_to_zip of this OmsOrder.


        :param ship_to_zip: The ship_to_zip of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_zip = ship_to_zip

    @property
    def ship_to_email(self):
        """Gets the ship_to_email of this OmsOrder.  # noqa: E501


        :return: The ship_to_email of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_email

    @ship_to_email.setter
    def ship_to_email(self, ship_to_email):
        """Sets the ship_to_email of this OmsOrder.


        :param ship_to_email: The ship_to_email of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_email = ship_to_email

    @property
    def ship_to_phone(self):
        """Gets the ship_to_phone of this OmsOrder.  # noqa: E501


        :return: The ship_to_phone of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._ship_to_phone

    @ship_to_phone.setter
    def ship_to_phone(self, ship_to_phone):
        """Sets the ship_to_phone of this OmsOrder.


        :param ship_to_phone: The ship_to_phone of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._ship_to_phone = ship_to_phone

    @property
    def bill_to_first_name(self):
        """Gets the bill_to_first_name of this OmsOrder.  # noqa: E501


        :return: The bill_to_first_name of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_first_name

    @bill_to_first_name.setter
    def bill_to_first_name(self, bill_to_first_name):
        """Sets the bill_to_first_name of this OmsOrder.


        :param bill_to_first_name: The bill_to_first_name of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_first_name = bill_to_first_name

    @property
    def bill_to_last_name(self):
        """Gets the bill_to_last_name of this OmsOrder.  # noqa: E501


        :return: The bill_to_last_name of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_last_name

    @bill_to_last_name.setter
    def bill_to_last_name(self, bill_to_last_name):
        """Sets the bill_to_last_name of this OmsOrder.


        :param bill_to_last_name: The bill_to_last_name of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_last_name = bill_to_last_name

    @property
    def bill_to_company(self):
        """Gets the bill_to_company of this OmsOrder.  # noqa: E501


        :return: The bill_to_company of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_company

    @bill_to_company.setter
    def bill_to_company(self, bill_to_company):
        """Sets the bill_to_company of this OmsOrder.


        :param bill_to_company: The bill_to_company of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_company = bill_to_company

    @property
    def bill_to_street1(self):
        """Gets the bill_to_street1 of this OmsOrder.  # noqa: E501


        :return: The bill_to_street1 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_street1

    @bill_to_street1.setter
    def bill_to_street1(self, bill_to_street1):
        """Sets the bill_to_street1 of this OmsOrder.


        :param bill_to_street1: The bill_to_street1 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_street1 = bill_to_street1

    @property
    def bill_to_street2(self):
        """Gets the bill_to_street2 of this OmsOrder.  # noqa: E501


        :return: The bill_to_street2 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_street2

    @bill_to_street2.setter
    def bill_to_street2(self, bill_to_street2):
        """Sets the bill_to_street2 of this OmsOrder.


        :param bill_to_street2: The bill_to_street2 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_street2 = bill_to_street2

    @property
    def bill_to_street3(self):
        """Gets the bill_to_street3 of this OmsOrder.  # noqa: E501


        :return: The bill_to_street3 of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_street3

    @bill_to_street3.setter
    def bill_to_street3(self, bill_to_street3):
        """Sets the bill_to_street3 of this OmsOrder.


        :param bill_to_street3: The bill_to_street3 of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_street3 = bill_to_street3

    @property
    def bill_to_city(self):
        """Gets the bill_to_city of this OmsOrder.  # noqa: E501


        :return: The bill_to_city of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_city

    @bill_to_city.setter
    def bill_to_city(self, bill_to_city):
        """Sets the bill_to_city of this OmsOrder.


        :param bill_to_city: The bill_to_city of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_city = bill_to_city

    @property
    def bill_to_state(self):
        """Gets the bill_to_state of this OmsOrder.  # noqa: E501


        :return: The bill_to_state of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_state

    @bill_to_state.setter
    def bill_to_state(self, bill_to_state):
        """Sets the bill_to_state of this OmsOrder.


        :param bill_to_state: The bill_to_state of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_state = bill_to_state

    @property
    def bill_to_zip(self):
        """Gets the bill_to_zip of this OmsOrder.  # noqa: E501


        :return: The bill_to_zip of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_zip

    @bill_to_zip.setter
    def bill_to_zip(self, bill_to_zip):
        """Sets the bill_to_zip of this OmsOrder.


        :param bill_to_zip: The bill_to_zip of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_zip = bill_to_zip

    @property
    def bill_to_email(self):
        """Gets the bill_to_email of this OmsOrder.  # noqa: E501


        :return: The bill_to_email of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_email

    @bill_to_email.setter
    def bill_to_email(self, bill_to_email):
        """Sets the bill_to_email of this OmsOrder.


        :param bill_to_email: The bill_to_email of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_email = bill_to_email

    @property
    def bill_to_phone(self):
        """Gets the bill_to_phone of this OmsOrder.  # noqa: E501


        :return: The bill_to_phone of this OmsOrder.  # noqa: E501
        :rtype: str
        """
        return self._bill_to_phone

    @bill_to_phone.setter
    def bill_to_phone(self, bill_to_phone):
        """Sets the bill_to_phone of this OmsOrder.


        :param bill_to_phone: The bill_to_phone of this OmsOrder.  # noqa: E501
        :type: str
        """

        self._bill_to_phone = bill_to_phone

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OmsOrder.  # noqa: E501


        :return: The custom_fields of this OmsOrder.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OmsOrder.


        :param custom_fields: The custom_fields of this OmsOrder.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OmsOrder):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
