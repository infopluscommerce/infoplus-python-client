# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class WarehouseInventory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'sku': 'str',
        'lob_id': 'int',
        'warehouse_id': 'int',
        'on_hand_quantity': 'int',
        'unavailable_quantity': 'int',
        'open_po_quantity': 'int',
        'open_order_quantity': 'int',
        'available_quantity': 'int',
        'damaged_quantity': 'int',
        'in_fulfillment_process_quantity': 'int',
        'orderable_quantity': 'int',
        'unallocatable_quantity': 'int',
        'days_on_hand': 'int',
        'stock_status': 'str',
        'available_quantity_cases': 'int',
        'available_quantity_inner_packs': 'int',
        'available_quantity_pallets': 'int',
        'damaged_quantity_cases': 'int',
        'damaged_quantity_inner_packs': 'int',
        'damaged_quantity_pallets': 'int',
        'in_fulfillment_process_quantity_cases': 'int',
        'in_fulfillment_process_quantity_inner_packs': 'int',
        'in_fulfillment_process_quantity_pallets': 'int',
        'on_hand_quantity_cases': 'int',
        'on_hand_quantity_inner_packs': 'int',
        'on_hand_quantity_pallets': 'int',
        'open_order_quantity_cases': 'int',
        'open_order_quantity_inner_packs': 'int',
        'open_order_quantity_pallets': 'int',
        'open_po_quantity_cases': 'int',
        'open_po_quantity_inner_packs': 'int',
        'open_po_quantity_pallets': 'int',
        'orderable_quantity_cases': 'int',
        'orderable_quantity_inner_packs': 'int',
        'orderable_quantity_pallets': 'int',
        'unallocatable_quantity_cases': 'int',
        'unallocatable_quantity_inner_packs': 'int',
        'unallocatable_quantity_pallets': 'int',
        'unavailable_quantity_cases': 'int',
        'unavailable_quantity_inner_packs': 'int',
        'unavailable_quantity_pallets': 'int',
        'total_demand': 'int',
        'next_request_delivery_date': 'datetime',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'sku': 'sku',
        'lob_id': 'lobId',
        'warehouse_id': 'warehouseId',
        'on_hand_quantity': 'onHandQuantity',
        'unavailable_quantity': 'unavailableQuantity',
        'open_po_quantity': 'openPOQuantity',
        'open_order_quantity': 'openOrderQuantity',
        'available_quantity': 'availableQuantity',
        'damaged_quantity': 'damagedQuantity',
        'in_fulfillment_process_quantity': 'inFulfillmentProcessQuantity',
        'orderable_quantity': 'orderableQuantity',
        'unallocatable_quantity': 'unallocatableQuantity',
        'days_on_hand': 'daysOnHand',
        'stock_status': 'stockStatus',
        'available_quantity_cases': 'availableQuantityCases',
        'available_quantity_inner_packs': 'availableQuantityInnerPacks',
        'available_quantity_pallets': 'availableQuantityPallets',
        'damaged_quantity_cases': 'damagedQuantityCases',
        'damaged_quantity_inner_packs': 'damagedQuantityInnerPacks',
        'damaged_quantity_pallets': 'damagedQuantityPallets',
        'in_fulfillment_process_quantity_cases': 'inFulfillmentProcessQuantityCases',
        'in_fulfillment_process_quantity_inner_packs': 'inFulfillmentProcessQuantityInnerPacks',
        'in_fulfillment_process_quantity_pallets': 'inFulfillmentProcessQuantityPallets',
        'on_hand_quantity_cases': 'onHandQuantityCases',
        'on_hand_quantity_inner_packs': 'onHandQuantityInnerPacks',
        'on_hand_quantity_pallets': 'onHandQuantityPallets',
        'open_order_quantity_cases': 'openOrderQuantityCases',
        'open_order_quantity_inner_packs': 'openOrderQuantityInnerPacks',
        'open_order_quantity_pallets': 'openOrderQuantityPallets',
        'open_po_quantity_cases': 'openPOQuantityCases',
        'open_po_quantity_inner_packs': 'openPOQuantityInnerPacks',
        'open_po_quantity_pallets': 'openPOQuantityPallets',
        'orderable_quantity_cases': 'orderableQuantityCases',
        'orderable_quantity_inner_packs': 'orderableQuantityInnerPacks',
        'orderable_quantity_pallets': 'orderableQuantityPallets',
        'unallocatable_quantity_cases': 'unallocatableQuantityCases',
        'unallocatable_quantity_inner_packs': 'unallocatableQuantityInnerPacks',
        'unallocatable_quantity_pallets': 'unallocatableQuantityPallets',
        'unavailable_quantity_cases': 'unavailableQuantityCases',
        'unavailable_quantity_inner_packs': 'unavailableQuantityInnerPacks',
        'unavailable_quantity_pallets': 'unavailableQuantityPallets',
        'total_demand': 'totalDemand',
        'next_request_delivery_date': 'nextRequestDeliveryDate',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, sku=None, lob_id=None, warehouse_id=None, on_hand_quantity=None, unavailable_quantity=None, open_po_quantity=None, open_order_quantity=None, available_quantity=None, damaged_quantity=None, in_fulfillment_process_quantity=None, orderable_quantity=None, unallocatable_quantity=None, days_on_hand=None, stock_status=None, available_quantity_cases=None, available_quantity_inner_packs=None, available_quantity_pallets=None, damaged_quantity_cases=None, damaged_quantity_inner_packs=None, damaged_quantity_pallets=None, in_fulfillment_process_quantity_cases=None, in_fulfillment_process_quantity_inner_packs=None, in_fulfillment_process_quantity_pallets=None, on_hand_quantity_cases=None, on_hand_quantity_inner_packs=None, on_hand_quantity_pallets=None, open_order_quantity_cases=None, open_order_quantity_inner_packs=None, open_order_quantity_pallets=None, open_po_quantity_cases=None, open_po_quantity_inner_packs=None, open_po_quantity_pallets=None, orderable_quantity_cases=None, orderable_quantity_inner_packs=None, orderable_quantity_pallets=None, unallocatable_quantity_cases=None, unallocatable_quantity_inner_packs=None, unallocatable_quantity_pallets=None, unavailable_quantity_cases=None, unavailable_quantity_inner_packs=None, unavailable_quantity_pallets=None, total_demand=None, next_request_delivery_date=None, create_date=None, modify_date=None, custom_fields=None):  # noqa: E501
        """WarehouseInventory - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._sku = None
        self._lob_id = None
        self._warehouse_id = None
        self._on_hand_quantity = None
        self._unavailable_quantity = None
        self._open_po_quantity = None
        self._open_order_quantity = None
        self._available_quantity = None
        self._damaged_quantity = None
        self._in_fulfillment_process_quantity = None
        self._orderable_quantity = None
        self._unallocatable_quantity = None
        self._days_on_hand = None
        self._stock_status = None
        self._available_quantity_cases = None
        self._available_quantity_inner_packs = None
        self._available_quantity_pallets = None
        self._damaged_quantity_cases = None
        self._damaged_quantity_inner_packs = None
        self._damaged_quantity_pallets = None
        self._in_fulfillment_process_quantity_cases = None
        self._in_fulfillment_process_quantity_inner_packs = None
        self._in_fulfillment_process_quantity_pallets = None
        self._on_hand_quantity_cases = None
        self._on_hand_quantity_inner_packs = None
        self._on_hand_quantity_pallets = None
        self._open_order_quantity_cases = None
        self._open_order_quantity_inner_packs = None
        self._open_order_quantity_pallets = None
        self._open_po_quantity_cases = None
        self._open_po_quantity_inner_packs = None
        self._open_po_quantity_pallets = None
        self._orderable_quantity_cases = None
        self._orderable_quantity_inner_packs = None
        self._orderable_quantity_pallets = None
        self._unallocatable_quantity_cases = None
        self._unallocatable_quantity_inner_packs = None
        self._unallocatable_quantity_pallets = None
        self._unavailable_quantity_cases = None
        self._unavailable_quantity_inner_packs = None
        self._unavailable_quantity_pallets = None
        self._total_demand = None
        self._next_request_delivery_date = None
        self._create_date = None
        self._modify_date = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if sku is not None:
            self.sku = sku
        if lob_id is not None:
            self.lob_id = lob_id
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id
        if on_hand_quantity is not None:
            self.on_hand_quantity = on_hand_quantity
        if unavailable_quantity is not None:
            self.unavailable_quantity = unavailable_quantity
        if open_po_quantity is not None:
            self.open_po_quantity = open_po_quantity
        if open_order_quantity is not None:
            self.open_order_quantity = open_order_quantity
        if available_quantity is not None:
            self.available_quantity = available_quantity
        if damaged_quantity is not None:
            self.damaged_quantity = damaged_quantity
        if in_fulfillment_process_quantity is not None:
            self.in_fulfillment_process_quantity = in_fulfillment_process_quantity
        if orderable_quantity is not None:
            self.orderable_quantity = orderable_quantity
        if unallocatable_quantity is not None:
            self.unallocatable_quantity = unallocatable_quantity
        if days_on_hand is not None:
            self.days_on_hand = days_on_hand
        if stock_status is not None:
            self.stock_status = stock_status
        if available_quantity_cases is not None:
            self.available_quantity_cases = available_quantity_cases
        if available_quantity_inner_packs is not None:
            self.available_quantity_inner_packs = available_quantity_inner_packs
        if available_quantity_pallets is not None:
            self.available_quantity_pallets = available_quantity_pallets
        if damaged_quantity_cases is not None:
            self.damaged_quantity_cases = damaged_quantity_cases
        if damaged_quantity_inner_packs is not None:
            self.damaged_quantity_inner_packs = damaged_quantity_inner_packs
        if damaged_quantity_pallets is not None:
            self.damaged_quantity_pallets = damaged_quantity_pallets
        if in_fulfillment_process_quantity_cases is not None:
            self.in_fulfillment_process_quantity_cases = in_fulfillment_process_quantity_cases
        if in_fulfillment_process_quantity_inner_packs is not None:
            self.in_fulfillment_process_quantity_inner_packs = in_fulfillment_process_quantity_inner_packs
        if in_fulfillment_process_quantity_pallets is not None:
            self.in_fulfillment_process_quantity_pallets = in_fulfillment_process_quantity_pallets
        if on_hand_quantity_cases is not None:
            self.on_hand_quantity_cases = on_hand_quantity_cases
        if on_hand_quantity_inner_packs is not None:
            self.on_hand_quantity_inner_packs = on_hand_quantity_inner_packs
        if on_hand_quantity_pallets is not None:
            self.on_hand_quantity_pallets = on_hand_quantity_pallets
        if open_order_quantity_cases is not None:
            self.open_order_quantity_cases = open_order_quantity_cases
        if open_order_quantity_inner_packs is not None:
            self.open_order_quantity_inner_packs = open_order_quantity_inner_packs
        if open_order_quantity_pallets is not None:
            self.open_order_quantity_pallets = open_order_quantity_pallets
        if open_po_quantity_cases is not None:
            self.open_po_quantity_cases = open_po_quantity_cases
        if open_po_quantity_inner_packs is not None:
            self.open_po_quantity_inner_packs = open_po_quantity_inner_packs
        if open_po_quantity_pallets is not None:
            self.open_po_quantity_pallets = open_po_quantity_pallets
        if orderable_quantity_cases is not None:
            self.orderable_quantity_cases = orderable_quantity_cases
        if orderable_quantity_inner_packs is not None:
            self.orderable_quantity_inner_packs = orderable_quantity_inner_packs
        if orderable_quantity_pallets is not None:
            self.orderable_quantity_pallets = orderable_quantity_pallets
        if unallocatable_quantity_cases is not None:
            self.unallocatable_quantity_cases = unallocatable_quantity_cases
        if unallocatable_quantity_inner_packs is not None:
            self.unallocatable_quantity_inner_packs = unallocatable_quantity_inner_packs
        if unallocatable_quantity_pallets is not None:
            self.unallocatable_quantity_pallets = unallocatable_quantity_pallets
        if unavailable_quantity_cases is not None:
            self.unavailable_quantity_cases = unavailable_quantity_cases
        if unavailable_quantity_inner_packs is not None:
            self.unavailable_quantity_inner_packs = unavailable_quantity_inner_packs
        if unavailable_quantity_pallets is not None:
            self.unavailable_quantity_pallets = unavailable_quantity_pallets
        if total_demand is not None:
            self.total_demand = total_demand
        if next_request_delivery_date is not None:
            self.next_request_delivery_date = next_request_delivery_date
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this WarehouseInventory.  # noqa: E501


        :return: The id of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WarehouseInventory.


        :param id: The id of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def sku(self):
        """Gets the sku of this WarehouseInventory.  # noqa: E501


        :return: The sku of this WarehouseInventory.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this WarehouseInventory.


        :param sku: The sku of this WarehouseInventory.  # noqa: E501
        :type: str
        """

        self._sku = sku

    @property
    def lob_id(self):
        """Gets the lob_id of this WarehouseInventory.  # noqa: E501


        :return: The lob_id of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """Sets the lob_id of this WarehouseInventory.


        :param lob_id: The lob_id of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._lob_id = lob_id

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this WarehouseInventory.  # noqa: E501


        :return: The warehouse_id of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this WarehouseInventory.


        :param warehouse_id: The warehouse_id of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._warehouse_id = warehouse_id

    @property
    def on_hand_quantity(self):
        """Gets the on_hand_quantity of this WarehouseInventory.  # noqa: E501


        :return: The on_hand_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity

    @on_hand_quantity.setter
    def on_hand_quantity(self, on_hand_quantity):
        """Sets the on_hand_quantity of this WarehouseInventory.


        :param on_hand_quantity: The on_hand_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity = on_hand_quantity

    @property
    def unavailable_quantity(self):
        """Gets the unavailable_quantity of this WarehouseInventory.  # noqa: E501


        :return: The unavailable_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity

    @unavailable_quantity.setter
    def unavailable_quantity(self, unavailable_quantity):
        """Sets the unavailable_quantity of this WarehouseInventory.


        :param unavailable_quantity: The unavailable_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity = unavailable_quantity

    @property
    def open_po_quantity(self):
        """Gets the open_po_quantity of this WarehouseInventory.  # noqa: E501


        :return: The open_po_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity

    @open_po_quantity.setter
    def open_po_quantity(self, open_po_quantity):
        """Sets the open_po_quantity of this WarehouseInventory.


        :param open_po_quantity: The open_po_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_po_quantity = open_po_quantity

    @property
    def open_order_quantity(self):
        """Gets the open_order_quantity of this WarehouseInventory.  # noqa: E501


        :return: The open_order_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity

    @open_order_quantity.setter
    def open_order_quantity(self, open_order_quantity):
        """Sets the open_order_quantity of this WarehouseInventory.


        :param open_order_quantity: The open_order_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_order_quantity = open_order_quantity

    @property
    def available_quantity(self):
        """Gets the available_quantity of this WarehouseInventory.  # noqa: E501


        :return: The available_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity

    @available_quantity.setter
    def available_quantity(self, available_quantity):
        """Sets the available_quantity of this WarehouseInventory.


        :param available_quantity: The available_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._available_quantity = available_quantity

    @property
    def damaged_quantity(self):
        """Gets the damaged_quantity of this WarehouseInventory.  # noqa: E501


        :return: The damaged_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity

    @damaged_quantity.setter
    def damaged_quantity(self, damaged_quantity):
        """Sets the damaged_quantity of this WarehouseInventory.


        :param damaged_quantity: The damaged_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._damaged_quantity = damaged_quantity

    @property
    def in_fulfillment_process_quantity(self):
        """Gets the in_fulfillment_process_quantity of this WarehouseInventory.  # noqa: E501


        :return: The in_fulfillment_process_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity

    @in_fulfillment_process_quantity.setter
    def in_fulfillment_process_quantity(self, in_fulfillment_process_quantity):
        """Sets the in_fulfillment_process_quantity of this WarehouseInventory.


        :param in_fulfillment_process_quantity: The in_fulfillment_process_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity = in_fulfillment_process_quantity

    @property
    def orderable_quantity(self):
        """Gets the orderable_quantity of this WarehouseInventory.  # noqa: E501


        :return: The orderable_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity

    @orderable_quantity.setter
    def orderable_quantity(self, orderable_quantity):
        """Sets the orderable_quantity of this WarehouseInventory.


        :param orderable_quantity: The orderable_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._orderable_quantity = orderable_quantity

    @property
    def unallocatable_quantity(self):
        """Gets the unallocatable_quantity of this WarehouseInventory.  # noqa: E501


        :return: The unallocatable_quantity of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity

    @unallocatable_quantity.setter
    def unallocatable_quantity(self, unallocatable_quantity):
        """Sets the unallocatable_quantity of this WarehouseInventory.


        :param unallocatable_quantity: The unallocatable_quantity of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity = unallocatable_quantity

    @property
    def days_on_hand(self):
        """Gets the days_on_hand of this WarehouseInventory.  # noqa: E501


        :return: The days_on_hand of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._days_on_hand

    @days_on_hand.setter
    def days_on_hand(self, days_on_hand):
        """Sets the days_on_hand of this WarehouseInventory.


        :param days_on_hand: The days_on_hand of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._days_on_hand = days_on_hand

    @property
    def stock_status(self):
        """Gets the stock_status of this WarehouseInventory.  # noqa: E501


        :return: The stock_status of this WarehouseInventory.  # noqa: E501
        :rtype: str
        """
        return self._stock_status

    @stock_status.setter
    def stock_status(self, stock_status):
        """Sets the stock_status of this WarehouseInventory.


        :param stock_status: The stock_status of this WarehouseInventory.  # noqa: E501
        :type: str
        """

        self._stock_status = stock_status

    @property
    def available_quantity_cases(self):
        """Gets the available_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The available_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_cases

    @available_quantity_cases.setter
    def available_quantity_cases(self, available_quantity_cases):
        """Sets the available_quantity_cases of this WarehouseInventory.


        :param available_quantity_cases: The available_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._available_quantity_cases = available_quantity_cases

    @property
    def available_quantity_inner_packs(self):
        """Gets the available_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The available_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_inner_packs

    @available_quantity_inner_packs.setter
    def available_quantity_inner_packs(self, available_quantity_inner_packs):
        """Sets the available_quantity_inner_packs of this WarehouseInventory.


        :param available_quantity_inner_packs: The available_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._available_quantity_inner_packs = available_quantity_inner_packs

    @property
    def available_quantity_pallets(self):
        """Gets the available_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The available_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._available_quantity_pallets

    @available_quantity_pallets.setter
    def available_quantity_pallets(self, available_quantity_pallets):
        """Sets the available_quantity_pallets of this WarehouseInventory.


        :param available_quantity_pallets: The available_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._available_quantity_pallets = available_quantity_pallets

    @property
    def damaged_quantity_cases(self):
        """Gets the damaged_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The damaged_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_cases

    @damaged_quantity_cases.setter
    def damaged_quantity_cases(self, damaged_quantity_cases):
        """Sets the damaged_quantity_cases of this WarehouseInventory.


        :param damaged_quantity_cases: The damaged_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_cases = damaged_quantity_cases

    @property
    def damaged_quantity_inner_packs(self):
        """Gets the damaged_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The damaged_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_inner_packs

    @damaged_quantity_inner_packs.setter
    def damaged_quantity_inner_packs(self, damaged_quantity_inner_packs):
        """Sets the damaged_quantity_inner_packs of this WarehouseInventory.


        :param damaged_quantity_inner_packs: The damaged_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_inner_packs = damaged_quantity_inner_packs

    @property
    def damaged_quantity_pallets(self):
        """Gets the damaged_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The damaged_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._damaged_quantity_pallets

    @damaged_quantity_pallets.setter
    def damaged_quantity_pallets(self, damaged_quantity_pallets):
        """Sets the damaged_quantity_pallets of this WarehouseInventory.


        :param damaged_quantity_pallets: The damaged_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._damaged_quantity_pallets = damaged_quantity_pallets

    @property
    def in_fulfillment_process_quantity_cases(self):
        """Gets the in_fulfillment_process_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The in_fulfillment_process_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_cases

    @in_fulfillment_process_quantity_cases.setter
    def in_fulfillment_process_quantity_cases(self, in_fulfillment_process_quantity_cases):
        """Sets the in_fulfillment_process_quantity_cases of this WarehouseInventory.


        :param in_fulfillment_process_quantity_cases: The in_fulfillment_process_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_cases = in_fulfillment_process_quantity_cases

    @property
    def in_fulfillment_process_quantity_inner_packs(self):
        """Gets the in_fulfillment_process_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The in_fulfillment_process_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_inner_packs

    @in_fulfillment_process_quantity_inner_packs.setter
    def in_fulfillment_process_quantity_inner_packs(self, in_fulfillment_process_quantity_inner_packs):
        """Sets the in_fulfillment_process_quantity_inner_packs of this WarehouseInventory.


        :param in_fulfillment_process_quantity_inner_packs: The in_fulfillment_process_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_inner_packs = in_fulfillment_process_quantity_inner_packs

    @property
    def in_fulfillment_process_quantity_pallets(self):
        """Gets the in_fulfillment_process_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The in_fulfillment_process_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._in_fulfillment_process_quantity_pallets

    @in_fulfillment_process_quantity_pallets.setter
    def in_fulfillment_process_quantity_pallets(self, in_fulfillment_process_quantity_pallets):
        """Sets the in_fulfillment_process_quantity_pallets of this WarehouseInventory.


        :param in_fulfillment_process_quantity_pallets: The in_fulfillment_process_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._in_fulfillment_process_quantity_pallets = in_fulfillment_process_quantity_pallets

    @property
    def on_hand_quantity_cases(self):
        """Gets the on_hand_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The on_hand_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_cases

    @on_hand_quantity_cases.setter
    def on_hand_quantity_cases(self, on_hand_quantity_cases):
        """Sets the on_hand_quantity_cases of this WarehouseInventory.


        :param on_hand_quantity_cases: The on_hand_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_cases = on_hand_quantity_cases

    @property
    def on_hand_quantity_inner_packs(self):
        """Gets the on_hand_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The on_hand_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_inner_packs

    @on_hand_quantity_inner_packs.setter
    def on_hand_quantity_inner_packs(self, on_hand_quantity_inner_packs):
        """Sets the on_hand_quantity_inner_packs of this WarehouseInventory.


        :param on_hand_quantity_inner_packs: The on_hand_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_inner_packs = on_hand_quantity_inner_packs

    @property
    def on_hand_quantity_pallets(self):
        """Gets the on_hand_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The on_hand_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._on_hand_quantity_pallets

    @on_hand_quantity_pallets.setter
    def on_hand_quantity_pallets(self, on_hand_quantity_pallets):
        """Sets the on_hand_quantity_pallets of this WarehouseInventory.


        :param on_hand_quantity_pallets: The on_hand_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._on_hand_quantity_pallets = on_hand_quantity_pallets

    @property
    def open_order_quantity_cases(self):
        """Gets the open_order_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The open_order_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_cases

    @open_order_quantity_cases.setter
    def open_order_quantity_cases(self, open_order_quantity_cases):
        """Sets the open_order_quantity_cases of this WarehouseInventory.


        :param open_order_quantity_cases: The open_order_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_cases = open_order_quantity_cases

    @property
    def open_order_quantity_inner_packs(self):
        """Gets the open_order_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The open_order_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_inner_packs

    @open_order_quantity_inner_packs.setter
    def open_order_quantity_inner_packs(self, open_order_quantity_inner_packs):
        """Sets the open_order_quantity_inner_packs of this WarehouseInventory.


        :param open_order_quantity_inner_packs: The open_order_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_inner_packs = open_order_quantity_inner_packs

    @property
    def open_order_quantity_pallets(self):
        """Gets the open_order_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The open_order_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_order_quantity_pallets

    @open_order_quantity_pallets.setter
    def open_order_quantity_pallets(self, open_order_quantity_pallets):
        """Sets the open_order_quantity_pallets of this WarehouseInventory.


        :param open_order_quantity_pallets: The open_order_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_order_quantity_pallets = open_order_quantity_pallets

    @property
    def open_po_quantity_cases(self):
        """Gets the open_po_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The open_po_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_cases

    @open_po_quantity_cases.setter
    def open_po_quantity_cases(self, open_po_quantity_cases):
        """Sets the open_po_quantity_cases of this WarehouseInventory.


        :param open_po_quantity_cases: The open_po_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_cases = open_po_quantity_cases

    @property
    def open_po_quantity_inner_packs(self):
        """Gets the open_po_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The open_po_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_inner_packs

    @open_po_quantity_inner_packs.setter
    def open_po_quantity_inner_packs(self, open_po_quantity_inner_packs):
        """Sets the open_po_quantity_inner_packs of this WarehouseInventory.


        :param open_po_quantity_inner_packs: The open_po_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_inner_packs = open_po_quantity_inner_packs

    @property
    def open_po_quantity_pallets(self):
        """Gets the open_po_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The open_po_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._open_po_quantity_pallets

    @open_po_quantity_pallets.setter
    def open_po_quantity_pallets(self, open_po_quantity_pallets):
        """Sets the open_po_quantity_pallets of this WarehouseInventory.


        :param open_po_quantity_pallets: The open_po_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._open_po_quantity_pallets = open_po_quantity_pallets

    @property
    def orderable_quantity_cases(self):
        """Gets the orderable_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The orderable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_cases

    @orderable_quantity_cases.setter
    def orderable_quantity_cases(self, orderable_quantity_cases):
        """Sets the orderable_quantity_cases of this WarehouseInventory.


        :param orderable_quantity_cases: The orderable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_cases = orderable_quantity_cases

    @property
    def orderable_quantity_inner_packs(self):
        """Gets the orderable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The orderable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_inner_packs

    @orderable_quantity_inner_packs.setter
    def orderable_quantity_inner_packs(self, orderable_quantity_inner_packs):
        """Sets the orderable_quantity_inner_packs of this WarehouseInventory.


        :param orderable_quantity_inner_packs: The orderable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_inner_packs = orderable_quantity_inner_packs

    @property
    def orderable_quantity_pallets(self):
        """Gets the orderable_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The orderable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._orderable_quantity_pallets

    @orderable_quantity_pallets.setter
    def orderable_quantity_pallets(self, orderable_quantity_pallets):
        """Sets the orderable_quantity_pallets of this WarehouseInventory.


        :param orderable_quantity_pallets: The orderable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._orderable_quantity_pallets = orderable_quantity_pallets

    @property
    def unallocatable_quantity_cases(self):
        """Gets the unallocatable_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The unallocatable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_cases

    @unallocatable_quantity_cases.setter
    def unallocatable_quantity_cases(self, unallocatable_quantity_cases):
        """Sets the unallocatable_quantity_cases of this WarehouseInventory.


        :param unallocatable_quantity_cases: The unallocatable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_cases = unallocatable_quantity_cases

    @property
    def unallocatable_quantity_inner_packs(self):
        """Gets the unallocatable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The unallocatable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_inner_packs

    @unallocatable_quantity_inner_packs.setter
    def unallocatable_quantity_inner_packs(self, unallocatable_quantity_inner_packs):
        """Sets the unallocatable_quantity_inner_packs of this WarehouseInventory.


        :param unallocatable_quantity_inner_packs: The unallocatable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_inner_packs = unallocatable_quantity_inner_packs

    @property
    def unallocatable_quantity_pallets(self):
        """Gets the unallocatable_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The unallocatable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unallocatable_quantity_pallets

    @unallocatable_quantity_pallets.setter
    def unallocatable_quantity_pallets(self, unallocatable_quantity_pallets):
        """Sets the unallocatable_quantity_pallets of this WarehouseInventory.


        :param unallocatable_quantity_pallets: The unallocatable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unallocatable_quantity_pallets = unallocatable_quantity_pallets

    @property
    def unavailable_quantity_cases(self):
        """Gets the unavailable_quantity_cases of this WarehouseInventory.  # noqa: E501


        :return: The unavailable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_cases

    @unavailable_quantity_cases.setter
    def unavailable_quantity_cases(self, unavailable_quantity_cases):
        """Sets the unavailable_quantity_cases of this WarehouseInventory.


        :param unavailable_quantity_cases: The unavailable_quantity_cases of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_cases = unavailable_quantity_cases

    @property
    def unavailable_quantity_inner_packs(self):
        """Gets the unavailable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501


        :return: The unavailable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_inner_packs

    @unavailable_quantity_inner_packs.setter
    def unavailable_quantity_inner_packs(self, unavailable_quantity_inner_packs):
        """Sets the unavailable_quantity_inner_packs of this WarehouseInventory.


        :param unavailable_quantity_inner_packs: The unavailable_quantity_inner_packs of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_inner_packs = unavailable_quantity_inner_packs

    @property
    def unavailable_quantity_pallets(self):
        """Gets the unavailable_quantity_pallets of this WarehouseInventory.  # noqa: E501


        :return: The unavailable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._unavailable_quantity_pallets

    @unavailable_quantity_pallets.setter
    def unavailable_quantity_pallets(self, unavailable_quantity_pallets):
        """Sets the unavailable_quantity_pallets of this WarehouseInventory.


        :param unavailable_quantity_pallets: The unavailable_quantity_pallets of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._unavailable_quantity_pallets = unavailable_quantity_pallets

    @property
    def total_demand(self):
        """Gets the total_demand of this WarehouseInventory.  # noqa: E501


        :return: The total_demand of this WarehouseInventory.  # noqa: E501
        :rtype: int
        """
        return self._total_demand

    @total_demand.setter
    def total_demand(self, total_demand):
        """Sets the total_demand of this WarehouseInventory.


        :param total_demand: The total_demand of this WarehouseInventory.  # noqa: E501
        :type: int
        """

        self._total_demand = total_demand

    @property
    def next_request_delivery_date(self):
        """Gets the next_request_delivery_date of this WarehouseInventory.  # noqa: E501


        :return: The next_request_delivery_date of this WarehouseInventory.  # noqa: E501
        :rtype: datetime
        """
        return self._next_request_delivery_date

    @next_request_delivery_date.setter
    def next_request_delivery_date(self, next_request_delivery_date):
        """Sets the next_request_delivery_date of this WarehouseInventory.


        :param next_request_delivery_date: The next_request_delivery_date of this WarehouseInventory.  # noqa: E501
        :type: datetime
        """

        self._next_request_delivery_date = next_request_delivery_date

    @property
    def create_date(self):
        """Gets the create_date of this WarehouseInventory.  # noqa: E501


        :return: The create_date of this WarehouseInventory.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this WarehouseInventory.


        :param create_date: The create_date of this WarehouseInventory.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this WarehouseInventory.  # noqa: E501


        :return: The modify_date of this WarehouseInventory.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this WarehouseInventory.


        :param modify_date: The modify_date of this WarehouseInventory.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def custom_fields(self):
        """Gets the custom_fields of this WarehouseInventory.  # noqa: E501


        :return: The custom_fields of this WarehouseInventory.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this WarehouseInventory.


        :param custom_fields: The custom_fields of this WarehouseInventory.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WarehouseInventory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
