# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Order(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Order - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'order_no': 'float',
            'customer_order_no': 'str',
            'lob_id': 'int',
            'warehouse_id': 'int',
            'order_date': 'datetime',
            'customer_no': 'str',
            'use_order_no_root': 'int',
            'first_ship_date': 'datetime',
            'last_ship_date': 'datetime',
            'deliver_on_date': 'datetime',
            'need_by_date': 'datetime',
            'carrier_id': 'int',
            'service_type_id': 'str',
            'ship_via': 'str',
            'media_code': 'str',
            'legacy_restriction_type': 'str',
            'alcohol_order_type': 'str',
            'alternate_usage': 'str',
            'authorization_amount': 'float',
            'authorized_by': 'str',
            'balance_due': 'float',
            'batch_no': 'str',
            'bill_to_attention': 'str',
            'bill_to_company': 'str',
            'bill_to_street': 'str',
            'bill_to_street2': 'str',
            'bill_to_street3': 'str',
            'bill_to_city': 'str',
            'bill_to_state': 'str',
            'bill_to_zip': 'str',
            'bill_to_country': 'str',
            'bill_to_phone': 'str',
            'bill_to_email': 'str',
            'number_of_cartons': 'int',
            'number_of_pallets': 'int',
            'completion_status': 'str',
            'parcel_account_id': 'int',
            'cost_center': 'str',
            'create_date': 'datetime',
            'customer_po_no': 'str',
            'distribution_channel': 'str',
            'distribution_charges': 'float',
            'division': 'int',
            'entered_by': 'str',
            'estimated_weight_lbs': 'float',
            'freight': 'float',
            'gift_message': 'str',
            'group_order_id': 'float',
            'hold_code': 'str',
            'integration_partner_id': 'int',
            'number_of_line_items': 'int',
            'modify_date': 'datetime',
            'oms_order_no': 'int',
            'oms_customer_id': 'int',
            'order_load_program_id': 'int',
            'order_message': 'str',
            'order_reason': 'int',
            'order_source_id': 'int',
            'packing_slip_template_id': 'int',
            'order_confirmation_email_template_id': 'int',
            'shipment_confirmation_email_template_id': 'int',
            'price_level': 'str',
            'priority_code': 'int',
            'fulfillment_process_id': 'int',
            'ship_by': 'datetime',
            'ship_code': 'str',
            'ship_date': 'datetime',
            'ship_to_attention': 'str',
            'ship_to_company': 'str',
            'ship_to_street': 'str',
            'ship_to_street2': 'str',
            'ship_to_street3': 'str',
            'ship_to_city': 'str',
            'ship_to_state': 'str',
            'ship_to_zip': 'str',
            'ship_to_country': 'str',
            'ship_to_phone': 'str',
            'ship_to_email': 'str',
            'shipping_charge': 'float',
            'status': 'str',
            'stop_back_orders': 'str',
            'subtotal': 'float',
            'tax': 'float',
            'total': 'float',
            'total_paid': 'float',
            'total_qty': 'int',
            'weight_lbs': 'float',
            'line_items': 'list[OrderLine]',
            'extra_order_data': 'list[OrderExtraOrderData]',
            'extra_line_item_data': 'list[OrderExtraLineItemData]',
            'external_shipping_system_id': 'int',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'order_no': 'orderNo',
            'customer_order_no': 'customerOrderNo',
            'lob_id': 'lobId',
            'warehouse_id': 'warehouseId',
            'order_date': 'orderDate',
            'customer_no': 'customerNo',
            'use_order_no_root': 'useOrderNoRoot',
            'first_ship_date': 'firstShipDate',
            'last_ship_date': 'lastShipDate',
            'deliver_on_date': 'deliverOnDate',
            'need_by_date': 'needByDate',
            'carrier_id': 'carrierId',
            'service_type_id': 'serviceTypeId',
            'ship_via': 'shipVia',
            'media_code': 'mediaCode',
            'legacy_restriction_type': 'legacyRestrictionType',
            'alcohol_order_type': 'alcoholOrderType',
            'alternate_usage': 'alternateUsage',
            'authorization_amount': 'authorizationAmount',
            'authorized_by': 'authorizedBy',
            'balance_due': 'balanceDue',
            'batch_no': 'batchNo',
            'bill_to_attention': 'billToAttention',
            'bill_to_company': 'billToCompany',
            'bill_to_street': 'billToStreet',
            'bill_to_street2': 'billToStreet2',
            'bill_to_street3': 'billToStreet3',
            'bill_to_city': 'billToCity',
            'bill_to_state': 'billToState',
            'bill_to_zip': 'billToZip',
            'bill_to_country': 'billToCountry',
            'bill_to_phone': 'billToPhone',
            'bill_to_email': 'billToEmail',
            'number_of_cartons': 'numberOfCartons',
            'number_of_pallets': 'numberOfPallets',
            'completion_status': 'completionStatus',
            'parcel_account_id': 'parcelAccountId',
            'cost_center': 'costCenter',
            'create_date': 'createDate',
            'customer_po_no': 'customerPONo',
            'distribution_channel': 'distributionChannel',
            'distribution_charges': 'distributionCharges',
            'division': 'division',
            'entered_by': 'enteredBy',
            'estimated_weight_lbs': 'estimatedWeightLbs',
            'freight': 'freight',
            'gift_message': 'giftMessage',
            'group_order_id': 'groupOrderId',
            'hold_code': 'holdCode',
            'integration_partner_id': 'integrationPartnerId',
            'number_of_line_items': 'numberOfLineItems',
            'modify_date': 'modifyDate',
            'oms_order_no': 'omsOrderNo',
            'oms_customer_id': 'omsCustomerId',
            'order_load_program_id': 'orderLoadProgramId',
            'order_message': 'orderMessage',
            'order_reason': 'orderReason',
            'order_source_id': 'orderSourceId',
            'packing_slip_template_id': 'packingSlipTemplateId',
            'order_confirmation_email_template_id': 'orderConfirmationEmailTemplateId',
            'shipment_confirmation_email_template_id': 'shipmentConfirmationEmailTemplateId',
            'price_level': 'priceLevel',
            'priority_code': 'priorityCode',
            'fulfillment_process_id': 'fulfillmentProcessId',
            'ship_by': 'shipBy',
            'ship_code': 'shipCode',
            'ship_date': 'shipDate',
            'ship_to_attention': 'shipToAttention',
            'ship_to_company': 'shipToCompany',
            'ship_to_street': 'shipToStreet',
            'ship_to_street2': 'shipToStreet2',
            'ship_to_street3': 'shipToStreet3',
            'ship_to_city': 'shipToCity',
            'ship_to_state': 'shipToState',
            'ship_to_zip': 'shipToZip',
            'ship_to_country': 'shipToCountry',
            'ship_to_phone': 'shipToPhone',
            'ship_to_email': 'shipToEmail',
            'shipping_charge': 'shippingCharge',
            'status': 'status',
            'stop_back_orders': 'stopBackOrders',
            'subtotal': 'subtotal',
            'tax': 'tax',
            'total': 'total',
            'total_paid': 'totalPaid',
            'total_qty': 'totalQty',
            'weight_lbs': 'weightLbs',
            'line_items': 'lineItems',
            'extra_order_data': 'extraOrderData',
            'extra_line_item_data': 'extraLineItemData',
            'external_shipping_system_id': 'externalShippingSystemId',
            'custom_fields': 'customFields'
        }

        self._order_no = None
        self._customer_order_no = None
        self._lob_id = None
        self._warehouse_id = None
        self._order_date = None
        self._customer_no = None
        self._use_order_no_root = None
        self._first_ship_date = None
        self._last_ship_date = None
        self._deliver_on_date = None
        self._need_by_date = None
        self._carrier_id = None
        self._service_type_id = None
        self._ship_via = None
        self._media_code = None
        self._legacy_restriction_type = None
        self._alcohol_order_type = None
        self._alternate_usage = None
        self._authorization_amount = None
        self._authorized_by = None
        self._balance_due = None
        self._batch_no = None
        self._bill_to_attention = None
        self._bill_to_company = None
        self._bill_to_street = None
        self._bill_to_street2 = None
        self._bill_to_street3 = None
        self._bill_to_city = None
        self._bill_to_state = None
        self._bill_to_zip = None
        self._bill_to_country = None
        self._bill_to_phone = None
        self._bill_to_email = None
        self._number_of_cartons = None
        self._number_of_pallets = None
        self._completion_status = None
        self._parcel_account_id = None
        self._cost_center = None
        self._create_date = None
        self._customer_po_no = None
        self._distribution_channel = None
        self._distribution_charges = None
        self._division = None
        self._entered_by = None
        self._estimated_weight_lbs = None
        self._freight = None
        self._gift_message = None
        self._group_order_id = None
        self._hold_code = None
        self._integration_partner_id = None
        self._number_of_line_items = None
        self._modify_date = None
        self._oms_order_no = None
        self._oms_customer_id = None
        self._order_load_program_id = None
        self._order_message = None
        self._order_reason = None
        self._order_source_id = None
        self._packing_slip_template_id = None
        self._order_confirmation_email_template_id = None
        self._shipment_confirmation_email_template_id = None
        self._price_level = None
        self._priority_code = None
        self._fulfillment_process_id = None
        self._ship_by = None
        self._ship_code = None
        self._ship_date = None
        self._ship_to_attention = None
        self._ship_to_company = None
        self._ship_to_street = None
        self._ship_to_street2 = None
        self._ship_to_street3 = None
        self._ship_to_city = None
        self._ship_to_state = None
        self._ship_to_zip = None
        self._ship_to_country = None
        self._ship_to_phone = None
        self._ship_to_email = None
        self._shipping_charge = None
        self._status = None
        self._stop_back_orders = None
        self._subtotal = None
        self._tax = None
        self._total = None
        self._total_paid = None
        self._total_qty = None
        self._weight_lbs = None
        self._line_items = None
        self._extra_order_data = None
        self._extra_line_item_data = None
        self._external_shipping_system_id = None
        self._custom_fields = None

    @property
    def order_no(self):
        """
        Gets the order_no of this Order.


        :return: The order_no of this Order.
        :rtype: float
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """
        Sets the order_no of this Order.


        :param order_no: The order_no of this Order.
        :type: float
        """
        self._order_no = order_no

    @property
    def customer_order_no(self):
        """
        Gets the customer_order_no of this Order.


        :return: The customer_order_no of this Order.
        :rtype: str
        """
        return self._customer_order_no

    @customer_order_no.setter
    def customer_order_no(self, customer_order_no):
        """
        Sets the customer_order_no of this Order.


        :param customer_order_no: The customer_order_no of this Order.
        :type: str
        """
        self._customer_order_no = customer_order_no

    @property
    def lob_id(self):
        """
        Gets the lob_id of this Order.


        :return: The lob_id of this Order.
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """
        Sets the lob_id of this Order.


        :param lob_id: The lob_id of this Order.
        :type: int
        """
        self._lob_id = lob_id

    @property
    def warehouse_id(self):
        """
        Gets the warehouse_id of this Order.


        :return: The warehouse_id of this Order.
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """
        Sets the warehouse_id of this Order.


        :param warehouse_id: The warehouse_id of this Order.
        :type: int
        """
        self._warehouse_id = warehouse_id

    @property
    def order_date(self):
        """
        Gets the order_date of this Order.


        :return: The order_date of this Order.
        :rtype: datetime
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """
        Sets the order_date of this Order.


        :param order_date: The order_date of this Order.
        :type: datetime
        """
        self._order_date = order_date

    @property
    def customer_no(self):
        """
        Gets the customer_no of this Order.


        :return: The customer_no of this Order.
        :rtype: str
        """
        return self._customer_no

    @customer_no.setter
    def customer_no(self, customer_no):
        """
        Sets the customer_no of this Order.


        :param customer_no: The customer_no of this Order.
        :type: str
        """
        self._customer_no = customer_no

    @property
    def use_order_no_root(self):
        """
        Gets the use_order_no_root of this Order.


        :return: The use_order_no_root of this Order.
        :rtype: int
        """
        return self._use_order_no_root

    @use_order_no_root.setter
    def use_order_no_root(self, use_order_no_root):
        """
        Sets the use_order_no_root of this Order.


        :param use_order_no_root: The use_order_no_root of this Order.
        :type: int
        """
        self._use_order_no_root = use_order_no_root

    @property
    def first_ship_date(self):
        """
        Gets the first_ship_date of this Order.


        :return: The first_ship_date of this Order.
        :rtype: datetime
        """
        return self._first_ship_date

    @first_ship_date.setter
    def first_ship_date(self, first_ship_date):
        """
        Sets the first_ship_date of this Order.


        :param first_ship_date: The first_ship_date of this Order.
        :type: datetime
        """
        self._first_ship_date = first_ship_date

    @property
    def last_ship_date(self):
        """
        Gets the last_ship_date of this Order.


        :return: The last_ship_date of this Order.
        :rtype: datetime
        """
        return self._last_ship_date

    @last_ship_date.setter
    def last_ship_date(self, last_ship_date):
        """
        Sets the last_ship_date of this Order.


        :param last_ship_date: The last_ship_date of this Order.
        :type: datetime
        """
        self._last_ship_date = last_ship_date

    @property
    def deliver_on_date(self):
        """
        Gets the deliver_on_date of this Order.


        :return: The deliver_on_date of this Order.
        :rtype: datetime
        """
        return self._deliver_on_date

    @deliver_on_date.setter
    def deliver_on_date(self, deliver_on_date):
        """
        Sets the deliver_on_date of this Order.


        :param deliver_on_date: The deliver_on_date of this Order.
        :type: datetime
        """
        self._deliver_on_date = deliver_on_date

    @property
    def need_by_date(self):
        """
        Gets the need_by_date of this Order.


        :return: The need_by_date of this Order.
        :rtype: datetime
        """
        return self._need_by_date

    @need_by_date.setter
    def need_by_date(self, need_by_date):
        """
        Sets the need_by_date of this Order.


        :param need_by_date: The need_by_date of this Order.
        :type: datetime
        """
        self._need_by_date = need_by_date

    @property
    def carrier_id(self):
        """
        Gets the carrier_id of this Order.


        :return: The carrier_id of this Order.
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """
        Sets the carrier_id of this Order.


        :param carrier_id: The carrier_id of this Order.
        :type: int
        """
        self._carrier_id = carrier_id

    @property
    def service_type_id(self):
        """
        Gets the service_type_id of this Order.


        :return: The service_type_id of this Order.
        :rtype: str
        """
        return self._service_type_id

    @service_type_id.setter
    def service_type_id(self, service_type_id):
        """
        Sets the service_type_id of this Order.


        :param service_type_id: The service_type_id of this Order.
        :type: str
        """
        self._service_type_id = service_type_id

    @property
    def ship_via(self):
        """
        Gets the ship_via of this Order.


        :return: The ship_via of this Order.
        :rtype: str
        """
        return self._ship_via

    @ship_via.setter
    def ship_via(self, ship_via):
        """
        Sets the ship_via of this Order.


        :param ship_via: The ship_via of this Order.
        :type: str
        """
        self._ship_via = ship_via

    @property
    def media_code(self):
        """
        Gets the media_code of this Order.


        :return: The media_code of this Order.
        :rtype: str
        """
        return self._media_code

    @media_code.setter
    def media_code(self, media_code):
        """
        Sets the media_code of this Order.


        :param media_code: The media_code of this Order.
        :type: str
        """
        self._media_code = media_code

    @property
    def legacy_restriction_type(self):
        """
        Gets the legacy_restriction_type of this Order.


        :return: The legacy_restriction_type of this Order.
        :rtype: str
        """
        return self._legacy_restriction_type

    @legacy_restriction_type.setter
    def legacy_restriction_type(self, legacy_restriction_type):
        """
        Sets the legacy_restriction_type of this Order.


        :param legacy_restriction_type: The legacy_restriction_type of this Order.
        :type: str
        """
        self._legacy_restriction_type = legacy_restriction_type

    @property
    def alcohol_order_type(self):
        """
        Gets the alcohol_order_type of this Order.


        :return: The alcohol_order_type of this Order.
        :rtype: str
        """
        return self._alcohol_order_type

    @alcohol_order_type.setter
    def alcohol_order_type(self, alcohol_order_type):
        """
        Sets the alcohol_order_type of this Order.


        :param alcohol_order_type: The alcohol_order_type of this Order.
        :type: str
        """
        self._alcohol_order_type = alcohol_order_type

    @property
    def alternate_usage(self):
        """
        Gets the alternate_usage of this Order.


        :return: The alternate_usage of this Order.
        :rtype: str
        """
        return self._alternate_usage

    @alternate_usage.setter
    def alternate_usage(self, alternate_usage):
        """
        Sets the alternate_usage of this Order.


        :param alternate_usage: The alternate_usage of this Order.
        :type: str
        """
        self._alternate_usage = alternate_usage

    @property
    def authorization_amount(self):
        """
        Gets the authorization_amount of this Order.


        :return: The authorization_amount of this Order.
        :rtype: float
        """
        return self._authorization_amount

    @authorization_amount.setter
    def authorization_amount(self, authorization_amount):
        """
        Sets the authorization_amount of this Order.


        :param authorization_amount: The authorization_amount of this Order.
        :type: float
        """
        self._authorization_amount = authorization_amount

    @property
    def authorized_by(self):
        """
        Gets the authorized_by of this Order.


        :return: The authorized_by of this Order.
        :rtype: str
        """
        return self._authorized_by

    @authorized_by.setter
    def authorized_by(self, authorized_by):
        """
        Sets the authorized_by of this Order.


        :param authorized_by: The authorized_by of this Order.
        :type: str
        """
        self._authorized_by = authorized_by

    @property
    def balance_due(self):
        """
        Gets the balance_due of this Order.


        :return: The balance_due of this Order.
        :rtype: float
        """
        return self._balance_due

    @balance_due.setter
    def balance_due(self, balance_due):
        """
        Sets the balance_due of this Order.


        :param balance_due: The balance_due of this Order.
        :type: float
        """
        self._balance_due = balance_due

    @property
    def batch_no(self):
        """
        Gets the batch_no of this Order.


        :return: The batch_no of this Order.
        :rtype: str
        """
        return self._batch_no

    @batch_no.setter
    def batch_no(self, batch_no):
        """
        Sets the batch_no of this Order.


        :param batch_no: The batch_no of this Order.
        :type: str
        """
        self._batch_no = batch_no

    @property
    def bill_to_attention(self):
        """
        Gets the bill_to_attention of this Order.


        :return: The bill_to_attention of this Order.
        :rtype: str
        """
        return self._bill_to_attention

    @bill_to_attention.setter
    def bill_to_attention(self, bill_to_attention):
        """
        Sets the bill_to_attention of this Order.


        :param bill_to_attention: The bill_to_attention of this Order.
        :type: str
        """
        self._bill_to_attention = bill_to_attention

    @property
    def bill_to_company(self):
        """
        Gets the bill_to_company of this Order.


        :return: The bill_to_company of this Order.
        :rtype: str
        """
        return self._bill_to_company

    @bill_to_company.setter
    def bill_to_company(self, bill_to_company):
        """
        Sets the bill_to_company of this Order.


        :param bill_to_company: The bill_to_company of this Order.
        :type: str
        """
        self._bill_to_company = bill_to_company

    @property
    def bill_to_street(self):
        """
        Gets the bill_to_street of this Order.


        :return: The bill_to_street of this Order.
        :rtype: str
        """
        return self._bill_to_street

    @bill_to_street.setter
    def bill_to_street(self, bill_to_street):
        """
        Sets the bill_to_street of this Order.


        :param bill_to_street: The bill_to_street of this Order.
        :type: str
        """
        self._bill_to_street = bill_to_street

    @property
    def bill_to_street2(self):
        """
        Gets the bill_to_street2 of this Order.


        :return: The bill_to_street2 of this Order.
        :rtype: str
        """
        return self._bill_to_street2

    @bill_to_street2.setter
    def bill_to_street2(self, bill_to_street2):
        """
        Sets the bill_to_street2 of this Order.


        :param bill_to_street2: The bill_to_street2 of this Order.
        :type: str
        """
        self._bill_to_street2 = bill_to_street2

    @property
    def bill_to_street3(self):
        """
        Gets the bill_to_street3 of this Order.


        :return: The bill_to_street3 of this Order.
        :rtype: str
        """
        return self._bill_to_street3

    @bill_to_street3.setter
    def bill_to_street3(self, bill_to_street3):
        """
        Sets the bill_to_street3 of this Order.


        :param bill_to_street3: The bill_to_street3 of this Order.
        :type: str
        """
        self._bill_to_street3 = bill_to_street3

    @property
    def bill_to_city(self):
        """
        Gets the bill_to_city of this Order.


        :return: The bill_to_city of this Order.
        :rtype: str
        """
        return self._bill_to_city

    @bill_to_city.setter
    def bill_to_city(self, bill_to_city):
        """
        Sets the bill_to_city of this Order.


        :param bill_to_city: The bill_to_city of this Order.
        :type: str
        """
        self._bill_to_city = bill_to_city

    @property
    def bill_to_state(self):
        """
        Gets the bill_to_state of this Order.


        :return: The bill_to_state of this Order.
        :rtype: str
        """
        return self._bill_to_state

    @bill_to_state.setter
    def bill_to_state(self, bill_to_state):
        """
        Sets the bill_to_state of this Order.


        :param bill_to_state: The bill_to_state of this Order.
        :type: str
        """
        self._bill_to_state = bill_to_state

    @property
    def bill_to_zip(self):
        """
        Gets the bill_to_zip of this Order.


        :return: The bill_to_zip of this Order.
        :rtype: str
        """
        return self._bill_to_zip

    @bill_to_zip.setter
    def bill_to_zip(self, bill_to_zip):
        """
        Sets the bill_to_zip of this Order.


        :param bill_to_zip: The bill_to_zip of this Order.
        :type: str
        """
        self._bill_to_zip = bill_to_zip

    @property
    def bill_to_country(self):
        """
        Gets the bill_to_country of this Order.


        :return: The bill_to_country of this Order.
        :rtype: str
        """
        return self._bill_to_country

    @bill_to_country.setter
    def bill_to_country(self, bill_to_country):
        """
        Sets the bill_to_country of this Order.


        :param bill_to_country: The bill_to_country of this Order.
        :type: str
        """
        self._bill_to_country = bill_to_country

    @property
    def bill_to_phone(self):
        """
        Gets the bill_to_phone of this Order.


        :return: The bill_to_phone of this Order.
        :rtype: str
        """
        return self._bill_to_phone

    @bill_to_phone.setter
    def bill_to_phone(self, bill_to_phone):
        """
        Sets the bill_to_phone of this Order.


        :param bill_to_phone: The bill_to_phone of this Order.
        :type: str
        """
        self._bill_to_phone = bill_to_phone

    @property
    def bill_to_email(self):
        """
        Gets the bill_to_email of this Order.


        :return: The bill_to_email of this Order.
        :rtype: str
        """
        return self._bill_to_email

    @bill_to_email.setter
    def bill_to_email(self, bill_to_email):
        """
        Sets the bill_to_email of this Order.


        :param bill_to_email: The bill_to_email of this Order.
        :type: str
        """
        self._bill_to_email = bill_to_email

    @property
    def number_of_cartons(self):
        """
        Gets the number_of_cartons of this Order.


        :return: The number_of_cartons of this Order.
        :rtype: int
        """
        return self._number_of_cartons

    @number_of_cartons.setter
    def number_of_cartons(self, number_of_cartons):
        """
        Sets the number_of_cartons of this Order.


        :param number_of_cartons: The number_of_cartons of this Order.
        :type: int
        """
        self._number_of_cartons = number_of_cartons

    @property
    def number_of_pallets(self):
        """
        Gets the number_of_pallets of this Order.


        :return: The number_of_pallets of this Order.
        :rtype: int
        """
        return self._number_of_pallets

    @number_of_pallets.setter
    def number_of_pallets(self, number_of_pallets):
        """
        Sets the number_of_pallets of this Order.


        :param number_of_pallets: The number_of_pallets of this Order.
        :type: int
        """
        self._number_of_pallets = number_of_pallets

    @property
    def completion_status(self):
        """
        Gets the completion_status of this Order.


        :return: The completion_status of this Order.
        :rtype: str
        """
        return self._completion_status

    @completion_status.setter
    def completion_status(self, completion_status):
        """
        Sets the completion_status of this Order.


        :param completion_status: The completion_status of this Order.
        :type: str
        """
        self._completion_status = completion_status

    @property
    def parcel_account_id(self):
        """
        Gets the parcel_account_id of this Order.


        :return: The parcel_account_id of this Order.
        :rtype: int
        """
        return self._parcel_account_id

    @parcel_account_id.setter
    def parcel_account_id(self, parcel_account_id):
        """
        Sets the parcel_account_id of this Order.


        :param parcel_account_id: The parcel_account_id of this Order.
        :type: int
        """
        self._parcel_account_id = parcel_account_id

    @property
    def cost_center(self):
        """
        Gets the cost_center of this Order.


        :return: The cost_center of this Order.
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """
        Sets the cost_center of this Order.


        :param cost_center: The cost_center of this Order.
        :type: str
        """
        self._cost_center = cost_center

    @property
    def create_date(self):
        """
        Gets the create_date of this Order.


        :return: The create_date of this Order.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this Order.


        :param create_date: The create_date of this Order.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def customer_po_no(self):
        """
        Gets the customer_po_no of this Order.


        :return: The customer_po_no of this Order.
        :rtype: str
        """
        return self._customer_po_no

    @customer_po_no.setter
    def customer_po_no(self, customer_po_no):
        """
        Sets the customer_po_no of this Order.


        :param customer_po_no: The customer_po_no of this Order.
        :type: str
        """
        self._customer_po_no = customer_po_no

    @property
    def distribution_channel(self):
        """
        Gets the distribution_channel of this Order.


        :return: The distribution_channel of this Order.
        :rtype: str
        """
        return self._distribution_channel

    @distribution_channel.setter
    def distribution_channel(self, distribution_channel):
        """
        Sets the distribution_channel of this Order.


        :param distribution_channel: The distribution_channel of this Order.
        :type: str
        """
        self._distribution_channel = distribution_channel

    @property
    def distribution_charges(self):
        """
        Gets the distribution_charges of this Order.


        :return: The distribution_charges of this Order.
        :rtype: float
        """
        return self._distribution_charges

    @distribution_charges.setter
    def distribution_charges(self, distribution_charges):
        """
        Sets the distribution_charges of this Order.


        :param distribution_charges: The distribution_charges of this Order.
        :type: float
        """
        self._distribution_charges = distribution_charges

    @property
    def division(self):
        """
        Gets the division of this Order.


        :return: The division of this Order.
        :rtype: int
        """
        return self._division

    @division.setter
    def division(self, division):
        """
        Sets the division of this Order.


        :param division: The division of this Order.
        :type: int
        """
        self._division = division

    @property
    def entered_by(self):
        """
        Gets the entered_by of this Order.


        :return: The entered_by of this Order.
        :rtype: str
        """
        return self._entered_by

    @entered_by.setter
    def entered_by(self, entered_by):
        """
        Sets the entered_by of this Order.


        :param entered_by: The entered_by of this Order.
        :type: str
        """
        self._entered_by = entered_by

    @property
    def estimated_weight_lbs(self):
        """
        Gets the estimated_weight_lbs of this Order.


        :return: The estimated_weight_lbs of this Order.
        :rtype: float
        """
        return self._estimated_weight_lbs

    @estimated_weight_lbs.setter
    def estimated_weight_lbs(self, estimated_weight_lbs):
        """
        Sets the estimated_weight_lbs of this Order.


        :param estimated_weight_lbs: The estimated_weight_lbs of this Order.
        :type: float
        """
        self._estimated_weight_lbs = estimated_weight_lbs

    @property
    def freight(self):
        """
        Gets the freight of this Order.


        :return: The freight of this Order.
        :rtype: float
        """
        return self._freight

    @freight.setter
    def freight(self, freight):
        """
        Sets the freight of this Order.


        :param freight: The freight of this Order.
        :type: float
        """
        self._freight = freight

    @property
    def gift_message(self):
        """
        Gets the gift_message of this Order.


        :return: The gift_message of this Order.
        :rtype: str
        """
        return self._gift_message

    @gift_message.setter
    def gift_message(self, gift_message):
        """
        Sets the gift_message of this Order.


        :param gift_message: The gift_message of this Order.
        :type: str
        """
        self._gift_message = gift_message

    @property
    def group_order_id(self):
        """
        Gets the group_order_id of this Order.


        :return: The group_order_id of this Order.
        :rtype: float
        """
        return self._group_order_id

    @group_order_id.setter
    def group_order_id(self, group_order_id):
        """
        Sets the group_order_id of this Order.


        :param group_order_id: The group_order_id of this Order.
        :type: float
        """
        self._group_order_id = group_order_id

    @property
    def hold_code(self):
        """
        Gets the hold_code of this Order.


        :return: The hold_code of this Order.
        :rtype: str
        """
        return self._hold_code

    @hold_code.setter
    def hold_code(self, hold_code):
        """
        Sets the hold_code of this Order.


        :param hold_code: The hold_code of this Order.
        :type: str
        """
        self._hold_code = hold_code

    @property
    def integration_partner_id(self):
        """
        Gets the integration_partner_id of this Order.


        :return: The integration_partner_id of this Order.
        :rtype: int
        """
        return self._integration_partner_id

    @integration_partner_id.setter
    def integration_partner_id(self, integration_partner_id):
        """
        Sets the integration_partner_id of this Order.


        :param integration_partner_id: The integration_partner_id of this Order.
        :type: int
        """
        self._integration_partner_id = integration_partner_id

    @property
    def number_of_line_items(self):
        """
        Gets the number_of_line_items of this Order.


        :return: The number_of_line_items of this Order.
        :rtype: int
        """
        return self._number_of_line_items

    @number_of_line_items.setter
    def number_of_line_items(self, number_of_line_items):
        """
        Sets the number_of_line_items of this Order.


        :param number_of_line_items: The number_of_line_items of this Order.
        :type: int
        """
        self._number_of_line_items = number_of_line_items

    @property
    def modify_date(self):
        """
        Gets the modify_date of this Order.


        :return: The modify_date of this Order.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this Order.


        :param modify_date: The modify_date of this Order.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def oms_order_no(self):
        """
        Gets the oms_order_no of this Order.


        :return: The oms_order_no of this Order.
        :rtype: int
        """
        return self._oms_order_no

    @oms_order_no.setter
    def oms_order_no(self, oms_order_no):
        """
        Sets the oms_order_no of this Order.


        :param oms_order_no: The oms_order_no of this Order.
        :type: int
        """
        self._oms_order_no = oms_order_no

    @property
    def oms_customer_id(self):
        """
        Gets the oms_customer_id of this Order.


        :return: The oms_customer_id of this Order.
        :rtype: int
        """
        return self._oms_customer_id

    @oms_customer_id.setter
    def oms_customer_id(self, oms_customer_id):
        """
        Sets the oms_customer_id of this Order.


        :param oms_customer_id: The oms_customer_id of this Order.
        :type: int
        """
        self._oms_customer_id = oms_customer_id

    @property
    def order_load_program_id(self):
        """
        Gets the order_load_program_id of this Order.


        :return: The order_load_program_id of this Order.
        :rtype: int
        """
        return self._order_load_program_id

    @order_load_program_id.setter
    def order_load_program_id(self, order_load_program_id):
        """
        Sets the order_load_program_id of this Order.


        :param order_load_program_id: The order_load_program_id of this Order.
        :type: int
        """
        self._order_load_program_id = order_load_program_id

    @property
    def order_message(self):
        """
        Gets the order_message of this Order.


        :return: The order_message of this Order.
        :rtype: str
        """
        return self._order_message

    @order_message.setter
    def order_message(self, order_message):
        """
        Sets the order_message of this Order.


        :param order_message: The order_message of this Order.
        :type: str
        """
        self._order_message = order_message

    @property
    def order_reason(self):
        """
        Gets the order_reason of this Order.


        :return: The order_reason of this Order.
        :rtype: int
        """
        return self._order_reason

    @order_reason.setter
    def order_reason(self, order_reason):
        """
        Sets the order_reason of this Order.


        :param order_reason: The order_reason of this Order.
        :type: int
        """
        self._order_reason = order_reason

    @property
    def order_source_id(self):
        """
        Gets the order_source_id of this Order.


        :return: The order_source_id of this Order.
        :rtype: int
        """
        return self._order_source_id

    @order_source_id.setter
    def order_source_id(self, order_source_id):
        """
        Sets the order_source_id of this Order.


        :param order_source_id: The order_source_id of this Order.
        :type: int
        """
        self._order_source_id = order_source_id

    @property
    def packing_slip_template_id(self):
        """
        Gets the packing_slip_template_id of this Order.


        :return: The packing_slip_template_id of this Order.
        :rtype: int
        """
        return self._packing_slip_template_id

    @packing_slip_template_id.setter
    def packing_slip_template_id(self, packing_slip_template_id):
        """
        Sets the packing_slip_template_id of this Order.


        :param packing_slip_template_id: The packing_slip_template_id of this Order.
        :type: int
        """
        self._packing_slip_template_id = packing_slip_template_id

    @property
    def order_confirmation_email_template_id(self):
        """
        Gets the order_confirmation_email_template_id of this Order.


        :return: The order_confirmation_email_template_id of this Order.
        :rtype: int
        """
        return self._order_confirmation_email_template_id

    @order_confirmation_email_template_id.setter
    def order_confirmation_email_template_id(self, order_confirmation_email_template_id):
        """
        Sets the order_confirmation_email_template_id of this Order.


        :param order_confirmation_email_template_id: The order_confirmation_email_template_id of this Order.
        :type: int
        """
        self._order_confirmation_email_template_id = order_confirmation_email_template_id

    @property
    def shipment_confirmation_email_template_id(self):
        """
        Gets the shipment_confirmation_email_template_id of this Order.


        :return: The shipment_confirmation_email_template_id of this Order.
        :rtype: int
        """
        return self._shipment_confirmation_email_template_id

    @shipment_confirmation_email_template_id.setter
    def shipment_confirmation_email_template_id(self, shipment_confirmation_email_template_id):
        """
        Sets the shipment_confirmation_email_template_id of this Order.


        :param shipment_confirmation_email_template_id: The shipment_confirmation_email_template_id of this Order.
        :type: int
        """
        self._shipment_confirmation_email_template_id = shipment_confirmation_email_template_id

    @property
    def price_level(self):
        """
        Gets the price_level of this Order.


        :return: The price_level of this Order.
        :rtype: str
        """
        return self._price_level

    @price_level.setter
    def price_level(self, price_level):
        """
        Sets the price_level of this Order.


        :param price_level: The price_level of this Order.
        :type: str
        """
        self._price_level = price_level

    @property
    def priority_code(self):
        """
        Gets the priority_code of this Order.


        :return: The priority_code of this Order.
        :rtype: int
        """
        return self._priority_code

    @priority_code.setter
    def priority_code(self, priority_code):
        """
        Sets the priority_code of this Order.


        :param priority_code: The priority_code of this Order.
        :type: int
        """
        self._priority_code = priority_code

    @property
    def fulfillment_process_id(self):
        """
        Gets the fulfillment_process_id of this Order.


        :return: The fulfillment_process_id of this Order.
        :rtype: int
        """
        return self._fulfillment_process_id

    @fulfillment_process_id.setter
    def fulfillment_process_id(self, fulfillment_process_id):
        """
        Sets the fulfillment_process_id of this Order.


        :param fulfillment_process_id: The fulfillment_process_id of this Order.
        :type: int
        """
        self._fulfillment_process_id = fulfillment_process_id

    @property
    def ship_by(self):
        """
        Gets the ship_by of this Order.


        :return: The ship_by of this Order.
        :rtype: datetime
        """
        return self._ship_by

    @ship_by.setter
    def ship_by(self, ship_by):
        """
        Sets the ship_by of this Order.


        :param ship_by: The ship_by of this Order.
        :type: datetime
        """
        self._ship_by = ship_by

    @property
    def ship_code(self):
        """
        Gets the ship_code of this Order.


        :return: The ship_code of this Order.
        :rtype: str
        """
        return self._ship_code

    @ship_code.setter
    def ship_code(self, ship_code):
        """
        Sets the ship_code of this Order.


        :param ship_code: The ship_code of this Order.
        :type: str
        """
        self._ship_code = ship_code

    @property
    def ship_date(self):
        """
        Gets the ship_date of this Order.


        :return: The ship_date of this Order.
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """
        Sets the ship_date of this Order.


        :param ship_date: The ship_date of this Order.
        :type: datetime
        """
        self._ship_date = ship_date

    @property
    def ship_to_attention(self):
        """
        Gets the ship_to_attention of this Order.


        :return: The ship_to_attention of this Order.
        :rtype: str
        """
        return self._ship_to_attention

    @ship_to_attention.setter
    def ship_to_attention(self, ship_to_attention):
        """
        Sets the ship_to_attention of this Order.


        :param ship_to_attention: The ship_to_attention of this Order.
        :type: str
        """
        self._ship_to_attention = ship_to_attention

    @property
    def ship_to_company(self):
        """
        Gets the ship_to_company of this Order.


        :return: The ship_to_company of this Order.
        :rtype: str
        """
        return self._ship_to_company

    @ship_to_company.setter
    def ship_to_company(self, ship_to_company):
        """
        Sets the ship_to_company of this Order.


        :param ship_to_company: The ship_to_company of this Order.
        :type: str
        """
        self._ship_to_company = ship_to_company

    @property
    def ship_to_street(self):
        """
        Gets the ship_to_street of this Order.


        :return: The ship_to_street of this Order.
        :rtype: str
        """
        return self._ship_to_street

    @ship_to_street.setter
    def ship_to_street(self, ship_to_street):
        """
        Sets the ship_to_street of this Order.


        :param ship_to_street: The ship_to_street of this Order.
        :type: str
        """
        self._ship_to_street = ship_to_street

    @property
    def ship_to_street2(self):
        """
        Gets the ship_to_street2 of this Order.


        :return: The ship_to_street2 of this Order.
        :rtype: str
        """
        return self._ship_to_street2

    @ship_to_street2.setter
    def ship_to_street2(self, ship_to_street2):
        """
        Sets the ship_to_street2 of this Order.


        :param ship_to_street2: The ship_to_street2 of this Order.
        :type: str
        """
        self._ship_to_street2 = ship_to_street2

    @property
    def ship_to_street3(self):
        """
        Gets the ship_to_street3 of this Order.


        :return: The ship_to_street3 of this Order.
        :rtype: str
        """
        return self._ship_to_street3

    @ship_to_street3.setter
    def ship_to_street3(self, ship_to_street3):
        """
        Sets the ship_to_street3 of this Order.


        :param ship_to_street3: The ship_to_street3 of this Order.
        :type: str
        """
        self._ship_to_street3 = ship_to_street3

    @property
    def ship_to_city(self):
        """
        Gets the ship_to_city of this Order.


        :return: The ship_to_city of this Order.
        :rtype: str
        """
        return self._ship_to_city

    @ship_to_city.setter
    def ship_to_city(self, ship_to_city):
        """
        Sets the ship_to_city of this Order.


        :param ship_to_city: The ship_to_city of this Order.
        :type: str
        """
        self._ship_to_city = ship_to_city

    @property
    def ship_to_state(self):
        """
        Gets the ship_to_state of this Order.


        :return: The ship_to_state of this Order.
        :rtype: str
        """
        return self._ship_to_state

    @ship_to_state.setter
    def ship_to_state(self, ship_to_state):
        """
        Sets the ship_to_state of this Order.


        :param ship_to_state: The ship_to_state of this Order.
        :type: str
        """
        self._ship_to_state = ship_to_state

    @property
    def ship_to_zip(self):
        """
        Gets the ship_to_zip of this Order.


        :return: The ship_to_zip of this Order.
        :rtype: str
        """
        return self._ship_to_zip

    @ship_to_zip.setter
    def ship_to_zip(self, ship_to_zip):
        """
        Sets the ship_to_zip of this Order.


        :param ship_to_zip: The ship_to_zip of this Order.
        :type: str
        """
        self._ship_to_zip = ship_to_zip

    @property
    def ship_to_country(self):
        """
        Gets the ship_to_country of this Order.


        :return: The ship_to_country of this Order.
        :rtype: str
        """
        return self._ship_to_country

    @ship_to_country.setter
    def ship_to_country(self, ship_to_country):
        """
        Sets the ship_to_country of this Order.


        :param ship_to_country: The ship_to_country of this Order.
        :type: str
        """
        self._ship_to_country = ship_to_country

    @property
    def ship_to_phone(self):
        """
        Gets the ship_to_phone of this Order.


        :return: The ship_to_phone of this Order.
        :rtype: str
        """
        return self._ship_to_phone

    @ship_to_phone.setter
    def ship_to_phone(self, ship_to_phone):
        """
        Sets the ship_to_phone of this Order.


        :param ship_to_phone: The ship_to_phone of this Order.
        :type: str
        """
        self._ship_to_phone = ship_to_phone

    @property
    def ship_to_email(self):
        """
        Gets the ship_to_email of this Order.


        :return: The ship_to_email of this Order.
        :rtype: str
        """
        return self._ship_to_email

    @ship_to_email.setter
    def ship_to_email(self, ship_to_email):
        """
        Sets the ship_to_email of this Order.


        :param ship_to_email: The ship_to_email of this Order.
        :type: str
        """
        self._ship_to_email = ship_to_email

    @property
    def shipping_charge(self):
        """
        Gets the shipping_charge of this Order.


        :return: The shipping_charge of this Order.
        :rtype: float
        """
        return self._shipping_charge

    @shipping_charge.setter
    def shipping_charge(self, shipping_charge):
        """
        Sets the shipping_charge of this Order.


        :param shipping_charge: The shipping_charge of this Order.
        :type: float
        """
        self._shipping_charge = shipping_charge

    @property
    def status(self):
        """
        Gets the status of this Order.


        :return: The status of this Order.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this Order.


        :param status: The status of this Order.
        :type: str
        """
        self._status = status

    @property
    def stop_back_orders(self):
        """
        Gets the stop_back_orders of this Order.


        :return: The stop_back_orders of this Order.
        :rtype: str
        """
        return self._stop_back_orders

    @stop_back_orders.setter
    def stop_back_orders(self, stop_back_orders):
        """
        Sets the stop_back_orders of this Order.


        :param stop_back_orders: The stop_back_orders of this Order.
        :type: str
        """
        self._stop_back_orders = stop_back_orders

    @property
    def subtotal(self):
        """
        Gets the subtotal of this Order.


        :return: The subtotal of this Order.
        :rtype: float
        """
        return self._subtotal

    @subtotal.setter
    def subtotal(self, subtotal):
        """
        Sets the subtotal of this Order.


        :param subtotal: The subtotal of this Order.
        :type: float
        """
        self._subtotal = subtotal

    @property
    def tax(self):
        """
        Gets the tax of this Order.


        :return: The tax of this Order.
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """
        Sets the tax of this Order.


        :param tax: The tax of this Order.
        :type: float
        """
        self._tax = tax

    @property
    def total(self):
        """
        Gets the total of this Order.


        :return: The total of this Order.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """
        Sets the total of this Order.


        :param total: The total of this Order.
        :type: float
        """
        self._total = total

    @property
    def total_paid(self):
        """
        Gets the total_paid of this Order.


        :return: The total_paid of this Order.
        :rtype: float
        """
        return self._total_paid

    @total_paid.setter
    def total_paid(self, total_paid):
        """
        Sets the total_paid of this Order.


        :param total_paid: The total_paid of this Order.
        :type: float
        """
        self._total_paid = total_paid

    @property
    def total_qty(self):
        """
        Gets the total_qty of this Order.


        :return: The total_qty of this Order.
        :rtype: int
        """
        return self._total_qty

    @total_qty.setter
    def total_qty(self, total_qty):
        """
        Sets the total_qty of this Order.


        :param total_qty: The total_qty of this Order.
        :type: int
        """
        self._total_qty = total_qty

    @property
    def weight_lbs(self):
        """
        Gets the weight_lbs of this Order.


        :return: The weight_lbs of this Order.
        :rtype: float
        """
        return self._weight_lbs

    @weight_lbs.setter
    def weight_lbs(self, weight_lbs):
        """
        Sets the weight_lbs of this Order.


        :param weight_lbs: The weight_lbs of this Order.
        :type: float
        """
        self._weight_lbs = weight_lbs

    @property
    def line_items(self):
        """
        Gets the line_items of this Order.


        :return: The line_items of this Order.
        :rtype: list[OrderLine]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """
        Sets the line_items of this Order.


        :param line_items: The line_items of this Order.
        :type: list[OrderLine]
        """
        self._line_items = line_items

    @property
    def extra_order_data(self):
        """
        Gets the extra_order_data of this Order.


        :return: The extra_order_data of this Order.
        :rtype: list[OrderExtraOrderData]
        """
        return self._extra_order_data

    @extra_order_data.setter
    def extra_order_data(self, extra_order_data):
        """
        Sets the extra_order_data of this Order.


        :param extra_order_data: The extra_order_data of this Order.
        :type: list[OrderExtraOrderData]
        """
        self._extra_order_data = extra_order_data

    @property
    def extra_line_item_data(self):
        """
        Gets the extra_line_item_data of this Order.


        :return: The extra_line_item_data of this Order.
        :rtype: list[OrderExtraLineItemData]
        """
        return self._extra_line_item_data

    @extra_line_item_data.setter
    def extra_line_item_data(self, extra_line_item_data):
        """
        Sets the extra_line_item_data of this Order.


        :param extra_line_item_data: The extra_line_item_data of this Order.
        :type: list[OrderExtraLineItemData]
        """
        self._extra_line_item_data = extra_line_item_data

    @property
    def external_shipping_system_id(self):
        """
        Gets the external_shipping_system_id of this Order.


        :return: The external_shipping_system_id of this Order.
        :rtype: int
        """
        return self._external_shipping_system_id

    @external_shipping_system_id.setter
    def external_shipping_system_id(self, external_shipping_system_id):
        """
        Sets the external_shipping_system_id of this Order.


        :param external_shipping_system_id: The external_shipping_system_id of this Order.
        :type: int
        """
        self._external_shipping_system_id = external_shipping_system_id

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this Order.


        :return: The custom_fields of this Order.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this Order.


        :param custom_fields: The custom_fields of this Order.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

