# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class LocationAddressScheme(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        LocationAddressScheme - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'client_id': 'int',
            'name': 'str',
            'format_string': 'str',
            'location_naming_scheme': 'str',
            'location_number_zero_padded': 'bool',
            'location_number_minimum_number_of_digits': 'int',
            'level_naming_scheme': 'str',
            'level_number_zero_padded': 'bool',
            'level_number_minimum_number_of_digits': 'int',
            'aisle_naming_scheme': 'str',
            'aisle_number_zero_padded': 'bool',
            'aisle_number_minimum_number_of_digits': 'int',
            'bay_naming_scheme': 'str',
            'bay_number_zero_padded': 'bool',
            'bay_number_minimum_number_of_digits': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'client_id': 'clientId',
            'name': 'name',
            'format_string': 'formatString',
            'location_naming_scheme': 'locationNamingScheme',
            'location_number_zero_padded': 'locationNumberZeroPadded',
            'location_number_minimum_number_of_digits': 'locationNumberMinimumNumberOfDigits',
            'level_naming_scheme': 'levelNamingScheme',
            'level_number_zero_padded': 'levelNumberZeroPadded',
            'level_number_minimum_number_of_digits': 'levelNumberMinimumNumberOfDigits',
            'aisle_naming_scheme': 'aisleNamingScheme',
            'aisle_number_zero_padded': 'aisleNumberZeroPadded',
            'aisle_number_minimum_number_of_digits': 'aisleNumberMinimumNumberOfDigits',
            'bay_naming_scheme': 'bayNamingScheme',
            'bay_number_zero_padded': 'bayNumberZeroPadded',
            'bay_number_minimum_number_of_digits': 'bayNumberMinimumNumberOfDigits',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._client_id = None
        self._name = None
        self._format_string = None
        self._location_naming_scheme = None
        self._location_number_zero_padded = False
        self._location_number_minimum_number_of_digits = None
        self._level_naming_scheme = None
        self._level_number_zero_padded = False
        self._level_number_minimum_number_of_digits = None
        self._aisle_naming_scheme = None
        self._aisle_number_zero_padded = False
        self._aisle_number_minimum_number_of_digits = None
        self._bay_naming_scheme = None
        self._bay_number_zero_padded = False
        self._bay_number_minimum_number_of_digits = None
        self._create_date = None
        self._modify_date = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this LocationAddressScheme.


        :return: The id of this LocationAddressScheme.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this LocationAddressScheme.


        :param id: The id of this LocationAddressScheme.
        :type: int
        """
        self._id = id

    @property
    def client_id(self):
        """
        Gets the client_id of this LocationAddressScheme.


        :return: The client_id of this LocationAddressScheme.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """
        Sets the client_id of this LocationAddressScheme.


        :param client_id: The client_id of this LocationAddressScheme.
        :type: int
        """
        self._client_id = client_id

    @property
    def name(self):
        """
        Gets the name of this LocationAddressScheme.


        :return: The name of this LocationAddressScheme.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this LocationAddressScheme.


        :param name: The name of this LocationAddressScheme.
        :type: str
        """
        self._name = name

    @property
    def format_string(self):
        """
        Gets the format_string of this LocationAddressScheme.


        :return: The format_string of this LocationAddressScheme.
        :rtype: str
        """
        return self._format_string

    @format_string.setter
    def format_string(self, format_string):
        """
        Sets the format_string of this LocationAddressScheme.


        :param format_string: The format_string of this LocationAddressScheme.
        :type: str
        """
        self._format_string = format_string

    @property
    def location_naming_scheme(self):
        """
        Gets the location_naming_scheme of this LocationAddressScheme.


        :return: The location_naming_scheme of this LocationAddressScheme.
        :rtype: str
        """
        return self._location_naming_scheme

    @location_naming_scheme.setter
    def location_naming_scheme(self, location_naming_scheme):
        """
        Sets the location_naming_scheme of this LocationAddressScheme.


        :param location_naming_scheme: The location_naming_scheme of this LocationAddressScheme.
        :type: str
        """
        self._location_naming_scheme = location_naming_scheme

    @property
    def location_number_zero_padded(self):
        """
        Gets the location_number_zero_padded of this LocationAddressScheme.


        :return: The location_number_zero_padded of this LocationAddressScheme.
        :rtype: bool
        """
        return self._location_number_zero_padded

    @location_number_zero_padded.setter
    def location_number_zero_padded(self, location_number_zero_padded):
        """
        Sets the location_number_zero_padded of this LocationAddressScheme.


        :param location_number_zero_padded: The location_number_zero_padded of this LocationAddressScheme.
        :type: bool
        """
        self._location_number_zero_padded = location_number_zero_padded

    @property
    def location_number_minimum_number_of_digits(self):
        """
        Gets the location_number_minimum_number_of_digits of this LocationAddressScheme.


        :return: The location_number_minimum_number_of_digits of this LocationAddressScheme.
        :rtype: int
        """
        return self._location_number_minimum_number_of_digits

    @location_number_minimum_number_of_digits.setter
    def location_number_minimum_number_of_digits(self, location_number_minimum_number_of_digits):
        """
        Sets the location_number_minimum_number_of_digits of this LocationAddressScheme.


        :param location_number_minimum_number_of_digits: The location_number_minimum_number_of_digits of this LocationAddressScheme.
        :type: int
        """
        self._location_number_minimum_number_of_digits = location_number_minimum_number_of_digits

    @property
    def level_naming_scheme(self):
        """
        Gets the level_naming_scheme of this LocationAddressScheme.


        :return: The level_naming_scheme of this LocationAddressScheme.
        :rtype: str
        """
        return self._level_naming_scheme

    @level_naming_scheme.setter
    def level_naming_scheme(self, level_naming_scheme):
        """
        Sets the level_naming_scheme of this LocationAddressScheme.


        :param level_naming_scheme: The level_naming_scheme of this LocationAddressScheme.
        :type: str
        """
        self._level_naming_scheme = level_naming_scheme

    @property
    def level_number_zero_padded(self):
        """
        Gets the level_number_zero_padded of this LocationAddressScheme.


        :return: The level_number_zero_padded of this LocationAddressScheme.
        :rtype: bool
        """
        return self._level_number_zero_padded

    @level_number_zero_padded.setter
    def level_number_zero_padded(self, level_number_zero_padded):
        """
        Sets the level_number_zero_padded of this LocationAddressScheme.


        :param level_number_zero_padded: The level_number_zero_padded of this LocationAddressScheme.
        :type: bool
        """
        self._level_number_zero_padded = level_number_zero_padded

    @property
    def level_number_minimum_number_of_digits(self):
        """
        Gets the level_number_minimum_number_of_digits of this LocationAddressScheme.


        :return: The level_number_minimum_number_of_digits of this LocationAddressScheme.
        :rtype: int
        """
        return self._level_number_minimum_number_of_digits

    @level_number_minimum_number_of_digits.setter
    def level_number_minimum_number_of_digits(self, level_number_minimum_number_of_digits):
        """
        Sets the level_number_minimum_number_of_digits of this LocationAddressScheme.


        :param level_number_minimum_number_of_digits: The level_number_minimum_number_of_digits of this LocationAddressScheme.
        :type: int
        """
        self._level_number_minimum_number_of_digits = level_number_minimum_number_of_digits

    @property
    def aisle_naming_scheme(self):
        """
        Gets the aisle_naming_scheme of this LocationAddressScheme.


        :return: The aisle_naming_scheme of this LocationAddressScheme.
        :rtype: str
        """
        return self._aisle_naming_scheme

    @aisle_naming_scheme.setter
    def aisle_naming_scheme(self, aisle_naming_scheme):
        """
        Sets the aisle_naming_scheme of this LocationAddressScheme.


        :param aisle_naming_scheme: The aisle_naming_scheme of this LocationAddressScheme.
        :type: str
        """
        self._aisle_naming_scheme = aisle_naming_scheme

    @property
    def aisle_number_zero_padded(self):
        """
        Gets the aisle_number_zero_padded of this LocationAddressScheme.


        :return: The aisle_number_zero_padded of this LocationAddressScheme.
        :rtype: bool
        """
        return self._aisle_number_zero_padded

    @aisle_number_zero_padded.setter
    def aisle_number_zero_padded(self, aisle_number_zero_padded):
        """
        Sets the aisle_number_zero_padded of this LocationAddressScheme.


        :param aisle_number_zero_padded: The aisle_number_zero_padded of this LocationAddressScheme.
        :type: bool
        """
        self._aisle_number_zero_padded = aisle_number_zero_padded

    @property
    def aisle_number_minimum_number_of_digits(self):
        """
        Gets the aisle_number_minimum_number_of_digits of this LocationAddressScheme.


        :return: The aisle_number_minimum_number_of_digits of this LocationAddressScheme.
        :rtype: int
        """
        return self._aisle_number_minimum_number_of_digits

    @aisle_number_minimum_number_of_digits.setter
    def aisle_number_minimum_number_of_digits(self, aisle_number_minimum_number_of_digits):
        """
        Sets the aisle_number_minimum_number_of_digits of this LocationAddressScheme.


        :param aisle_number_minimum_number_of_digits: The aisle_number_minimum_number_of_digits of this LocationAddressScheme.
        :type: int
        """
        self._aisle_number_minimum_number_of_digits = aisle_number_minimum_number_of_digits

    @property
    def bay_naming_scheme(self):
        """
        Gets the bay_naming_scheme of this LocationAddressScheme.


        :return: The bay_naming_scheme of this LocationAddressScheme.
        :rtype: str
        """
        return self._bay_naming_scheme

    @bay_naming_scheme.setter
    def bay_naming_scheme(self, bay_naming_scheme):
        """
        Sets the bay_naming_scheme of this LocationAddressScheme.


        :param bay_naming_scheme: The bay_naming_scheme of this LocationAddressScheme.
        :type: str
        """
        self._bay_naming_scheme = bay_naming_scheme

    @property
    def bay_number_zero_padded(self):
        """
        Gets the bay_number_zero_padded of this LocationAddressScheme.


        :return: The bay_number_zero_padded of this LocationAddressScheme.
        :rtype: bool
        """
        return self._bay_number_zero_padded

    @bay_number_zero_padded.setter
    def bay_number_zero_padded(self, bay_number_zero_padded):
        """
        Sets the bay_number_zero_padded of this LocationAddressScheme.


        :param bay_number_zero_padded: The bay_number_zero_padded of this LocationAddressScheme.
        :type: bool
        """
        self._bay_number_zero_padded = bay_number_zero_padded

    @property
    def bay_number_minimum_number_of_digits(self):
        """
        Gets the bay_number_minimum_number_of_digits of this LocationAddressScheme.


        :return: The bay_number_minimum_number_of_digits of this LocationAddressScheme.
        :rtype: int
        """
        return self._bay_number_minimum_number_of_digits

    @bay_number_minimum_number_of_digits.setter
    def bay_number_minimum_number_of_digits(self, bay_number_minimum_number_of_digits):
        """
        Sets the bay_number_minimum_number_of_digits of this LocationAddressScheme.


        :param bay_number_minimum_number_of_digits: The bay_number_minimum_number_of_digits of this LocationAddressScheme.
        :type: int
        """
        self._bay_number_minimum_number_of_digits = bay_number_minimum_number_of_digits

    @property
    def create_date(self):
        """
        Gets the create_date of this LocationAddressScheme.


        :return: The create_date of this LocationAddressScheme.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this LocationAddressScheme.


        :param create_date: The create_date of this LocationAddressScheme.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this LocationAddressScheme.


        :return: The modify_date of this LocationAddressScheme.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this LocationAddressScheme.


        :param modify_date: The modify_date of this LocationAddressScheme.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this LocationAddressScheme.


        :return: The custom_fields of this LocationAddressScheme.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this LocationAddressScheme.


        :param custom_fields: The custom_fields of this LocationAddressScheme.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

